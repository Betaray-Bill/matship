{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\Temperature.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Temperature({\n  numberOfDataSets\n}) {\n  _s();\n  // Create Temperature Input Fields\n  const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\n  const createTemperatureTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"temp_input\",\n          type: \"number\",\n          onChange: event => {\n            setTemperature(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = Number(event.target.value);\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Set All\n  const setAll = () => {\n    const filled = temperature.filter(t => t !== null);\n    console.log(temperature[filled.length - 1]);\n    for (let i = filled.length; i < numberOfDataSets; i++) {\n      setTemperature(prevInputValues => {\n        const newInputValues = [...prevInputValues];\n        newInputValues[i] = temperature[filled.length - 1];\n        return newInputValues;\n      });\n    }\n  };\n  useEffect(() => {\n    const get = document.getElementsByClassName(\"temp_input\");\n    console.log(get.length);\n    for (let i = 0; i < temperature.length; i++) {\n      get[i].value = temperature[i];\n    }\n  }, [temperature]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: createTemperatureTags()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Temperature, \"wx1+4tWWdOUAD32Q9aQLj3FLAPI=\");\n_c = Temperature;\nexport default Temperature;\nvar _c;\n$RefreshReg$(_c, \"Temperature\");","map":{"version":3,"names":["React","Fragment","useEffect","useRef","useState","jsxDEV","_jsxDEV","Temperature","numberOfDataSets","_s","temperature","setTemperature","Array","fill","createTemperatureTags","inputTags","i","push","className","children","type","onChange","event","prevInputValues","newInputValues","Number","target","value","fileName","_jsxFileName","lineNumber","columnNumber","setAll","filled","filter","t","console","log","length","get","document","getElementsByClassName","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/Temperature.js"],"sourcesContent":["import React, { Fragment, useEffect, useRef } from 'react'\r\nimport { useState } from 'react';\r\n\r\nfunction Temperature({numberOfDataSets}) {\r\n    // Create Temperature Input Fields\r\n    const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\r\n    \r\n    const createTemperatureTags = () => {\r\n        const inputTags = [];\r\n        for (let i = 0; i < numberOfDataSets; i++) {\r\n        inputTags.push(\r\n            <div key={i} className='test_data_box'>\r\n                {/* <p>D{i+1}</p> */}\r\n                <input className='temp_input'\r\n                key={i} type=\"number\" onChange={(event) => {\r\n                    setTemperature((prevInputValues) => {\r\n                    const newInputValues = [...prevInputValues];\r\n                    newInputValues[i] = Number(event.target.value)\r\n                    return newInputValues;\r\n                    });\r\n                }} \r\n                />\r\n            </div>\r\n        );\r\n        }\r\n        return inputTags;\r\n    };\r\n\r\n    // Set All\r\n    const setAll = () => {  \r\n        const filled = temperature.filter((t) => t!==null)\r\n        console.log(temperature[filled.length-1])\r\n        for(let i=filled.length; i<numberOfDataSets; i++){\r\n            setTemperature((prevInputValues) => {\r\n                const newInputValues = [...prevInputValues];\r\n                newInputValues[i] = temperature[filled.length-1]\r\n                return newInputValues;\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const get = document.getElementsByClassName(\"temp_input\")\r\n        console.log(get.length)\r\n        for(let i=0; i<temperature.length; i++){\r\n            get[i].value = temperature[i]\r\n        }\r\n    }, [temperature])\r\n\r\n  return (\r\n    <Fragment>\r\n            {\r\n                createTemperatureTags()\r\n            }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Temperature"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,WAAWA,CAAC;EAACC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAACJ,gBAAgB,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;EAElF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,gBAAgB,EAAEQ,CAAC,EAAE,EAAE;MAC3CD,SAAS,CAACE,IAAI,eACVX,OAAA;QAAaY,SAAS,EAAC,eAAe;QAAAC,QAAA,eAElCb,OAAA;UAAOY,SAAS,EAAC,YAAY;UACrBE,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAGC,KAAK,IAAK;YACvCX,cAAc,CAAEY,eAAe,IAAK;cACpC,MAAMC,cAAc,GAAG,CAAC,GAAGD,eAAe,CAAC;cAC3CC,cAAc,CAACR,CAAC,CAAC,GAAGS,MAAM,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;cAC9C,OAAOH,cAAc;YACrB,CAAC,CAAC;UACN;QAAE,GANGR,CAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOL;MAAC,GAVIf,CAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWN,CACT,CAAC;IACD;IACA,OAAOhB,SAAS;EACpB,CAAC;;EAED;EACA,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACjB,MAAMC,MAAM,GAAGvB,WAAW,CAACwB,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAG,IAAI,CAAC;IAClDC,OAAO,CAACC,GAAG,CAAC3B,WAAW,CAACuB,MAAM,CAACK,MAAM,GAAC,CAAC,CAAC,CAAC;IACzC,KAAI,IAAItB,CAAC,GAACiB,MAAM,CAACK,MAAM,EAAEtB,CAAC,GAACR,gBAAgB,EAAEQ,CAAC,EAAE,EAAC;MAC7CL,cAAc,CAAEY,eAAe,IAAK;QAChC,MAAMC,cAAc,GAAG,CAAC,GAAGD,eAAe,CAAC;QAC3CC,cAAc,CAACR,CAAC,CAAC,GAAGN,WAAW,CAACuB,MAAM,CAACK,MAAM,GAAC,CAAC,CAAC;QAChD,OAAOd,cAAc;MACzB,CAAC,CAAC;IACN;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZ,MAAMqC,GAAG,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,YAAY,CAAC;IACzDL,OAAO,CAACC,GAAG,CAACE,GAAG,CAACD,MAAM,CAAC;IACvB,KAAI,IAAItB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACN,WAAW,CAAC4B,MAAM,EAAEtB,CAAC,EAAE,EAAC;MACnCuB,GAAG,CAACvB,CAAC,CAAC,CAACW,KAAK,GAAGjB,WAAW,CAACM,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEnB,oBACEJ,OAAA,CAACL,QAAQ;IAAAkB,QAAA,EAEGL,qBAAqB,CAAC;EAAC;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEf;AAACtB,EAAA,CArDQF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAuDpB,eAAeA,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}