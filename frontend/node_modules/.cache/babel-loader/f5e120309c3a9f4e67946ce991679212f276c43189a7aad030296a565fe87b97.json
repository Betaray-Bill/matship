{"ast":null,"code":"import React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  sno,\n  x_axis,\n  y_axis,\n  index,\n  excelData\n}) {\n  const handlePaste = async (e, rowIndex, axis, i, index) => {\n    // const n = dynamicArray;\n    // console.log(dynamicArray)\n    // const clipboardData = e.clipboardData || window.clipboardData;\n    // const pastedData = clipboardData.getData('text').split('\\n');\n    // const rows = pastedData.length\n    // console.log(\"Pasted\")\n    // await handleUserInput(rows)\n    // pastedData.forEach((ind, inde) => {\n    //   console.table(index+1, i+1, axis, rowIndex+1, Number(ind))\n    //   if(axis === 'x_axis'){\n    //     console.log(ind)\n    //     insertOrUpdateAtIndexForPasting(n[index][i][i][0], inde, Number(ind))\n    //   }else{\n    //     insertOrUpdateAtIndexForPasting(n[index][i][i][1], inde, Number(ind))\n    //     console.log(ind)\n    //   }\n    //   console.log(n[index][i][i])\n    // })\n    // console.log(n)\n    // await setDynamicArray(n)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Tabel \", sno]\n  }, void 0, true);\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","Table","sno","x_axis","y_axis","index","excelData","handlePaste","e","rowIndex","axis","i","children","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/TestComponents/Table.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Table({ sno, x_axis, y_axis, index, excelData }) {\r\n\r\n\r\n    const handlePaste = async(e, rowIndex, axis , i, index) => {\r\n        // const n = dynamicArray;\r\n        // console.log(dynamicArray)\r\n        // const clipboardData = e.clipboardData || window.clipboardData;\r\n        // const pastedData = clipboardData.getData('text').split('\\n');\r\n        // const rows = pastedData.length\r\n        // console.log(\"Pasted\")\r\n        // await handleUserInput(rows)\r\n        // pastedData.forEach((ind, inde) => {\r\n        //   console.table(index+1, i+1, axis, rowIndex+1, Number(ind))\r\n        //   if(axis === 'x_axis'){\r\n        //     console.log(ind)\r\n        //     insertOrUpdateAtIndexForPasting(n[index][i][i][0], inde, Number(ind))\r\n        //   }else{\r\n        //     insertOrUpdateAtIndexForPasting(n[index][i][i][1], inde, Number(ind))\r\n        //     console.log(ind)\r\n        //   }\r\n        //   console.log(n[index][i][i])\r\n        // })\r\n        // console.log(n)\r\n        // await setDynamicArray(n)\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    Tabel {sno}\r\n        {/* <table border=\"1\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{x_axis[index]}</th>\r\n                      <th>{y_axis[index]}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {excelData.map((row, rowIndex) => (\r\n                      <tr key={rowIndex}>\r\n                        <td>\r\n                          <input\r\n                            type=\"number\"\r\n                            onChange={(e) => {\r\n                              console.log(\"sno\", sno ,\":\", e.target.value)\r\n                            }}\r\n                            // value={dynamicArray[index][i][i][0][rowIndex]}\r\n                            // onPaste={(e) => handlePaste(e,rowIndex, 'x_axis', i, index)}\r\n                            // onChange={(e) => handleInputChange(e, rowIndex, 'x_axis', i, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"number\"\r\n                            // value={dynamicArray[index][i][i][1][rowIndex]}\r\n                            // onPaste={(e) => handlePaste(e,rowIndex, 'y_axis', i, index)}\r\n                            // onChange={(e) => handleInputChange(e, rowIndex, 'y_axis', i, index)}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Table"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,KAAKA,CAAC;EAAEC,GAAG;EAAEC,MAAM;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAGtD,MAAMC,WAAW,GAAG,MAAAA,CAAMC,CAAC,EAAEC,QAAQ,EAAEC,IAAI,EAAGC,CAAC,EAAEN,KAAK,KAAK;IACvD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAMH,oBACEL,OAAA,CAAAF,SAAA;IAAAc,QAAA,GAAE,QACI,EAACV,GAAG;EAAA,eAkCR,CAAC;AAEP;AAACW,EAAA,GApEQZ,KAAK;AAsEd,eAAeA,KAAK;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}