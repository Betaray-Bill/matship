{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\TestCategoryComponent.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestCategoryComponent({\n  numberOfDataSets,\n  formData,\n  type,\n  component\n}) {\n  _s();\n  // Create Temperature Input Fields\n  const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\n  const createTemperatureTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"temp_input\",\n          type: \"number\",\n          onChange: event => {\n            setTemperature(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = Number(event.target.value);\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), i === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setAll\",\n          onClick: setAll,\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"chevron-forward-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this) : \"\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Set All\n  const setAll = () => {\n    const filled = temperature.filter(t => t !== null);\n    for (let i = filled.length; i < numberOfDataSets; i++) {\n      setTemperature(prevInputValues => {\n        const newInputValues = [...prevInputValues];\n        newInputValues[i] = temperature[0];\n        return newInputValues;\n      });\n    }\n  };\n  useEffect(() => {\n    const getInputTags = document.getElementsByClassName(\"temp_input\");\n    for (let i = 0; i < temperature.length; i++) {\n      getInputTags[i].value = temperature[0];\n    }\n  }, [temperature]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comp_header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"add-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), \" \", component]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_container_inputs\",\n      children: component === \"Temperature\" ? createTemperatureTags() : component === \"Conditioned\" ? \"\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(TestCategoryComponent, \"wx1+4tWWdOUAD32Q9aQLj3FLAPI=\");\n_c = TestCategoryComponent;\nexport default TestCategoryComponent;\nvar _c;\n$RefreshReg$(_c, \"TestCategoryComponent\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","jsxDEV","_jsxDEV","TestCategoryComponent","numberOfDataSets","formData","type","component","_s","temperature","setTemperature","Array","fill","createTemperatureTags","inputTags","i","push","className","children","onChange","event","prevInputValues","newInputValues","Number","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setAll","name","filled","filter","t","length","getInputTags","document","getElementsByClassName","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/TestCategoryComponent.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\n\r\nfunction TestCategoryComponent({ numberOfDataSets, formData, type, component }) {\r\n    // Create Temperature Input Fields\r\n    const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\r\n\r\n    const createTemperatureTags = () => {\r\n        const inputTags = [];\r\n        for (let i = 0; i < numberOfDataSets; i++) {\r\n            inputTags.push(\r\n                <div key={i} className='test_data_box'>\r\n                    <input\r\n                        className='temp_input'\r\n                        key={i}\r\n                        type=\"number\"\r\n                        onChange={(event) => {\r\n                            setTemperature((prevInputValues) => {\r\n                                const newInputValues = [...prevInputValues];\r\n                                newInputValues[i] = Number(event.target.value);\r\n                                return newInputValues;\r\n                            });\r\n                        }}\r\n                    />\r\n                    {i === 0 ? (\r\n                        <div className=\"setAll\" onClick={setAll}>\r\n                            <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n        return inputTags;\r\n    };\r\n\r\n    // Set All\r\n    const setAll = () => {\r\n        const filled = temperature.filter((t) => t !== null);\r\n        for (let i = filled.length; i < numberOfDataSets; i++) {\r\n            setTemperature((prevInputValues) => {\r\n                const newInputValues = [...prevInputValues];\r\n                newInputValues[i] = temperature[0];\r\n                return newInputValues;\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getInputTags = document.getElementsByClassName(\"temp_input\");\r\n        for (let i = 0; i < temperature.length; i++) {\r\n            getInputTags[i].value = temperature[0];\r\n        }\r\n    }, [temperature]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"comp_header\">\r\n                <p>\r\n                    <ion-icon name=\"add-outline\"></ion-icon> {component}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"test_container_inputs\">\r\n                {component === \"Temperature\" ? createTemperatureTags() : component === \"Conditioned\" ? \"\" : \"\"}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TestCategoryComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,qBAAqBA,CAAC;EAAEC,gBAAgB;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5E;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAACP,gBAAgB,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;EAElF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,gBAAgB,EAAEW,CAAC,EAAE,EAAE;MACvCD,SAAS,CAACE,IAAI,eACVd,OAAA;QAAae,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAClChB,OAAA;UACIe,SAAS,EAAC,YAAY;UAEtBX,IAAI,EAAC,QAAQ;UACba,QAAQ,EAAGC,KAAK,IAAK;YACjBV,cAAc,CAAEW,eAAe,IAAK;cAChC,MAAMC,cAAc,GAAG,CAAC,GAAGD,eAAe,CAAC;cAC3CC,cAAc,CAACP,CAAC,CAAC,GAAGQ,MAAM,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;cAC9C,OAAOH,cAAc;YACzB,CAAC,CAAC;UACN;QAAE,GARGP,CAAC;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAST,CAAC,EACDd,CAAC,KAAK,CAAC,gBACJb,OAAA;UAAKe,SAAS,EAAC,QAAQ;UAACa,OAAO,EAAEC,MAAO;UAAAb,QAAA,eACpChB,OAAA;YAAU8B,IAAI,EAAC;UAAyB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,GAEN,EACH;MAAA,GAnBKd,CAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBN,CACT,CAAC;IACL;IACA,OAAOf,SAAS;EACpB,CAAC;;EAED;EACA,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACjB,MAAME,MAAM,GAAGxB,WAAW,CAACyB,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC;IACpD,KAAK,IAAIpB,CAAC,GAAGkB,MAAM,CAACG,MAAM,EAAErB,CAAC,GAAGX,gBAAgB,EAAEW,CAAC,EAAE,EAAE;MACnDL,cAAc,CAAEW,eAAe,IAAK;QAChC,MAAMC,cAAc,GAAG,CAAC,GAAGD,eAAe,CAAC;QAC3CC,cAAc,CAACP,CAAC,CAAC,GAAGN,WAAW,CAAC,CAAC,CAAC;QAClC,OAAOa,cAAc;MACzB,CAAC,CAAC;IACN;EACJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZ,MAAMsC,YAAY,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,YAAY,CAAC;IAClE,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,CAAC2B,MAAM,EAAErB,CAAC,EAAE,EAAE;MACzCsB,YAAY,CAACtB,CAAC,CAAC,CAACU,KAAK,GAAGhB,WAAW,CAAC,CAAC,CAAC;IAC1C;EACJ,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACIP,OAAA,CAACJ,QAAQ;IAAAoB,QAAA,gBACLhB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBhB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAU8B,IAAI,EAAC;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,KAAC,EAACtB,SAAS;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3B,OAAA;MAAKe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACjCX,SAAS,KAAK,aAAa,GAAGM,qBAAqB,CAAC,CAAC,GAAGN,SAAS,KAAK,aAAa,GAAG,EAAE,GAAG;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEnB;AAACrB,EAAA,CAlEQL,qBAAqB;AAAAqC,EAAA,GAArBrC,qBAAqB;AAoE9B,eAAeA,qBAAqB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}