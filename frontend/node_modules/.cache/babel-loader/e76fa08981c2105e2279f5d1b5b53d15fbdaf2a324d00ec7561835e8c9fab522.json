{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\Temperature.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Temperature({\n  numberOfDataSets\n}) {\n  _s();\n  // Create Temperature Input Fields\n  const [temperature, setTemperature] = useState([]);\n  const createTemperatureTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: event => {\n            setTemperature(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = Number(event.target.value);\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n  const setAll = () => {\n    console.log(\"object\");\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), numberOfDataSets, /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: setAll,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), createTemperatureTags()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Temperature, \"DiWJEzXk+BXr21yJzPy1cii/OiA=\");\n_c = Temperature;\nexport default Temperature;\nvar _c;\n$RefreshReg$(_c, \"Temperature\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","Temperature","numberOfDataSets","_s","temperature","setTemperature","createTemperatureTags","inputTags","i","push","className","children","type","onChange","event","prevInputValues","newInputValues","Number","target","value","fileName","_jsxFileName","lineNumber","columnNumber","setAll","console","log","onClick","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/Temperature.js"],"sourcesContent":["import React, { Fragment } from 'react'\r\nimport { useState } from 'react';\r\n\r\nfunction Temperature({numberOfDataSets}) {\r\n\r\n\r\n    // Create Temperature Input Fields\r\n  const [temperature, setTemperature] = useState([]);\r\n \r\n  const createTemperatureTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <input \r\n              key={i} type=\"number\" onChange={(event) => {\r\n                setTemperature((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = Number(event.target.value)\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  };\r\n\r\n  const setAll = () => { \r\n\r\n\r\n\r\n\r\n    \r\n    console.log(\"object\")\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n        <h2>Temperature</h2>\r\n            {\r\n                numberOfDataSets\r\n            }\r\n            <p onClick={setAll}>All</p>\r\n            {\r\n                createTemperatureTags()\r\n            }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Temperature"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,WAAWA,CAAC;EAACC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAGrC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,gBAAgB,EAAEM,CAAC,EAAE,EAAE;MACzCD,SAAS,CAACE,IAAI,eACZT,OAAA;QAAaU,SAAS,EAAC,eAAe;QAAAC,QAAA,eAElCX,OAAA;UACUY,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAGC,KAAK,IAAK;YACzCT,cAAc,CAAEU,eAAe,IAAK;cAClC,MAAMC,cAAc,GAAG,CAAC,GAAGD,eAAe,CAAC;cAC3CC,cAAc,CAACR,CAAC,CAAC,GAAGS,MAAM,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;cAC9C,OAAOH,cAAc;YACvB,CAAC,CAAC;UACJ;QAAE,GANGR,CAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP;MAAC,GAVIf,CAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWN,CACP,CAAC;IACH;IACA,OAAOhB,SAAS;EAClB,CAAC;EAED,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IAMnBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC;EAED,oBACE1B,OAAA,CAACH,QAAQ;IAAAc,QAAA,gBACLX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEZrB,gBAAgB,eAEpBF,OAAA;MAAG2B,OAAO,EAAEH,MAAO;MAAAb,QAAA,EAAC;IAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEvBjB,qBAAqB,CAAC,CAAC;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEf;AAACpB,EAAA,CAhDQF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAkDpB,eAAeA,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}