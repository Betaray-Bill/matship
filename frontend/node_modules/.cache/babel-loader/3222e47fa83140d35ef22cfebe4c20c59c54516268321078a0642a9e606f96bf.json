{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\Upload.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from 'react'\n// import Nav from '../Components/Nav'\n// import '../Styles/Pages/Upload.css'\n// import Dropdown from '../Components/Dropdown';\n// import {Family, masterClass, subClass} from \"../TypesOfMaterials.js\"\n// import { useSelector } from 'react-redux';\n// import debounce from 'lodash/debounce';\n// import axios from 'axios';\n// import TestStandards from './UPLOAD/TestStandards.js';\n\n// function Upload() {\n//   const scrollToResult = useRef();\n//   const arr = [];\n\n//   const [showElements, setShowElements] = useState(false)\n//   const [isLegacyYes, setIsLegacyYes] = useState(false);\n//   const [isLegacyNo, setIsLegacyNo] = useState(false);\n\n//   const {currentUser} = useSelector(state => state.user)\n\n//   const [addData, setAddData] = useState({\n//     MasterClass:\"\",\n//     subClass:\"\",\n//     Family:\"\",\n//     productName:\"\",\n//     Sustainability:\"\",\n//     Filler:\"\",\n//     DeliveryForm:\"\",\n//     company:currentUser ? currentUser.company : \"\",\n//     companyEntity:currentUser ? currentUser.companyEntity : \"\",\n//     isLegacy:false\n//   })\n\n//   const submitData = async() => {\n//     console.log(addData)\n//     // const addDataIsempty = Object.values(addData).some(value => !value)  \n//     setAddData(\n//       {...addData, isLegacy: isLegacyYes ? isLegacyYes : isLegacyNo}\n//     )\n//     console.log(addData)\n//     if(!addData.isLegacy){\n//       alert(\"This is an unapproved material. This will be sent to Matship experts for approval. It may take 1 week\");\n//     }\n\n//     try{\n//       const res = await fetch(\"/api/materials/addMaterial\", {\n//         method:'POST',\n//         headers:{\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(addData)\n//       })\n\n//       const data = await res.json();\n//       console.log(data)\n\n//     }catch(err){\n//       console.log(err)\n//     }\n//   }\n\n//   const toggleShowContent = () => {\n//     setShowElements(true)\n//     setClicked(!clicked)\n//     setAddData({\n//       MasterClass:\"\",\n//       subClass:\"\",\n//       Family:\"\",\n//       productName:\"\",\n//       Sustainability:\"\",\n//       Filler:\"\",\n//       DeliveryForm:\"\",\n//       company:currentUser ? currentUser.company : \"\",\n//       companyEntity:currentUser ? currentUser.companyEntity : \"\",\n//       isLegacy:false\n//     })\n//     console.log(addData)\n//   }\n\n//   const [companyMat, setCompanyMat] = useState([])\n//   const handleCheckboxChange = async(a) => {\n//     console.log(a)\n//     if(a===\"yes\"){\n//       setIsLegacyYes((p) => !p)\n//       setIsLegacyNo(false)\n//       console.log(\"object\", currentUser.company)\n//       try{\n//         const res = await fetch(`/api/materials/${currentUser.companyEntity}/getAllProducts`)\n//         const data = await res.json();\n//         console.log(data)\n//         setCompanyMat(data)\n//         return data\n//       }catch(err){\n//         console.log(\"Cannot get the materials of this company\")\n//       }\n//     }else{\n//       setIsLegacyNo((p) => !p)\n//       setIsLegacyYes(false)\n//       try{\n//         const res = await fetch('/api/materials/getall')\n//         const data = await res.json();\n//         console.log(data)\n//         data.forEach(async(e) => {\n//           await arr.push(e.productName)\n//         })\n//         console.log(\"ASDasda\", arr)\n//         await setCompanyMat(arr)\n//         return data\n//       }catch(err){\n//         console.log(\"Cannot get the materials of this company\")\n//       }\n//     }\n//   };\n\n//   const [receivedData, setReceivedData] = useState('');\n\n//   const handleDataReceived = async(data) => {\n//     await setReceivedData(data);\n//     await setAddData({...addData, MasterClass:data})\n//   };\n//   const [receivedSubClass, setReceivedSubClass] = useState('');\n\n//   const handleDataSubClass =async(data) => {\n//     setReceivedSubClass(data)\n//     await setAddData({...addData, subClass:data})\n\n//   }\n//   const [receivedFamily, setReceivedFamily] = useState('');\n\n//   const handleDataFamily = async(data) => {\n//     setReceivedFamily(data)\n//     await setAddData({...addData, Family:data})\n//   }\n\n//   // Search Database\n//   const [value, setValue] = useState('')\n\n//   // Search Material\n//   const debouncedSearch = debounce(async (e) => {\n//     console.log(\"Send\", e)\n//     onSearch(value)\n//   }, 100);\n\n//   const onSearch = async(e) => {\n//     const {data} = await axios.get(`api/materials/getuploadsearch/${value}`);\n//     console.log(data.ans)\n//     setCompanyMat([])\n//     data.ans.forEach((i) => {\n//       setCompanyMat((p) => [...p, i.productName])\n//     })\n//   }\n\n//   const handleChange = (e) => {\n//     debouncedSearch(e.target.value);\n//     // onSearch(e.target.value);\n//   }\n\n//   const handleKeyPress = (event) => {\n\n//     if (event.key === 'Enter') {\n//       event.preventDefault()\n//       setShowElements(true)\n//       if(event.target.value){\n//         debouncedSearch(value)\n//       }\n//     }\n//   };\n\n//   // Search Onclick\n//   const [clicked, setClicked] = useState(false)\n\n//   //get Single Product\n//   const getSingleProduct = async(e) => {\n//     setValue(e)\n//     const {data} = await axios.get(`api/materials/getsinglematerial/${e}`);\n//     console.log(data)\n//     // setClicked(!clicked)\n//     setShowElements(true)\n//     setAddData(data.getMaterial)\n//     console.log(addData)\n//   }\n\n//   // Next to Test Standards\n//   const [isNextTestStandard, setIsNextTestStandard] = useState(false);\n\n//   const nextTestStandard = () => {\n//     setIsNextTestStandard(true);\n//     scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\n//   }\n//   return (\n//     <>\n//         <Nav />\n//         <div className=\"upload_wrapper\">\n//           <div className=\"upload_container\">\n//               <div className=\"upload_header\">\n//                 <p>Base Material Info</p>\n//                 <div className=\"hr\"></div>\n//               </div>\n//               <form action=\"\">\n//                 {/* Legacy Data */}\n//                 <div className=\"form_content\">\n//                   <p>Legacy data</p>\n//                   <label htmlFor=\"\">\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"yes\")}>\n//                       {\n//                         isLegacyYes ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\n//                       }\n//                         Yes\n//                       </div>\n//                   </label>\n//                   <label htmlFor=\"\">\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"no\")}>\n//                       {\n//                         isLegacyNo ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\n//                       }\n//                         No\n//                       </div>\n//                   </label>\n//                 </div>\n\n//                 <div className=\"search_section\">\n//                   <div className=\"form_content legacy_search\">\n//                   {/* search DB */}\n//                     <input type=\"text\" \n//                       placeholder={(isLegacyNo && isLegacyYes) ? 'Search Materials' \n//                           :  \n//                         ( isLegacyYes ? `Search ${currentUser.company}` : `Search All Materials` )} \n//                         onChange={(e) => {setValue(e.target.value) }}\n//                         onKeyPress={handleKeyPress}\n//                         onClick={(e) => setClicked(!clicked)}\n//                         value={value}\n//                     />\n//                     <ion-icon name=\"search-outline\"></ion-icon>\n//                   </div>\n\n//                   {\n//                     clicked ?  \n//                     <div className=\"search_suggestion\">\n//                       <div className='suggested'>\n//                         {\n//                           companyMat && companyMat.map((e) => (\n//                             <p key={e} onClick={()=>getSingleProduct(e)}>{e}</p>\n//                           ))\n//                         }\n//                       </div>\n//                       <div className=\"form_content\">\n//                         <div className=\"btn\" onClick={toggleShowContent}>\n//                           <ion-icon name=\"add-outline\"></ion-icon> Add New\n//                         </div>\n//                       </div>\n//                     </div>\n//                     :\n//                     \"\"\n//                   }\n\n//                 </div>\n\n//                 {\n//                   showElements && (\n//                     <>\n//                       <div className=\"close\">\n//                         <div className=\"close_btn\" onClick={(e) => { setShowElements(false)}}>\n//                           <ion-icon name=\"close-outline\"></ion-icon> Close\n//                         </div>\n//                       </div>\n//                       <div className=\"add_element_container\">\n//                         <div className=\"ade_content\">\n//                               <Dropdown header={\"Class\"} data={masterClass} sendToParent={handleDataReceived}/>\n//                         </div>\n//                         <div className=\"ade_content\">\n//                               <Dropdown header={\"Sub Class\"} data={receivedData && subClass[receivedData].subClass }  sendToParent={handleDataSubClass}/>\n//                         </div>\n//                         <div className=\"ade_content\">\n//                               <Dropdown header={\"Family\"} data={receivedSubClass && Family[receivedSubClass].subClass} sendToParent={handleDataFamily}/>\n//                         </div>\n//                         {\n//                           isLegacyYes ? \n//                           <div className=\"ade_content_input\">\n//                             <label htmlFor=\"\">Company Name</label>\n//                             <input type=\"text\" readOnly placeholder={currentUser.company} style={{\"color\":\"black\"}}/>\n//                           </div> :\n//                           <div className=\"ade_content_input\">\n//                             <label htmlFor=\"\">Company Name</label>\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\n//                           </div>\n//                         }\n//                         <div className=\"ade_content_input\">\n//                           <label htmlFor=\"\">Product Name</label>\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, productName:e.target.value})} value={addData.productName && addData.productName} name=\"productName\" placeholder=''/>\n//                         </div>\n//                         <div className=\"ade_content_input\">\n//                           <label htmlFor=\"\">Sustainability</label>\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Sustainability:e.target.value})} value={addData.Sustainability && addData.Sustainability} name=\"Sustainability\" placeholder=''/>\n//                         </div>\n//                         <div className=\"ade_content_input\">\n//                           <label htmlFor=\"\">Filler</label>\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Filler:e.target.value})} value={addData.Filler && addData.Filler} name=\"Filler\" placeholder=''/>\n//                         </div>\n//                         <div className=\"ade_content_input\">\n//                           <label htmlFor=\"\">Delivery form</label>\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} value={addData.DeliveryForm && addData.DeliveryForm} name=\"Delivery form\" placeholder=''/>\n//                         </div>\n//                         {\n//                           isLegacyNo ? \n//                           <div className=\"ade_content_input\">\n//                             <label htmlFor=\"\">Material WebSite</label>\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Material WebSite\" placeholder=''/>\n//                           </div> : null\n//                         }\n//                       </div>\n//                       {/* onClick={submitData} */}\n//                     </>\n//                   )\n//                 }\n\n//               </form>\n//               <div className=\"next\">\n//                 <div className=\"btn\" onClick={nextTestStandard} ref={scrollToResult}>Next</div>\n//               </div>\n//           </div>\n\n//           {\n//             isNextTestStandard && <TestStandards />\n//           }\n//         </div>\n//     </>\n//   )\n// }\n\n// export default Upload\n\nimport React, { useRef, useState } from 'react';\nimport Nav from '../Components/Nav';\nimport BaseMaterialinfo from './UPLOAD/BaseMaterialinfo';\nimport TestStandards from './UPLOAD/TestStandards';\nimport '../Styles/Pages/Upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  // Click Previous and Next \n  const formElement = useRef(null);\n  const [currentPage, setCurrentPage] = useState(0);\n  const formPages = [/*#__PURE__*/_jsxDEV(BaseMaterialinfo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TestStandards, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this)];\n  const formname = [\"Base material info\", \"Select Test Standard\"];\n  const goToFormPage = i => {\n    console.log(i + 1);\n    console.log(formPages[i]);\n    formElement.current.style.color = \"red\";\n    console.log(formElement.current.h4);\n    if (i !== currentPage) {\n      setCurrentPage(i);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_header_container\",\n        children: formname.map((e, _i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_name\",\n          ref: formElement,\n          onClick: () => goToFormPage(_i),\n          children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"pencil-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, _i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), formPages[currentPage]]\n  }, void 0, true);\n}\n_s(Upload, \"mi1EoGfyahngSnRfnKge5oPYrW4=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useRef","useState","Nav","BaseMaterialinfo","TestStandards","jsxDEV","_jsxDEV","Fragment","_Fragment","Upload","_s","formElement","currentPage","setCurrentPage","formPages","fileName","_jsxFileName","lineNumber","columnNumber","formname","goToFormPage","i","console","log","current","style","color","h4","children","className","map","e","_i","ref","onClick","name","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/Upload.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from 'react'\r\n// import Nav from '../Components/Nav'\r\n// import '../Styles/Pages/Upload.css'\r\n// import Dropdown from '../Components/Dropdown';\r\n// import {Family, masterClass, subClass} from \"../TypesOfMaterials.js\"\r\n// import { useSelector } from 'react-redux';\r\n// import debounce from 'lodash/debounce';\r\n// import axios from 'axios';\r\n// import TestStandards from './UPLOAD/TestStandards.js';\r\n\r\n\r\n// function Upload() {\r\n//   const scrollToResult = useRef();\r\n//   const arr = [];\r\n  \r\n//   const [showElements, setShowElements] = useState(false)\r\n//   const [isLegacyYes, setIsLegacyYes] = useState(false);\r\n//   const [isLegacyNo, setIsLegacyNo] = useState(false);\r\n\r\n//   const {currentUser} = useSelector(state => state.user)\r\n\r\n//   const [addData, setAddData] = useState({\r\n//     MasterClass:\"\",\r\n//     subClass:\"\",\r\n//     Family:\"\",\r\n//     productName:\"\",\r\n//     Sustainability:\"\",\r\n//     Filler:\"\",\r\n//     DeliveryForm:\"\",\r\n//     company:currentUser ? currentUser.company : \"\",\r\n//     companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n//     isLegacy:false\r\n//   })\r\n\r\n//   const submitData = async() => {\r\n//     console.log(addData)\r\n//     // const addDataIsempty = Object.values(addData).some(value => !value)  \r\n//     setAddData(\r\n//       {...addData, isLegacy: isLegacyYes ? isLegacyYes : isLegacyNo}\r\n//     )\r\n//     console.log(addData)\r\n//     if(!addData.isLegacy){\r\n//       alert(\"This is an unapproved material. This will be sent to Matship experts for approval. It may take 1 week\");\r\n//     }\r\n\r\n//     try{\r\n//       const res = await fetch(\"/api/materials/addMaterial\", {\r\n//         method:'POST',\r\n//         headers:{\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(addData)\r\n//       })\r\n\r\n//       const data = await res.json();\r\n//       console.log(data)\r\n\r\n//     }catch(err){\r\n//       console.log(err)\r\n//     }\r\n//   }\r\n\r\n//   const toggleShowContent = () => {\r\n//     setShowElements(true)\r\n//     setClicked(!clicked)\r\n//     setAddData({\r\n//       MasterClass:\"\",\r\n//       subClass:\"\",\r\n//       Family:\"\",\r\n//       productName:\"\",\r\n//       Sustainability:\"\",\r\n//       Filler:\"\",\r\n//       DeliveryForm:\"\",\r\n//       company:currentUser ? currentUser.company : \"\",\r\n//       companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n//       isLegacy:false\r\n//     })\r\n//     console.log(addData)\r\n//   }\r\n\r\n//   const [companyMat, setCompanyMat] = useState([])\r\n//   const handleCheckboxChange = async(a) => {\r\n//     console.log(a)\r\n//     if(a===\"yes\"){\r\n//       setIsLegacyYes((p) => !p)\r\n//       setIsLegacyNo(false)\r\n//       console.log(\"object\", currentUser.company)\r\n//       try{\r\n//         const res = await fetch(`/api/materials/${currentUser.companyEntity}/getAllProducts`)\r\n//         const data = await res.json();\r\n//         console.log(data)\r\n//         setCompanyMat(data)\r\n//         return data\r\n//       }catch(err){\r\n//         console.log(\"Cannot get the materials of this company\")\r\n//       }\r\n//     }else{\r\n//       setIsLegacyNo((p) => !p)\r\n//       setIsLegacyYes(false)\r\n//       try{\r\n//         const res = await fetch('/api/materials/getall')\r\n//         const data = await res.json();\r\n//         console.log(data)\r\n//         data.forEach(async(e) => {\r\n//           await arr.push(e.productName)\r\n//         })\r\n//         console.log(\"ASDasda\", arr)\r\n//         await setCompanyMat(arr)\r\n//         return data\r\n//       }catch(err){\r\n//         console.log(\"Cannot get the materials of this company\")\r\n//       }\r\n//     }\r\n//   };\r\n\r\n\r\n//   const [receivedData, setReceivedData] = useState('');\r\n\r\n//   const handleDataReceived = async(data) => {\r\n//     await setReceivedData(data);\r\n//     await setAddData({...addData, MasterClass:data})\r\n//   };\r\n//   const [receivedSubClass, setReceivedSubClass] = useState('');\r\n\r\n//   const handleDataSubClass =async(data) => {\r\n//     setReceivedSubClass(data)\r\n//     await setAddData({...addData, subClass:data})\r\n\r\n//   }\r\n//   const [receivedFamily, setReceivedFamily] = useState('');\r\n\r\n//   const handleDataFamily = async(data) => {\r\n//     setReceivedFamily(data)\r\n//     await setAddData({...addData, Family:data})\r\n//   }\r\n\r\n//   // Search Database\r\n//   const [value, setValue] = useState('')\r\n\r\n//   // Search Material\r\n//   const debouncedSearch = debounce(async (e) => {\r\n//     console.log(\"Send\", e)\r\n//     onSearch(value)\r\n//   }, 100);\r\n\r\n\r\n//   const onSearch = async(e) => {\r\n//     const {data} = await axios.get(`api/materials/getuploadsearch/${value}`);\r\n//     console.log(data.ans)\r\n//     setCompanyMat([])\r\n//     data.ans.forEach((i) => {\r\n//       setCompanyMat((p) => [...p, i.productName])\r\n//     })\r\n//   }\r\n\r\n//   const handleChange = (e) => {\r\n//     debouncedSearch(e.target.value);\r\n//     // onSearch(e.target.value);\r\n//   }\r\n\r\n//   const handleKeyPress = (event) => {\r\n\r\n//     if (event.key === 'Enter') {\r\n//       event.preventDefault()\r\n//       setShowElements(true)\r\n//       if(event.target.value){\r\n//         debouncedSearch(value)\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Search Onclick\r\n//   const [clicked, setClicked] = useState(false)\r\n\r\n//   //get Single Product\r\n//   const getSingleProduct = async(e) => {\r\n//     setValue(e)\r\n//     const {data} = await axios.get(`api/materials/getsinglematerial/${e}`);\r\n//     console.log(data)\r\n//     // setClicked(!clicked)\r\n//     setShowElements(true)\r\n//     setAddData(data.getMaterial)\r\n//     console.log(addData)\r\n//   }\r\n\r\n//   // Next to Test Standards\r\n//   const [isNextTestStandard, setIsNextTestStandard] = useState(false);\r\n\r\n//   const nextTestStandard = () => {\r\n//     setIsNextTestStandard(true);\r\n//     scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n//   }\r\n//   return (\r\n//     <>\r\n//         <Nav />\r\n//         <div className=\"upload_wrapper\">\r\n//           <div className=\"upload_container\">\r\n//               <div className=\"upload_header\">\r\n//                 <p>Base Material Info</p>\r\n//                 <div className=\"hr\"></div>\r\n//               </div>\r\n//               <form action=\"\">\r\n//                 {/* Legacy Data */}\r\n//                 <div className=\"form_content\">\r\n//                   <p>Legacy data</p>\r\n//                   <label htmlFor=\"\">\r\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"yes\")}>\r\n//                       {\r\n//                         isLegacyYes ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n//                       }\r\n//                         Yes\r\n//                       </div>\r\n//                   </label>\r\n//                   <label htmlFor=\"\">\r\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"no\")}>\r\n//                       {\r\n//                         isLegacyNo ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n//                       }\r\n//                         No\r\n//                       </div>\r\n//                   </label>\r\n//                 </div>\r\n\r\n//                 <div className=\"search_section\">\r\n//                   <div className=\"form_content legacy_search\">\r\n//                   {/* search DB */}\r\n//                     <input type=\"text\" \r\n//                       placeholder={(isLegacyNo && isLegacyYes) ? 'Search Materials' \r\n//                           :  \r\n//                         ( isLegacyYes ? `Search ${currentUser.company}` : `Search All Materials` )} \r\n//                         onChange={(e) => {setValue(e.target.value) }}\r\n//                         onKeyPress={handleKeyPress}\r\n//                         onClick={(e) => setClicked(!clicked)}\r\n//                         value={value}\r\n//                     />\r\n//                     <ion-icon name=\"search-outline\"></ion-icon>\r\n//                   </div>\r\n\r\n//                   {\r\n//                     clicked ?  \r\n//                     <div className=\"search_suggestion\">\r\n//                       <div className='suggested'>\r\n//                         {\r\n//                           companyMat && companyMat.map((e) => (\r\n//                             <p key={e} onClick={()=>getSingleProduct(e)}>{e}</p>\r\n//                           ))\r\n//                         }\r\n//                       </div>\r\n//                       <div className=\"form_content\">\r\n//                         <div className=\"btn\" onClick={toggleShowContent}>\r\n//                           <ion-icon name=\"add-outline\"></ion-icon> Add New\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     :\r\n//                     \"\"\r\n//                   }\r\n\r\n//                 </div>\r\n\r\n//                 {\r\n//                   showElements && (\r\n//                     <>\r\n//                       <div className=\"close\">\r\n//                         <div className=\"close_btn\" onClick={(e) => { setShowElements(false)}}>\r\n//                           <ion-icon name=\"close-outline\"></ion-icon> Close\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"add_element_container\">\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Class\"} data={masterClass} sendToParent={handleDataReceived}/>\r\n//                         </div>\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Sub Class\"} data={receivedData && subClass[receivedData].subClass }  sendToParent={handleDataSubClass}/>\r\n//                         </div>\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Family\"} data={receivedSubClass && Family[receivedSubClass].subClass} sendToParent={handleDataFamily}/>\r\n//                         </div>\r\n//                         {\r\n//                           isLegacyYes ? \r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Company Name</label>\r\n//                             <input type=\"text\" readOnly placeholder={currentUser.company} style={{\"color\":\"black\"}}/>\r\n//                           </div> :\r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Company Name</label>\r\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\r\n//                           </div>\r\n//                         }\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Product Name</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, productName:e.target.value})} value={addData.productName && addData.productName} name=\"productName\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Sustainability</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Sustainability:e.target.value})} value={addData.Sustainability && addData.Sustainability} name=\"Sustainability\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Filler</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Filler:e.target.value})} value={addData.Filler && addData.Filler} name=\"Filler\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Delivery form</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} value={addData.DeliveryForm && addData.DeliveryForm} name=\"Delivery form\" placeholder=''/>\r\n//                         </div>\r\n//                         {\r\n//                           isLegacyNo ? \r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Material WebSite</label>\r\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Material WebSite\" placeholder=''/>\r\n//                           </div> : null\r\n//                         }\r\n//                       </div>\r\n//                       {/* onClick={submitData} */}\r\n//                     </>\r\n//                   )\r\n//                 }\r\n\r\n//               </form>\r\n//               <div className=\"next\">\r\n//                 <div className=\"btn\" onClick={nextTestStandard} ref={scrollToResult}>Next</div>\r\n//               </div>\r\n//           </div>\r\n\r\n//           {\r\n//             isNextTestStandard && <TestStandards />\r\n//           }\r\n//         </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Upload\r\n\r\n\r\nimport React, { useRef, useState } from 'react'\r\nimport Nav from '../Components/Nav'\r\nimport BaseMaterialinfo from './UPLOAD/BaseMaterialinfo';\r\nimport TestStandards from './UPLOAD/TestStandards';\r\nimport '../Styles/Pages/Upload.css'\r\n\r\nfunction Upload() {\r\n  // Click Previous and Next \r\n  const formElement = useRef(null);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const formPages = [\r\n    <BaseMaterialinfo />,\r\n    <TestStandards />\r\n  ];\r\n\r\n  const formname = [\r\n    \"Base material info\",\r\n    \"Select Test Standard\"\r\n  ]\r\n\r\n  const goToFormPage = (i) => {\r\n    console.log(i+1)\r\n    console.log(formPages[i])\r\n    formElement.current.style.color=\"red\";\r\n    console.log(formElement.current.h4)\r\n    if(i!==currentPage){\r\n      setCurrentPage(i)\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"form_header\">\r\n        <div className=\"form_header_container\">\r\n        {\r\n          formname.map((e, _i) => (\r\n            <div className=\"page_name\" ref={formElement} onClick={() => goToFormPage(_i)} key={_i}>\r\n              <ion-icon name=\"pencil-outline\"></ion-icon>\r\n              <h4>{e}</h4>\r\n            </div>\r\n          ))\r\n        }\r\n        {/* <ion-icon name=\"checkmark-outline\"></ion-icon> */}\r\n        </div>\r\n      \r\n      </div>\r\n\r\n      {\r\n        formPages[currentPage]\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Upload"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}