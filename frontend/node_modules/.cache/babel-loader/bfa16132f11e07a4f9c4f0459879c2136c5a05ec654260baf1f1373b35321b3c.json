{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527.js\",\n  _s = $RefreshSig$();\nimport React, { Children, Fragment, useEffect, useState } from 'react';\nimport \"../../../Styles/Pages/Test.css\";\nimport { useDispatch } from 'react-redux';\nimport { testStandardInfo } from '../../../features/uploadSlice';\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ISO527() {\n  _s();\n  const dispatch = useDispatch();\n  const [numberOfDataSets, setNumberOfDataSets] = useState(0);\n  const [specimenClicked, setSpecimenClicked] = useState(false);\n  const [testData, setTestData] = useState({\n    testStandard: \"ISO527\",\n    SpecimenType: \"\",\n    L0: 0,\n    h: 0,\n    temp: [],\n    conditioned: [],\n    NumberOf_Specimens: [],\n    CrossHeadSpeed: [],\n    x_axis: [],\n    y_axis: [],\n    dataSetValue: [{\n      x: [],\n      y: []\n    }]\n  });\n  useEffect(() => {\n    if (testData.SpecimenType === \"1A\") {\n      setTestData({\n        ...testData,\n        L0: 75,\n        h: 4\n      });\n    }\n    if (testData.SpecimenType === \"1B\") {\n      setTestData({\n        ...testData,\n        L0: 50,\n        h: 4\n      });\n    }\n  }, [testData.SpecimenType]);\n\n  // Add DataSheet\n  const [isaddDataSheet, setIsAddDataSheet] = useState(false);\n  const addDataSheet = () => {\n    if (testData.L0 == 0 || testData.h == 0) {\n      alert(\"Enter L0 and h values\");\n    } else {\n      setIsAddDataSheet(true);\n    }\n  };\n  const [isCreateClicked, setisCreateClicked] = useState(false);\n\n  // Create Temperature Input Fields\n  const [temperature, setTemperature] = useState([]);\n  const createTemperatureTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Number\",\n          onChange: event => {\n            setTemperature(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create Conditioned Input Fields\n  const [conditioned, setConditioned] = useState([]);\n  const createConditionedTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"Number\",\n          onChange: event => {\n            setConditioned(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DAM\",\n            children: \"DAM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RH50\",\n            children: \"RH50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create No of Specimens\n  const [noOfSpecimens, setNoOfSpecimens] = useState([]);\n  const createNoOfSpecimensTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Number\",\n          onChange: event => {\n            setNoOfSpecimens(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Cross Head\n  const [crossHeads, setCrossHeads] = useState([]);\n  const createCrossheadTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Number\",\n          onChange: event => {\n            setCrossHeads(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create X Axis Fields\n  const [x_axis, setX_axis] = useState([]);\n  const createX_axisTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          onChange: event => {\n            setX_axis(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Strain(%)\",\n            children: \"Engineering Strain(%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Stress(MPa)\",\n            children: \"Engineering Stress(MPa)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create X Axis Fields\n  const [y_axis, setY_axis] = useState([]);\n  const createY_axisTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          onChange: event => {\n            setY_axis(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Strain(%)\",\n            children: \"Engineering Strain(%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Stress(MPa)\",\n            children: \"Engineering Stress(MPa)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n  const createDataset = () => {\n    if (numberOfDataSets > 0) {\n      setisCreateClicked(p => !p);\n    }\n  };\n  const saveData = async () => {\n    await dispatch(testStandardInfo(testData));\n  };\n  useEffect(() => {\n    setTestData({\n      ...testData,\n      temp: temperature\n    });\n  }, [temperature]);\n  useEffect(() => {\n    setTestData({\n      ...testData,\n      NumberOf_Specimens: noOfSpecimens\n    });\n  }, [noOfSpecimens]);\n  useEffect(() => {\n    setTestData({\n      ...testData,\n      conditioned: conditioned\n    });\n  }, [conditioned]);\n  useEffect(() => {\n    setTestData({\n      ...testData,\n      CrossHeadSpeed: crossHeads\n    });\n  }, [crossHeads]);\n  useEffect(() => {\n    setTestData({\n      ...testData,\n      x_axis: x_axis\n    });\n  }, [x_axis]);\n  useEffect(() => {\n    setTestData({\n      ...testData,\n      y_axis: y_axis\n    });\n  }, [y_axis]);\n\n  // Handling Files\n  // const [data, setData] = useState([]);\n\n  // const handleFileUpload = (e) => {\n  //   const reader = new FileReader();\n  //   reader.readAsBinaryString(e.target.files[0]);\n  //   reader.onload = (e) => {\n  //     const data = e.target.result;\n  //     const workbook = XLSX.read(data, { type: \"binary\" });\n  //     const sheetName = workbook.SheetNames[0];\n  //     const sheet = workbook.Sheets[sheetName];\n  //     const parsedData = XLSX.utils.sheet_to_json(sheet);\n  //     setData(parsedData);\n  //     console.log(parsedData)\n  //   };\n  // }\n\n  // \n  const [userInput, setUserInput] = useState(0);\n  const [dynamicArray, setDynamicArray] = useState([]);\n  const [nextClicked, setNextClicked] = useState(false);\n  const uploadDataset = () => {\n    setNextClicked(true);\n  };\n  console.log(dynamicArray);\n  // CREATE FIELD FOR EACH SPECIMENS\n  const [excelData, setExcelData] = useState([]);\n  const [xAxisData, setXAxisData] = useState([]);\n  const [yAxisData, setYAxisData] = useState([]);\n  const [tableData, setTableData] = useState({});\n  console.log(\"Talbe\", tableData);\n  const handleInputChange = (e, rowIndex, axis) => {\n    const newData = [...excelData];\n    newData[rowIndex][axis] = e.target.value;\n    setExcelData(newData);\n    setTableData({\n      ...tableData\n    });\n  };\n  const handleUserInput = numRows => {\n    setUserInput(numRows);\n    const newData = [];\n    for (let i = 0; i < numRows; i++) {\n      newData.push({\n        x_axis: '',\n        y_axis: ''\n      });\n    }\n    setExcelData(newData);\n    console.log(newData);\n  };\n  const handlePaste = (e, rowIndex, axis) => {\n    e.preventDefault();\n    const clipboardData = e.clipboardData || window.clipboardData;\n    const pastedData = clipboardData.getData('text').split('\\n');\n    const newData = [...excelData];\n    pastedData.forEach((value, index) => {\n      if (newData[rowIndex + index]) {\n        newData[rowIndex + index][axis] = value;\n      }\n    });\n    setExcelData(newData);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const xValues = excelData.map(row => row.x_axis);\n    const yValues = excelData.map(row => row.y_axis);\n    setXAxisData(xValues);\n    setYAxisData(yValues);\n\n    // Do something with xValues and yValues if needed\n    console.log('X Axis Data:', xValues);\n    console.log('Y Axis Data:', yValues);\n  };\n  console.log(excelData);\n\n  // Create Upload Dataset Code;\n  const specimensInput = index => {\n    const InputTags = [];\n    var j = 1;\n    for (let i = 0; i < noOfSpecimens[index]; i++) {\n      InputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_section\",\n        children: excelData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_data_table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Specimen \", j]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"X Axis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Y Axis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: excelData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: row.x_axis,\n                    onPaste: e => handlePaste(e, rowIndex, 'x_axis'),\n                    onChange: e => handleInputChange(e, rowIndex, 'x_axis')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: row.y_axis,\n                    onPaste: e => handlePaste(e, rowIndex, 'y_axis'),\n                    onChange: e => handleInputChange(e, rowIndex, 'y_axis')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 25\n                }, this)]\n              }, rowIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this));\n      j = j + 1;\n    }\n    return InputTags;\n  };\n  const createUploadDataset = () => {\n    const InputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      console.log(\"Num\", i);\n      console.log(noOfSpecimens[i]);\n      // const value = parseInt(1, 10);\n      // const newArray = Array.from({ length: value }, () => [{}, {}]);\n      // setDynamicArray(newArray);\n      InputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_data_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload_container_header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Upload Dataset \", i + 1, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload_data_wrapper\",\n            children: specimensInput(i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this));\n    }\n    return InputTags;\n  };\n  createUploadDataset();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"add-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Test Standard :\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ISO527 Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => {\n              setTestData({\n                ...testData,\n                SpecimenType: e.target.value\n              });\n              setSpecimenClicked(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select Test Standard\",\n              children: \"Specimen Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1A\",\n              children: \"1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1B\",\n              children: \"1B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Custom\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this), specimenClicked && (testData.SpecimenType !== \"Custom\" ? testData.SpecimenType === \"1A\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"L0 \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 34\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setTestData({\n                  ...testData,\n                  L0: e.target.value\n                }),\n                placeholder: \"75\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"h \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 33\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setTestData({\n                  ...testData,\n                  h: e.target.value\n                }),\n                placeholder: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"L0 \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 34\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setTestData({\n                  ...testData,\n                  L0: e.target.value\n                }),\n                placeholder: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"h \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setTestData({\n                  ...testData,\n                  h: e.target.value\n                }),\n                placeholder: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"L0 \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 32\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setTestData({\n                  ...testData,\n                  L0: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"h \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 31\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setTestData({\n                  ...testData,\n                  h: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 23\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            onClick: addDataSheet,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add\",\n              children: [\"Add Datasheets  \", /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"caret-down-outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this), isaddDataSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Number of Datasets :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: e => setNumberOfDataSets(e.target.value),\n              id: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn\",\n            onClick: createDataset,\n            children: \"Create Datasets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skip\",\n            children: [\"Skip To add Processed data \", /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"arrow-forward-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), isCreateClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 22\n            }, this), \" Temperature(c)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createTemperatureTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 22\n            }, this), \" Conditioned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createConditionedTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 22\n            }, this), \"Number of Specimens / Dataset \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createNoOfSpecimensTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 22\n            }, this), \"Crosshead Speed (mm/min)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createCrossheadTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 22\n            }, this), \"X-Axis\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createX_axisTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 22\n            }, this), \"Y-Axis\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createY_axisTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number of Rows:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: excelData.length,\n          onChange: e => handleUserInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: uploadDataset,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nextClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          placeContent: \"center\"\n        },\n        children: createUploadDataset()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ISO527, \"UwNOY0iwfZcfOVml1jIdo/b0PdA=\", false, function () {\n  return [useDispatch];\n});\n_c = ISO527;\nexport default ISO527;\nvar _c;\n$RefreshReg$(_c, \"ISO527\");","map":{"version":3,"names":["React","Children","Fragment","useEffect","useState","useDispatch","testStandardInfo","XLSX","jsxDEV","_jsxDEV","_Fragment","ISO527","_s","dispatch","numberOfDataSets","setNumberOfDataSets","specimenClicked","setSpecimenClicked","testData","setTestData","testStandard","SpecimenType","L0","h","temp","conditioned","NumberOf_Specimens","CrossHeadSpeed","x_axis","y_axis","dataSetValue","x","y","isaddDataSheet","setIsAddDataSheet","addDataSheet","alert","isCreateClicked","setisCreateClicked","temperature","setTemperature","createTemperatureTags","inputTags","i","push","className","children","type","onChange","event","prevInputValues","newInputValues","target","value","fileName","_jsxFileName","lineNumber","columnNumber","setConditioned","createConditionedTags","noOfSpecimens","setNoOfSpecimens","createNoOfSpecimensTags","crossHeads","setCrossHeads","createCrossheadTags","setX_axis","createX_axisTags","setY_axis","createY_axisTags","createDataset","p","saveData","userInput","setUserInput","dynamicArray","setDynamicArray","nextClicked","setNextClicked","uploadDataset","console","log","excelData","setExcelData","xAxisData","setXAxisData","yAxisData","setYAxisData","tableData","setTableData","handleInputChange","e","rowIndex","axis","newData","handleUserInput","numRows","handlePaste","preventDefault","clipboardData","window","pastedData","getData","split","forEach","index","handleSubmit","xValues","map","row","yValues","specimensInput","InputTags","j","length","border","onPaste","createUploadDataset","name","placeholder","onClick","id","onSubmit","style","display","placeContent","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527.js"],"sourcesContent":["import React, { Children, Fragment, useEffect, useState } from 'react'\r\nimport \"../../../Styles/Pages/Test.css\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { testStandardInfo } from '../../../features/uploadSlice'\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction ISO527() {\r\n  const dispatch = useDispatch()\r\n  const [numberOfDataSets, setNumberOfDataSets] = useState(0)\r\n  const [specimenClicked, setSpecimenClicked] = useState(false)\r\n  const [testData, setTestData] = useState({\r\n    testStandard:\"ISO527\",\r\n    SpecimenType:\"\",\r\n    L0:0,\r\n    h:0,\r\n    temp:[],\r\n    conditioned:[],\r\n    NumberOf_Specimens:[],\r\n    CrossHeadSpeed:[],\r\n    x_axis:[],\r\n    y_axis:[],\r\n    dataSetValue:[\r\n      {\r\n        x:[],\r\n        y:[]\r\n      },\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(testData.SpecimenType === \"1A\"){\r\n      setTestData({...testData, L0:75, h:4})\r\n    }\r\n\r\n    if(testData.SpecimenType === \"1B\"){\r\n      setTestData({...testData, L0:50, h:4})\r\n    }\r\n\r\n  }, [testData.SpecimenType])\r\n\r\n  // Add DataSheet\r\n  const [isaddDataSheet, setIsAddDataSheet] = useState(false) \r\n  const addDataSheet = () => {\r\n    if(testData.L0 ==0 || testData.h==0 ){\r\n      alert(\"Enter L0 and h values\")\r\n    }else{\r\n      setIsAddDataSheet(true)\r\n    }\r\n  }\r\n\r\n  const [isCreateClicked, setisCreateClicked] = useState(false);\r\n\r\n  // Create Temperature Input Fields\r\n  const [temperature, setTemperature] = useState([]);\r\n \r\n  const createTemperatureTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <input \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setTemperature((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  };\r\n\r\n  // Create Conditioned Input Fields\r\n  const [conditioned, setConditioned] = useState([]);\r\n  const createConditionedTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setConditioned((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"DAM\">DAM</option>\r\n              <option value=\"RH50\">RH50</option>\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create No of Specimens\r\n  const [noOfSpecimens, setNoOfSpecimens] = useState([])\r\n  const  createNoOfSpecimensTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            <input \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setNoOfSpecimens((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Cross Head\r\n  const [crossHeads, setCrossHeads] = useState([]);\r\n  const createCrossheadTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            <input \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setCrossHeads((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create X Axis Fields\r\n  const [x_axis, setX_axis] = useState([]);\r\n  const createX_axisTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"text\" onChange={(event) => {\r\n                setX_axis((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Engineering Strain(%)\">Engineering Strain(%)</option>\r\n              <option value=\"Engineering Stress(MPa)\">Engineering Stress(MPa)</option>\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create X Axis Fields\r\n  const [y_axis, setY_axis] = useState([]);\r\n  const createY_axisTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"text\" onChange={(event) => {\r\n                setY_axis((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Engineering Strain(%)\">Engineering Strain(%)</option>\r\n              <option value=\"Engineering Stress(MPa)\">Engineering Stress(MPa)</option>\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n\r\n  const createDataset = () => {\r\n    if(numberOfDataSets > 0){\r\n      setisCreateClicked((p)=>!p)\r\n    }\r\n  }\r\n\r\n  const saveData = async() => {\r\n    await dispatch(testStandardInfo(testData))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, temp:temperature})\r\n  },[ temperature])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, NumberOf_Specimens:noOfSpecimens})\r\n  },[ noOfSpecimens])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, conditioned:conditioned})\r\n  },[ conditioned])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, CrossHeadSpeed:crossHeads})\r\n  },[crossHeads])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, x_axis:x_axis})\r\n  },[ x_axis])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, y_axis:y_axis})\r\n  },[ y_axis])\r\n\r\n\r\n\r\n\r\n  // Handling Files\r\n  // const [data, setData] = useState([]);\r\n\r\n  // const handleFileUpload = (e) => {\r\n  //   const reader = new FileReader();\r\n  //   reader.readAsBinaryString(e.target.files[0]);\r\n  //   reader.onload = (e) => {\r\n  //     const data = e.target.result;\r\n  //     const workbook = XLSX.read(data, { type: \"binary\" });\r\n  //     const sheetName = workbook.SheetNames[0];\r\n  //     const sheet = workbook.Sheets[sheetName];\r\n  //     const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n  //     setData(parsedData);\r\n  //     console.log(parsedData)\r\n  //   };\r\n  // }\r\n\r\n// \r\n  const [userInput, setUserInput] = useState(0);\r\n  const [dynamicArray, setDynamicArray] = useState([]);\r\n  const [nextClicked, setNextClicked] = useState(false)\r\n  const uploadDataset = () => {\r\n    setNextClicked(true)\r\n  }\r\n\r\n  console.log(dynamicArray)\r\n  // CREATE FIELD FOR EACH SPECIMENS\r\n  const [excelData, setExcelData] = useState([]);\r\n  const [xAxisData, setXAxisData] = useState([]);\r\n  const [yAxisData, setYAxisData] = useState([]);\r\n  const [tableData, setTableData] = useState({});\r\n\r\n  console.log(\"Talbe\", tableData)\r\n  const   handleInputChange = (e, rowIndex, axis) => {\r\n    const newData = [...excelData];\r\n    newData[rowIndex][axis] = e.target.value;\r\n    setExcelData(newData);\r\n    setTableData( {\r\n      ...tableData,\r\n\r\n    })\r\n  };\r\n\r\n  const handleUserInput = (numRows) => {\r\n    setUserInput(numRows);\r\n\r\n    const newData = [];\r\n    for (let i = 0; i < numRows; i++) {\r\n      newData.push({ x_axis: '', y_axis: '' });\r\n    }\r\n    setExcelData(newData);\r\n    console.log(newData)\r\n  };\r\n\r\n  const handlePaste = (e, rowIndex, axis) => {\r\n    e.preventDefault();\r\n    const clipboardData = e.clipboardData || window.clipboardData;\r\n    const pastedData = clipboardData.getData('text').split('\\n');\r\n    \r\n    const newData = [...excelData];\r\n    pastedData.forEach((value, index) => {\r\n      if (newData[rowIndex + index]) {\r\n        newData[rowIndex + index][axis] = value;\r\n      }\r\n    });\r\n    \r\n    setExcelData(newData);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const xValues = excelData.map((row) => row.x_axis);\r\n    const yValues = excelData.map((row) => row.y_axis);\r\n\r\n    setXAxisData(xValues);\r\n    setYAxisData(yValues);\r\n\r\n    // Do something with xValues and yValues if needed\r\n    console.log('X Axis Data:', xValues);\r\n    console.log('Y Axis Data:', yValues);\r\n  };\r\n  console.log(excelData)\r\n\r\n  // Create Upload Dataset Code;\r\n  const specimensInput = (index) => {\r\n    const InputTags = []\r\n    var j=1;\r\n    for(let i=0; i<noOfSpecimens[index]; i++){\r\n      InputTags.push(\r\n        <div className=\"upload_data_section\">\r\n            {excelData.length > 0 && (\r\n              <div className=\"upload_data_table\">\r\n                <h3>\r\n                  Specimen {j}\r\n                </h3>\r\n                <table border=\"1\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>X Axis</th>\r\n                      <th>Y Axis</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {excelData.map((row, rowIndex) => (\r\n                      <tr key={rowIndex}>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={row.x_axis}\r\n                            onPaste={(e) => handlePaste(e, rowIndex, 'x_axis')}\r\n                            onChange={(e) => handleInputChange(e, rowIndex, 'x_axis')}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={row.y_axis}\r\n                            onPaste={(e) => handlePaste(e, rowIndex, 'y_axis')}\r\n                            onChange={(e) => handleInputChange(e, rowIndex, 'y_axis')}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n        </div>\r\n      )\r\n      j=j+1;\r\n    }\r\n    return InputTags\r\n  }\r\n\r\n  const createUploadDataset = () => {\r\n    const InputTags = []\r\n    for(let i=0; i<numberOfDataSets; i++){\r\n      console.log(\"Num\",i);\r\n      console.log(noOfSpecimens[i])\r\n      // const value = parseInt(1, 10);\r\n      // const newArray = Array.from({ length: value }, () => [{}, {}]);\r\n      // setDynamicArray(newArray);\r\n      InputTags.push(\r\n          <div className=\"upload_data_wrapper\">\r\n              <div className=\"upload_data_container\">\r\n                <div className=\"upload_container_header\">\r\n                  <h4>Upload Dataset {i+1} </h4>\r\n                </div>\r\n                <div className=\"upload_data_wrapper\">\r\n                {\r\n                  specimensInput(i)\r\n                }\r\n                </div>\r\n              </div>\r\n          </div>\r\n      )\r\n    }\r\n\r\n    return InputTags\r\n  }\r\n\r\n  createUploadDataset()\r\n\r\n  \r\n  return (\r\n    <>\r\n        <div className=\"test_container\">\r\n           <div className=\"test_header\">\r\n            <ion-icon name=\"add-outline\"></ion-icon>\r\n              <p>Test Standard : \r\n                <span>\r\n                  ISO527 Test\r\n                </span>\r\n              </p>\r\n           </div>\r\n            <div className=\"test_wrapper\">\r\n              <div className=\"test_content_item\">\r\n                <select onChange={(e) =>{\r\n                    setTestData({...testData, SpecimenType:e.target.value});\r\n                    setSpecimenClicked(true)\r\n                  } \r\n                }>\r\n                  <option value=\"Select Test Standard\">Specimen Type</option>\r\n                  <option value=\"1A\">1A</option>\r\n                  <option value=\"1B\">1B</option>\r\n                  <option value=\"Custom\">Custom</option>\r\n                </select>\r\n              </div>\r\n                {\r\n                  specimenClicked && (\r\n                    testData.SpecimenType !== \"Custom\" ? \r\n                    (\r\n                      testData.SpecimenType === \"1A\" ? (\r\n                        <div className=\"test_content_item\">\r\n                          <div className=\"content_item\">\r\n                            <span>\r\n                              L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, L0:e.target.value})} placeholder='75' />\r\n                            </span>\r\n                            <span>\r\n                              h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, h:e.target.value})} placeholder='4' />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                      : \r\n                      (\r\n                        <div className=\"test_content_item\">\r\n                          <div className=\"content_item\">\r\n                            <span>\r\n                              L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, L0:e.target.value})} placeholder=\"50\" />\r\n                            </span>\r\n                            <span>\r\n                              h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, h:e.target.value})} placeholder='4' />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )\r\n                    : \r\n                    (\r\n                      <div className=\"test_content_item\">\r\n                        <div className=\"content_item\">\r\n                          <span>\r\n                            L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, L0:e.target.value})} />\r\n                          </span>\r\n                          <span>\r\n                            h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, h:e.target.value})} />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  )\r\n              }\r\n              <div className=\"test_content_item\">\r\n                <div className=\"\" onClick={addDataSheet}>\r\n                 <div className=\"add\">\r\n                  Add Datasheets  <ion-icon name=\"caret-down-outline\"></ion-icon> \r\n                 </div>\r\n                </div>\r\n              </div>  \r\n              {\r\n                isaddDataSheet && (\r\n                  <div className=\"test_content_item\">\r\n                    <span>\r\n                      <h4>Number of Datasets :</h4>\r\n                      <input type=\"number\" onChange={(e) =>setNumberOfDataSets(e.target.value)} id=\"\" />\r\n                    </span>\r\n                    <div className=\"btn\" onClick={createDataset}>\r\n                      Create Datasets\r\n                    </div>\r\n                    <div className=\"skip\">\r\n                      Skip To add Processed data <ion-icon name=\"arrow-forward-outline\"></ion-icon>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n          isCreateClicked ? \r\n          (\r\n            <div className=\"test_container\">\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon> Temperature(c)</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createTemperatureTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon> Conditioned</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createConditionedTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Number of Specimens / Dataset </p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createNoOfSpecimensTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Crosshead Speed (mm/min)</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createCrossheadTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>X-Axis</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ?  createX_axisTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Y-Axis</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createY_axisTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n          ):\"\"\r\n        }\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Number of Rows:\r\n            <input type=\"number\" value={excelData.length} onChange={(e) => handleUserInput(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          {/* <button type='submit'>submit</button> */}\r\n        </form>\r\n\r\n        <div className=\"next\">\r\n            <div className=\"btn\" onClick={uploadDataset}>\r\n             Next\r\n            </div>\r\n        </div>\r\n\r\n      <div>\r\n\r\n      {\r\n         nextClicked && (\r\n          <div style={{display:\"grid\", placeContent:\"center\"}}>\r\n          {\r\n            createUploadDataset()\r\n          }\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ISO527"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}