{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\ManualDatasetUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Table from '../../TestComponents/Table';\nimport Chart from '../../TestComponents/Chart';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManualDatasetUpload({\n  DataSet,\n  noOfSpecimens,\n  x_axis,\n  y_axis\n}) {\n  _s();\n  const [x_axisValue, setX_axisValue] = useState([]);\n  const [y_axisValue, setY_axisValue] = useState([]);\n  const [isPlot, setIsplot] = useState(false);\n  const [dataSetValue, setDatasetValue] = useState([]);\n  const handleSpecimenData = (data, datasetNo, specimenNo) => {\n    console.log(data, datasetNo, specimenNo);\n    setDatasetValue(p => [...p, data]);\n  };\n  const specimensInput = index => {\n    const InputTags = [];\n    console.log(\"isPLot\", isPlot);\n    var j = 1;\n    for (let i = 0; i < noOfSpecimens; i++) {\n      InputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_data_table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Specimen \", j, \" \", index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            sno: j,\n            index: index,\n            y_axis: y_axis,\n            x_axis: x_axis,\n            sendToParent: handleSpecimenData,\n            plotClicked: isPlot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this));\n      j = j + 1;\n    }\n    return InputTags;\n  };\n  console.log(dataSetValue);\n  useEffect(() => {\n    console.log(\"NEww\", dataSetValue);\n  }, [dataSetValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload_data_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload_data_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_container_header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ManualDatasetUpload \", DataSet + 1, \" : \", noOfSpecimens]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_wrapper\",\n        children: specimensInput(DataSet + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"btn\",\n          onClick: () => setIsplot(true),\n          children: \"Plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ManualDatasetUpload, \"O5BvmP1ELazQQAj/KF2kQ5Q1k4o=\");\n_c = ManualDatasetUpload;\nexport default ManualDatasetUpload;\nvar _c;\n$RefreshReg$(_c, \"ManualDatasetUpload\");","map":{"version":3,"names":["React","useState","Table","Chart","useEffect","jsxDEV","_jsxDEV","ManualDatasetUpload","DataSet","noOfSpecimens","x_axis","y_axis","_s","x_axisValue","setX_axisValue","y_axisValue","setY_axisValue","isPlot","setIsplot","dataSetValue","setDatasetValue","handleSpecimenData","data","datasetNo","specimenNo","console","log","p","specimensInput","index","InputTags","j","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sno","sendToParent","plotClicked","onClick","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/ManualDatasetUpload.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Table from '../../TestComponents/Table';\r\nimport Chart from '../../TestComponents/Chart';\r\nimport { useEffect } from 'react';\r\n\r\nfunction ManualDatasetUpload({DataSet, noOfSpecimens, x_axis, y_axis}) {\r\n    const [x_axisValue, setX_axisValue] = useState([])\r\n    const [y_axisValue, setY_axisValue] = useState([])\r\n    const [isPlot, setIsplot] = useState(false)\r\n    \r\n    const [dataSetValue, setDatasetValue] = useState([])\r\n\r\n    const handleSpecimenData = (data, datasetNo, specimenNo) => {\r\n        console.log(data, datasetNo, specimenNo);\r\n        setDatasetValue((p) => [...p, data])\r\n    }\r\n\r\n    const specimensInput = (index) => {\r\n        const InputTags = []\r\n        console.log(\"isPLot\",isPlot)\r\n        var j=1;\r\n        for(let i=0; i<noOfSpecimens; i++){\r\n          InputTags.push(\r\n            <div className=\"upload_data_section\">\r\n                {\r\n                  <div className=\"upload_data_table\">\r\n                    <h3>\r\n                      Specimen {j} {index}\r\n                    </h3>\r\n                    <Table\r\n                        sno={j} index={index} \r\n                        y_axis={y_axis} \r\n                        x_axis={x_axis}\r\n                        sendToParent={handleSpecimenData}\r\n                        plotClicked={isPlot}\r\n                    />\r\n                  </div>\r\n                }\r\n            </div>\r\n          )\r\n          j=j+1;\r\n        }\r\n        return InputTags\r\n    }\r\n    console.log(dataSetValue)\r\n    useEffect(() => {\r\n        console.log(\"NEww\", dataSetValue)\r\n    }, [dataSetValue])\r\n  return (\r\n    <div className=\"upload_data_wrapper\">\r\n        <div className=\"upload_data_container\">\r\n            <div className=\"upload_container_header\">\r\n                  <h4><p>ManualDatasetUpload {DataSet+1} : {noOfSpecimens}</p></h4>\r\n            </div>\r\n            <div className=\"upload_data_wrapper\">\r\n            {\r\n                specimensInput(DataSet+1)\r\n            }\r\n            </div>\r\n            <div className=\"plot\">\r\n                <p className='btn' onClick={() => setIsplot(true)}>Plot</p>\r\n            </div>\r\n            {/* <Chart /> */}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ManualDatasetUpload"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}