{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\TestComponents\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  interaction: {\n    mode: 'index',\n    intersect: false\n  },\n  stacked: false,\n  plugins: {\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart - Multi Axis'\n    }\n  },\n  scales: {\n    y: {\n      type: 'linear',\n      display: true,\n      position: 'left'\n    },\n    y1: {\n      type: 'linear',\n      display: true,\n      position: 'right',\n      grid: {\n        drawOnChartArea: false\n      }\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nexport const data = {\n  labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: 'rgb(255, 99, 132)',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    yAxisID: 'y'\n  }, {\n    label: 'Dataset 2',\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: 'rgb(53, 162, 235)',\n    backgroundColor: 'rgba(53, 162, 235, 0.5)',\n    yAxisID: 'y1'\n  }]\n};\nfunction Chart({\n  plotData,\n  DataSet\n}) {\n  _s();\n  const [plot, setPlot] = useState([]);\n  const dataForPlot = async DataSet => {\n    const existingIndex = plotData.filter(item => {\n      return item.dataset === DataSet;\n    });\n    console.log(existingIndex);\n    setPlot(existingIndex);\n    console.log(plot);\n  };\n  useEffect(() => {\n    dataForPlot();\n  }, []);\n  // const data = {\n  //   labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n  //   datasets: [\n  //     {\n  //       label: \"First dataset\",\n  //       data: [33, 53, 85, 41, 44, 65],\n  //       fill: true,\n  //       backgroundColor: \"rgba(75,192,192,0.2)\",\n  //       borderColor: \"rgba(75,192,192,1)\"\n  //     },\n  //     {\n  //       label: \"Second dataset\",\n  //       data: [33, 25, 35, 51, 54, 76],\n  //       fill: false,\n  //       borderColor: \"#742774\"\n  //     }\n  //   ]\n  // };\n  console.log(\"Dat for plot\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"sZ9u5mLXSx5hgB5smZiGgeduM0s=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","y","type","position","y1","grid","drawOnChartArea","labels","data","datasets","label","map","faker","datatype","number","min","max","borderColor","backgroundColor","yAxisID","plotData","DataSet","_s","plot","setPlot","dataForPlot","existingIndex","filter","item","dataset","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/TestComponents/Chart.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  interaction: {\r\n    mode: 'index',\r\n    intersect: false,\r\n  },\r\n  stacked: false,\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Line Chart - Multi Axis',\r\n    },\r\n  },\r\n  scales: {\r\n    y: {\r\n      type: 'linear',\r\n      display: true,\r\n      position: 'left',\r\n    },\r\n    y1: {\r\n      type: 'linear',\r\n      display: true,\r\n      position: 'right',\r\n      grid: {\r\n        drawOnChartArea: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\nexport const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      yAxisID: 'y',\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      borderColor: 'rgb(53, 162, 235)',\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      yAxisID: 'y1',\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\nfunction Chart({plotData, DataSet}) {\r\n  const [plot, setPlot] = useState([])\r\n  const dataForPlot = async(DataSet) => {\r\n      const existingIndex = plotData.filter((item) => {\r\n        return item.dataset === DataSet\r\n      })\r\n\r\n      console.log(existingIndex)\r\n      setPlot(existingIndex)\r\n      console.log(plot)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dataForPlot()\r\n  }, [])\r\n  // const data = {\r\n  //   labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\r\n  //   datasets: [\r\n  //     {\r\n  //       label: \"First dataset\",\r\n  //       data: [33, 53, 85, 41, 44, 65],\r\n  //       fill: true,\r\n  //       backgroundColor: \"rgba(75,192,192,0.2)\",\r\n  //       borderColor: \"rgba(75,192,192,1)\"\r\n  //     },\r\n  //     {\r\n  //       label: \"Second dataset\",\r\n  //       data: [33, 25, 35, 51, 54, 76],\r\n  //       fill: false,\r\n  //       borderColor: \"#742774\"\r\n  //     }\r\n  //   ]\r\n  // };\r\n  console.log(\"Dat for plot\", data)\r\n  return (\r\n    <div>\r\n\r\n        <h3>Plot</h3>\r\n        {/* <Line options={options} data={data} />; */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}