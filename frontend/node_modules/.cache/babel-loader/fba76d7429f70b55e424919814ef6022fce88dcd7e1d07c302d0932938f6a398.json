{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\TestCategoryComponent.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestCategoryComponent({\n  numberOfDataSets,\n  formData,\n  type,\n  component\n}) {\n  _s();\n  // Create Temperature Input Fields\n  const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\n  const createTemperatureTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"temp_input\",\n          type: \"number\",\n          onChange: event => {\n            setTemperature(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = Number(event.target.value);\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this), i == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setAll\",\n          onClick: setAll,\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"chevron-forward-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this) : \"\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Set All\n  const setAll = () => {\n    const filled = temperature.filter(t => t !== null);\n    console.log(temperature[filled.length - 1]);\n    for (let i = filled.length; i < numberOfDataSets; i++) {\n      setTemperature(prevInputValues => {\n        const newInputValues = [...prevInputValues];\n        newInputValues[i] = temperature[filled.length - 1];\n        return newInputValues;\n      });\n    }\n    const getInputTags = document.getElementsByClassName(\"temp_input\");\n    console.log(getInputTags.length);\n    // updates the Temperature Input tag\n    for (let i = 0; i < getInputTags.length; i++) {\n      getInputTags[i].value = temperature[0];\n    }\n    console.log(temperature);\n  };\n\n  // useEffect(() => {\n  //     const getInputTags = document.getElementsByClassName(\"temp_input\")\n  //     console.log(getInputTags.length)\n  //     // updates the Temperature Input tag\n  //     for(let i=0; i<getInputTags.length; i++){\n  //         getInputTags[i].value = temperature[0]\n  //     }\n  //     console.log(temperature)\n  // }, [temperature])\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comp_header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"add-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), \" \", component]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_container_inputs\",\n      children: createTemperatureTags()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(TestCategoryComponent, \"97VM28Xv2EqVJuHPZNdzg1PBRd0=\");\n_c = TestCategoryComponent;\nexport default TestCategoryComponent;\nvar _c;\n$RefreshReg$(_c, \"TestCategoryComponent\");","map":{"version":3,"names":["React","Fragment","useEffect","useRef","useState","jsxDEV","_jsxDEV","TestCategoryComponent","numberOfDataSets","formData","type","component","_s","temperature","setTemperature","Array","fill","createTemperatureTags","inputTags","i","push","className","children","onChange","event","prevInputValues","newInputValues","Number","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setAll","name","filled","filter","t","console","log","length","getInputTags","document","getElementsByClassName","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/TestCategoryComponent.js"],"sourcesContent":["import React, { Fragment, useEffect, useRef } from 'react'\r\nimport { useState } from 'react';\r\n\r\nfunction TestCategoryComponent({numberOfDataSets, formData, type, component}) {\r\n    // Create Temperature Input Fields\r\n    const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\r\n    \r\n    const createTemperatureTags = () => {\r\n        const inputTags = [];\r\n        for (let i = 0; i < numberOfDataSets; i++) {\r\n        inputTags.push(\r\n            <div key={i} className='test_data_box'>\r\n                <input className='temp_input'\r\n                    key={i} type=\"number\" onChange={(event) => {\r\n                        setTemperature((prevInputValues) => {\r\n                        const newInputValues = [...prevInputValues];\r\n                        newInputValues[i] = Number(event.target.value)\r\n                        return newInputValues;\r\n                        });\r\n                    }} \r\n                />\r\n                {\r\n                    i == 0 ? \r\n                    <div className=\"setAll\" onClick={setAll}>\r\n                        <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n                    </div> : \"\"\r\n                }\r\n            </div>\r\n        );\r\n        }\r\n        return inputTags;\r\n    };\r\n\r\n   \r\n\r\n    // Set All\r\n    const setAll = () => {  \r\n        const filled = temperature.filter((t) => t!==null)\r\n        console.log(temperature[filled.length-1])\r\n        for(let i=filled.length; i<numberOfDataSets; i++){\r\n            setTemperature((prevInputValues) => {\r\n                const newInputValues = [...prevInputValues];\r\n                newInputValues[i] = temperature[filled.length-1]\r\n                return newInputValues;\r\n            });\r\n        }\r\n        const getInputTags = document.getElementsByClassName(\"temp_input\")\r\n        console.log(getInputTags.length)\r\n        // updates the Temperature Input tag\r\n        for(let i=0; i<getInputTags.length; i++){\r\n            getInputTags[i].value = temperature[0]\r\n        }\r\n        console.log(temperature)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const getInputTags = document.getElementsByClassName(\"temp_input\")\r\n    //     console.log(getInputTags.length)\r\n    //     // updates the Temperature Input tag\r\n    //     for(let i=0; i<getInputTags.length; i++){\r\n    //         getInputTags[i].value = temperature[0]\r\n    //     }\r\n    //     console.log(temperature)\r\n    // }, [temperature])\r\n\r\n  return (\r\n    <Fragment>\r\n        <div className=\"comp_header\">\r\n            <p>\r\n                <ion-icon name=\"add-outline\"></ion-icon> {component}\r\n            </p>\r\n        </div>\r\n        <div className=\"test_container_inputs\">\r\n            {\r\n                createTemperatureTags()\r\n            }\r\n        </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TestCategoryComponent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}