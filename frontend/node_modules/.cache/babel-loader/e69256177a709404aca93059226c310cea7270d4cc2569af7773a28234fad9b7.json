{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\ManualDatasetUpload.js\";\nimport React from 'react';\nimport Table from '../../TestComponents/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManualDatasetUpload({\n  DataSet,\n  noOfSpecimens\n}) {\n  const specimensInput = index => {\n    const InputTags = [];\n    var j = 1;\n    for (let i = 0; i < noOfSpecimens; i++) {\n      InputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_data_table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Specimen \", j]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            sno: j,\n            index: index,\n            y_axis: formData.y_axis[index],\n            x_axis: formData.x_axis[index],\n            ManualDataSet: formData.ManualDataSet,\n            excelData: excelData,\n            NumberOf_Specimens: formData.NumberOf_Specimens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this));\n      j = j + 1;\n    }\n    return InputTags;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ManualDatasetUpload \", DataSet + 1, \" : \", noOfSpecimens]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), specimensInput()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = ManualDatasetUpload;\nexport default ManualDatasetUpload;\nvar _c;\n$RefreshReg$(_c, \"ManualDatasetUpload\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","ManualDatasetUpload","DataSet","noOfSpecimens","specimensInput","index","InputTags","j","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sno","y_axis","formData","x_axis","ManualDataSet","excelData","NumberOf_Specimens","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/ManualDatasetUpload.js"],"sourcesContent":["import React from 'react'\r\nimport Table from '../../TestComponents/Table';\r\n\r\nfunction ManualDatasetUpload({DataSet, noOfSpecimens}) {\r\n\r\n    const specimensInput = (index) => {\r\n        const InputTags = []\r\n        var j=1;\r\n        for(let i=0; i<noOfSpecimens; i++){\r\n          InputTags.push(\r\n            <div className=\"upload_data_section\">\r\n                {\r\n                  <div className=\"upload_data_table\">\r\n                    <h3>\r\n                      Specimen {j}\r\n                    </h3>\r\n                    <Table\r\n                      sno={j} index={index} \r\n                      y_axis={formData.y_axis[index]} \r\n                      x_axis={formData.x_axis[index]}\r\n                      ManualDataSet = {formData.ManualDataSet}\r\n                      excelData={excelData}\r\n                      NumberOf_Specimens={formData.NumberOf_Specimens}\r\n                    />\r\n                  </div>\r\n                }\r\n            </div>\r\n          )\r\n          j=j+1;\r\n        }\r\n        return InputTags\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <p>ManualDatasetUpload {DataSet+1} : {noOfSpecimens}</p>\r\n        {\r\n            specimensInput()\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ManualDatasetUpload"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,mBAAmBA,CAAC;EAACC,OAAO;EAAEC;AAAa,CAAC,EAAE;EAEnD,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9B,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAIC,CAAC,GAAC,CAAC;IACP,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACL,aAAa,EAAEK,CAAC,EAAE,EAAC;MAChCF,SAAS,CAACG,IAAI,eACZT,OAAA;QAAKU,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAE9BX,OAAA;UAAKU,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCX,OAAA;YAAAW,QAAA,GAAI,WACO,EAACJ,CAAC;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACLf,OAAA,CAACF,KAAK;YACJkB,GAAG,EAAET,CAAE;YAACF,KAAK,EAAEA,KAAM;YACrBY,MAAM,EAAEC,QAAQ,CAACD,MAAM,CAACZ,KAAK,CAAE;YAC/Bc,MAAM,EAAED,QAAQ,CAACC,MAAM,CAACd,KAAK,CAAE;YAC/Be,aAAa,EAAIF,QAAQ,CAACE,aAAc;YACxCC,SAAS,EAAEA,SAAU;YACrBC,kBAAkB,EAAEJ,QAAQ,CAACI;UAAmB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACP,CAAC;MACDR,CAAC,GAACA,CAAC,GAAC,CAAC;IACP;IACA,OAAOD,SAAS;EACpB,CAAC;EAGH,oBACEN,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,GAAG,sBAAoB,EAACT,OAAO,GAAC,CAAC,EAAC,KAAG,EAACC,aAAa;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpDX,cAAc,CAAC,CAAC;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEV;AAACQ,EAAA,GAvCQtB,mBAAmB;AAyC5B,eAAeA,mBAAmB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}