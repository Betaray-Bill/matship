{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527\\\\Components\\\\ManualDatasetUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Table from '../../TestComponents/Table';\nimport Chart from '../../TestComponents/Chart';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManualDatasetUpload({\n  DataSet,\n  noOfSpecimens,\n  x_axis,\n  y_axis\n}) {\n  _s();\n  const [x_axisValue, setX_axisValue] = useState([]);\n  const [y_axisValue, setY_axisValue] = useState([]);\n  const [data, setData] = useState([{\n    dataset: 0,\n    specimens: 0,\n    x_axis: {\n      name: \"\",\n      units: \"\",\n      value: []\n    },\n    y_axis: {\n      name: \"\",\n      units: \"\",\n      value: []\n    }\n  }]);\n  const handleXAxisUpdate = async newXAxisValues => {\n    // setData((prevData) => ({\n    //   ...prevData,\n    //   x_axis: newXAxisValues,\n    // }));\n  };\n  const handleYAxisUpdate = async newYAxisValues => {\n    // setData((prevData) => ({\n    //   ...prevData,\n    //   y_axis: newYAxisValues,\n    // }));\n  };\n  const updateManualDataSet = () => {\n    // setData((p) => [\n    //     ...p,\n    //     {\n    //         dataset:DataSet,\n    //         specimens:,\n    //         x_axis:{\n    //             name:\"\",\n    //             units:\"\",\n    //             value:[]\n    //         },\n    //         y_axis:{\n    //             name:\"\",\n    //             units:\"\",\n    //             value:[]\n    //         }\n    //     }\n    // ])\n  };\n  useEffect(() => {\n    console.log(\"Meowowwo\");\n    updateManualDataSet();\n  }, [handleXAxisUpdate]);\n  const specimensInput = index => {\n    const InputTags = [];\n    var j = 1;\n    for (let i = 0; i < noOfSpecimens; i++) {\n      InputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_data_table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Specimen \", j]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            sno: j,\n            index: index,\n            y_axis: y_axis,\n            x_axis: x_axis,\n            handleXAxisUpdate: handleXAxisUpdate,\n            handleYAxisUpdate: handleYAxisUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this));\n      j = j + 1;\n    }\n    return InputTags;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload_data_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload_data_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_container_header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ManualDatasetUpload \", DataSet + 1, \" : \", noOfSpecimens]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_data_wrapper\",\n        children: specimensInput()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ManualDatasetUpload, \"pq68i0T3skKzopSpgoy1S3ypuXY=\");\n_c = ManualDatasetUpload;\nexport default ManualDatasetUpload;\nvar _c;\n$RefreshReg$(_c, \"ManualDatasetUpload\");","map":{"version":3,"names":["React","useState","Table","Chart","useEffect","jsxDEV","_jsxDEV","ManualDatasetUpload","DataSet","noOfSpecimens","x_axis","y_axis","_s","x_axisValue","setX_axisValue","y_axisValue","setY_axisValue","data","setData","dataset","specimens","name","units","value","handleXAxisUpdate","newXAxisValues","handleYAxisUpdate","newYAxisValues","updateManualDataSet","console","log","specimensInput","index","InputTags","j","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sno","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527/Components/ManualDatasetUpload.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Table from '../../TestComponents/Table';\r\nimport Chart from '../../TestComponents/Chart';\r\nimport { useEffect } from 'react';\r\n\r\nfunction ManualDatasetUpload({DataSet, noOfSpecimens, x_axis, y_axis}) {\r\n    const [x_axisValue, setX_axisValue] = useState([])\r\n    const [y_axisValue, setY_axisValue] = useState([])\r\n    \r\n    const [data, setData] = useState([{\r\n        dataset:0,\r\n        specimens:0,\r\n        x_axis:{\r\n            name:\"\",\r\n            units:\"\",\r\n            value:[]\r\n        },\r\n        y_axis:{\r\n            name:\"\",\r\n            units:\"\",\r\n            value:[]\r\n        }\r\n    }])\r\n\r\n    const handleXAxisUpdate = async(newXAxisValues) => {\r\n        // setData((prevData) => ({\r\n        //   ...prevData,\r\n        //   x_axis: newXAxisValues,\r\n        // }));\r\n    };\r\n    \r\n    const handleYAxisUpdate = async(newYAxisValues) => {\r\n        // setData((prevData) => ({\r\n        //   ...prevData,\r\n        //   y_axis: newYAxisValues,\r\n        // }));\r\n    };\r\n\r\n    const updateManualDataSet = () => {\r\n        // setData((p) => [\r\n        //     ...p,\r\n        //     {\r\n        //         dataset:DataSet,\r\n        //         specimens:,\r\n        //         x_axis:{\r\n        //             name:\"\",\r\n        //             units:\"\",\r\n        //             value:[]\r\n        //         },\r\n        //         y_axis:{\r\n        //             name:\"\",\r\n        //             units:\"\",\r\n        //             value:[]\r\n        //         }\r\n        //     }\r\n        // ])\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Meowowwo\")\r\n        updateManualDataSet()\r\n    }, [handleXAxisUpdate])\r\n\r\n    const specimensInput = (index) => {\r\n        const InputTags = []\r\n        var j=1;\r\n        for(let i=0; i<noOfSpecimens; i++){\r\n          InputTags.push(\r\n            <div className=\"upload_data_section\">\r\n                {\r\n                  <div className=\"upload_data_table\">\r\n                    <h3>\r\n                      Specimen {j}\r\n                    </h3>\r\n                    <Table\r\n                        sno={j} index={index} \r\n                        y_axis={y_axis} \r\n                        x_axis={x_axis}\r\n                        handleXAxisUpdate={handleXAxisUpdate}\r\n                        handleYAxisUpdate={handleYAxisUpdate}\r\n                    />\r\n                  </div>\r\n                }\r\n            </div>\r\n          )\r\n          j=j+1;\r\n        }\r\n        return InputTags\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"upload_data_wrapper\">\r\n        <div className=\"upload_data_container\">\r\n            <div className=\"upload_container_header\">\r\n                  <h4><p>ManualDatasetUpload {DataSet+1} : {noOfSpecimens}</p></h4>\r\n            </div>\r\n            <div className=\"upload_data_wrapper\">\r\n            {\r\n                specimensInput()\r\n            }\r\n            </div>\r\n            <Chart />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ManualDatasetUpload"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}