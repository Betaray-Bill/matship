{"ast":null,"code":"var _jsxFileName = \"E:\\\\matship\\\\frontend\\\\src\\\\Pages\\\\UPLOAD\\\\Tests\\\\ISO527.js\",\n  _s = $RefreshSig$();\nimport React, { Children, Fragment, useEffect, useMemo, useState } from 'react';\nimport \"../../../Styles/Pages/Test.css\";\nimport { useDispatch } from 'react-redux';\nimport { testStandardInfo } from '../../../features/uploadSlice';\nimport * as XLSX from \"xlsx\";\nimport Table from './TestComponents/Table';\nimport Chart from './TestComponents/Chart';\nimport TestCategoryComponent from './ISO527/Components/TestCategoryComponent';\nimport ManualDatasetUpload from './ISO527/Components/ManualDatasetUpload';\nimport { units } from '../../../Units';\nimport Reusable from './ISO527/Components/Reusable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ISO527({\n  isClickedNext\n}) {\n  _s();\n  const [isProcessedDataClicked, setIsProcessedDataClicked] = useState(false);\n  const [dynamicArray, setDynamicArray] = useState([]);\n  const [formData, setFormData] = useState({\n    testStandard: \"ISO527\",\n    SpecimenType: \"\",\n    L0: 0,\n    h: 0,\n    temp: [],\n    conditioned: [],\n    NumberOf_Specimens: [],\n    CrossHeadSpeed: [],\n    x_axis: [],\n    y_axis: [],\n    dataSetValue: [],\n    ManualDataSet: []\n  });\n  const dispatch = useDispatch();\n  const [numberOfDataSets, setNumberOfDataSets] = useState(0);\n  const [specimenClicked, setSpecimenClicked] = useState(false);\n  useEffect(() => {\n    if (formData.SpecimenType === \"1A\") {\n      setFormData({\n        ...formData,\n        L0: 75,\n        h: 4\n      });\n    }\n    if (formData.SpecimenType === \"1B\") {\n      setFormData({\n        ...formData,\n        L0: 50,\n        h: 4\n      });\n    }\n  }, [formData.SpecimenType]);\n\n  // To ALL\n  function toAll(test) {\n    console.log(\"test\", test);\n    if (test === \"Temperature\") {\n      console.log(temperature.length);\n      if (temperature.length == 0) {\n        alert(\"Enter atleast one value\");\n      } else {\n        console.log(temperature[temperature.length - 1]);\n        let s = temperature.length - 1;\n        let lastValue = temperature[temperature.length - 1];\n        console.log(lastValue, s);\n        for (let i = s; i < numberOfDataSets; i++) {\n          setTemperature(prevInputValues => {\n            const newInputValues = [...prevInputValues];\n            newInputValues[i] = lastValue;\n            return newInputValues;\n          });\n        }\n        console.log(temperature);\n      }\n    }\n  }\n\n  // Add DataSheet\n  const [isaddDataSheet, setIsAddDataSheet] = useState(false);\n  const addDataSheet = () => {\n    if (formData.L0 == 0 || formData.h == 0) {\n      alert(\"Enter L0 and h values\");\n    } else {\n      setIsAddDataSheet(true);\n    }\n  };\n\n  // Set ALL\n  const setAll = type => {\n    if (type === \"Number of Specimens\") {\n      for (let i = 0; i < numberOfDataSets; i++) {\n        setTemperature(prevInputValues => {\n          const newInputValues = [...prevInputValues];\n          newInputValues[i] = temperature[0];\n          return newInputValues;\n        });\n      }\n    } else if (type === \"Conditioned\") {\n      if (conditioned[0] === null) {\n        alert(\"Please Enter the first Value\");\n      } else {\n        for (let i = 0; i < numberOfDataSets; i++) {\n          setConditioned(prevInputValues => {\n            const newInputValues = [...prevInputValues];\n            newInputValues[i] = conditioned[0];\n            return newInputValues;\n          });\n          console.log(conditioned);\n        }\n      }\n    }\n  };\n  const [isCreateClicked, setisCreateClicked] = useState(false);\n\n  // Create Temperature Input Fields\n  const [temperature, setTemperature] = useState([]);\n  const createTemperatureTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: event => {\n            setTemperature(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = Number(event.target.value);\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n  useEffect(() => {\n    console.log(\"ama da\");\n  }, [temperature]);\n\n  // Create Conditioned Input Fields\n  const [conditioned, setConditioned] = useState([]);\n  const createConditionedTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box \",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"conditionedInput\",\n          type: \"number\",\n          onChange: event => {\n            setConditioned(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DAM\",\n            children: \"DAM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RH50\",\n            children: \"RH50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), i == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setAll\",\n          onClick: () => setAll(\"Conditioned\"),\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"chevron-forward-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this) : \"\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create No of Specimens\n  const [noOfSpecimens, setNoOfSpecimens] = useState([]);\n  const createNoOfSpecimensTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: event => {\n            setNoOfSpecimens(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = Number(event.target.value);\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Cross Head\n  const [crossHeads, setCrossHeads] = useState([]);\n  const createCrossheadTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: event => {\n            setCrossHeads(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create X Axis Fields\n  const [x_axis, setX_axis] = useState([]);\n  const [x_axisUnits, setX_axisUnits] = useState([]);\n  const [allXUnits, setAllXUnits] = useState(units);\n  const getXUnits = e => {\n    console.log(units[e]);\n    setX_axisUnits(units[e]);\n  };\n  useEffect(() => {\n    const unitValues = Object.values(units).flat();\n    setAllXUnits(unitValues);\n    console.log(unitValues);\n  }, [x_axisUnits]);\n  const createX_axisTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          onChange: event => {\n            setX_axis(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n            getXUnits(event.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Strain\",\n            children: \"Engineering Strain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Stress\",\n            children: \"Engineering Stress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), x_axisUnits.length === 0 ? allXUnits.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: val,\n            children: val\n          }, val, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this)) : x_axisUnits.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: val,\n            children: val\n          }, val, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), i == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setAll\",\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"chevron-forward-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this) : \"\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n\n  // Create X Axis Fields\n  const [y_axis, setY_axis] = useState([]);\n  const [y_axisUnits, setY_axisUnits] = useState([]);\n  const [allYUnits, setAllYUnits] = useState(units);\n  const getYUnits = e => {\n    console.log(units[e]);\n    setX_axisUnits(units[e]);\n  };\n  useEffect(() => {\n    const unitValues = Object.values(units).flat();\n    setAllYUnits(unitValues);\n    console.log(unitValues);\n  }, [y_axisUnits]);\n  const createY_axisTags = () => {\n    const inputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      inputTags.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_data_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          onChange: event => {\n            setY_axis(prevInputValues => {\n              const newInputValues = [...prevInputValues];\n              newInputValues[i] = event.target.value;\n              return newInputValues;\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Strain(%)\",\n            children: \"Engineering Strain(%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Engineering Stress(MPa)\",\n            children: \"Engineering Stress(MPa)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), y_axisUnits.length === 0 ? allYUnits.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: val,\n            children: val\n          }, val, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this)) : y_axisUnits.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: val,\n            children: val\n          }, val, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), i == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setAll\",\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"chevron-forward-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this) : \"\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this));\n    }\n    return inputTags;\n  };\n  const createDataset = () => {\n    if (numberOfDataSets > 0) {\n      setisCreateClicked(p => !p);\n    }\n  };\n  const saveData = async () => {\n    await setFormData({\n      ...formData,\n      dataSetValue: dynamicArray\n    });\n    // console.log(formData)\n    await dispatch(testStandardInfo(formData));\n  };\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      temp: temperature\n    });\n  }, [temperature]);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      NumberOf_Specimens: noOfSpecimens\n    });\n  }, [noOfSpecimens]);\n  useEffect(() => {\n    // setFormData({...formData, conditioned:conditioned})\n    // const getInputTags = document.getElementsByClassName(\"conditionedInput\")\n    //     console.log(getInputTags.length)\n    //     // updates the Temperature Input tag\n    //     for(let i=0; i<temperature.length; i++){\n    //         getInputTags[i].value = conditioned[0]\n    //     }\n    //     console.log(conditioned)\n  }, [conditioned]);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      CrossHeadSpeed: crossHeads\n    });\n  }, [crossHeads]);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      x_axis: x_axis\n    });\n  }, [x_axis]);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      y_axis: y_axis\n    });\n  }, [y_axis]);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      dataSetValue: dynamicArray\n    });\n    console.log(setFormData);\n  }, [dynamicArray]);\n\n  // \n  const [userInput, setUserInput] = useState(1);\n  const [nextClicked, setNextClicked] = useState(false);\n  // CREATE FIELD FOR EACH SPECIMENS\n  const createDynamicObject = index => ({\n    [index - 1]: [[], []]\n  }); //Create Dynamic Array \n  // upload Dataset to Redux and create a \n\n  const uploadDataset = (NumberOf_Specimens, numberOf_Rows) => {\n    setNextClicked(true);\n    let mainArray = new Array();\n    //Create a array of Matrix when the \n    for (let i = 0; i < NumberOf_Specimens.length; i++) {\n      let newMatrix = new Array();\n      for (let j = 0; j < NumberOf_Specimens[i]; j++) {\n        newMatrix.push([]);\n        newMatrix.push([]);\n        mainArray.push(newMatrix);\n        newMatrix = [];\n      }\n    }\n    setFormData({\n      ...formData,\n      ManualDataSet: mainArray\n    });\n    console.log(formData);\n  };\n\n  // console.log(dynamicArray)\n  const [excelData, setExcelData] = useState([]);\n  const [xAxisData, setXAxisData] = useState([]);\n  const [yAxisData, setYAxisData] = useState([]);\n  const [tableData, setTableData] = useState({});\n\n  // console.log(\"Talbe\", tableData)\n  const [arrayData, setArrayData] = useState([]);\n  function insertOrUpdateAtIndex(myArray, indexToInsert, newValue) {\n    if (indexToInsert >= 0 && indexToInsert < myArray.length) {\n      myArray.splice(indexToInsert, 1, newValue);\n      console.log(myArray);\n    } else {\n      myArray.splice(myArray.length, 0, newValue);\n    }\n  }\n  const handleInputChange = (e, rowIndex, axis, i, index) => {\n    // console.log(index+1, i+1, axis, rowIndex+1, e)\n    const n = dynamicArray;\n    console.log(dynamicArray);\n    if (axis === 'x_axis') {\n      insertOrUpdateAtIndex(n[index][i][i][0], rowIndex, Number(e.target.value));\n    } else {\n      insertOrUpdateAtIndex(n[index][i][i][1], rowIndex, Number(e.target.value));\n    }\n    // console.log(n)\n    setDynamicArray(n);\n    console.log(n);\n    console.log(arrayData);\n  };\n  const handleUserInput = numRows => {\n    setUserInput(numRows);\n    const newData = [];\n    for (let i = 0; i < numRows; i++) {\n      newData.push({\n        x_axis: '',\n        y_axis: ''\n      });\n    }\n    setExcelData(newData);\n  };\n\n  // paste\n  function insertOrUpdateAtIndexForPasting(myArray, indexToInsert, newValue) {\n    if (indexToInsert >= 0 && indexToInsert < myArray.length) {\n      myArray.splice(indexToInsert, 1, newValue);\n      console.log(myArray);\n    } else {\n      myArray.splice(myArray.length, 0, newValue);\n    }\n  }\n  const handlePaste = async (e, rowIndex, axis, i, index) => {\n    const n = dynamicArray;\n    console.log(dynamicArray);\n    const clipboardData = e.clipboardData || window.clipboardData;\n    const pastedData = clipboardData.getData('text').split('\\n');\n    const rows = pastedData.length;\n    console.log(\"Pasted\");\n    await handleUserInput(rows);\n    pastedData.forEach((ind, inde) => {\n      console.table(index + 1, i + 1, axis, rowIndex + 1, Number(ind));\n      if (axis === 'x_axis') {\n        console.log(ind);\n        insertOrUpdateAtIndexForPasting(n[index][i][i][0], inde, Number(ind));\n      } else {\n        insertOrUpdateAtIndexForPasting(n[index][i][i][1], inde, Number(ind));\n        console.log(ind);\n      }\n      console.log(n[index][i][i]);\n    });\n    console.log(n);\n    await setDynamicArray(n);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const xValues = excelData.map(row => row.x_axis);\n    const yValues = excelData.map(row => row.y_axis);\n    setXAxisData(xValues);\n    setYAxisData(yValues);\n  };\n  useEffect(() => {\n    console.log(\"object\");\n    setDynamicArray(dynamicArray);\n  }, [dynamicArray]);\n\n  // Create Upload Dataset Code;\n  // const specimensInput = (index) => {\n  //   const InputTags = []\n  //   var j=1;\n  //   for(let i=0; i<noOfSpecimens[index]; i++){\n  //     InputTags.push(\n  //       <div className=\"upload_data_section\">\n  //           {excelData.length > 0 && (\n  //             <div className=\"upload_data_table\">\n  //               <h3>\n  //                 Specimen {j}\n  //               </h3>\n  //               <Table \n  //                 sno={j} index={index} \n  //                 y_axis={formData.y_axis[index]} \n  //                 x_axis={formData.x_axis[index]}\n  //                 ManualDataSet = {formData.ManualDataSet}\n  //                 excelData={excelData}\n  //                 NumberOf_Specimens={formData.NumberOf_Specimens}\n  //               />\n  //             </div>\n  //           )}\n  //       </div>\n  //     )\n  //     j=j+1;\n  //   }\n  //   return InputTags\n  // }\n\n  const createUploadDataset = () => {\n    const InputTags = [];\n    for (let i = 0; i < numberOfDataSets; i++) {\n      // console.log(\"Num\",i);\n      // console.log(noOfSpecimens[i])\n      InputTags.push( /*#__PURE__*/_jsxDEV(ManualDatasetUpload, {\n        DataSet: i,\n        noOfSpecimens: formData.NumberOf_Specimens[i],\n        y_axis: formData.y_axis[i],\n        x_axis: formData.x_axis[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this));\n    }\n    return InputTags;\n  };\n  createUploadDataset();\n\n  // const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"add-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Test Standard :\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ISO527 Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => {\n              setFormData({\n                ...formData,\n                SpecimenType: e.target.value\n              });\n              setSpecimenClicked(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select Test Standard\",\n              children: \"Specimen Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1A\",\n              children: \"1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1B\",\n              children: \"1B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Custom\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 15\n        }, this), specimenClicked && (formData.SpecimenType !== \"Custom\" ? formData.SpecimenType === \"1A\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"L0 \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 34\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setFormData({\n                  ...formData,\n                  L0: e.target.value\n                }),\n                placeholder: \"75\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"h \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 33\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setFormData({\n                  ...formData,\n                  h: e.target.value\n                }),\n                placeholder: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"L0 \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 34\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setFormData({\n                  ...formData,\n                  L0: e.target.value\n                }),\n                placeholder: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"h \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 33\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setFormData({\n                  ...formData,\n                  h: e.target.value\n                }),\n                placeholder: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"L0 \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 32\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setFormData({\n                  ...formData,\n                  L0: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"h \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"(mm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 31\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onChange: e => setFormData({\n                  ...formData,\n                  h: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 23\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            onClick: addDataSheet,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add\",\n              children: [\"Add Datasheets  \", /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"caret-down-outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 15\n        }, this), isaddDataSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_content_item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Number of Datasets :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: e => setNumberOfDataSets(e.target.value),\n              id: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn\",\n            onClick: createDataset,\n            children: \"Create Datasets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skip\",\n            onClick: () => {\n              setIsProcessedDataClicked(!isProcessedDataClicked);\n            },\n            children: [\"Skip To add Processed data \", /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"arrow-forward-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }, this), isCreateClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: /*#__PURE__*/_jsxDEV(TestCategoryComponent, {\n            numberOfDataSets: numberOfDataSets,\n            type: \"Number\",\n            component: \"Temperature\",\n            data: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 22\n            }, this), \" Conditioned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createConditionedTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 22\n            }, this), \"Number of Specimens / Dataset \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createNoOfSpecimensTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 22\n            }, this), \"Crosshead Speed (mm/min)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createCrossheadTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 22\n            }, this), \"X-Axis\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createX_axisTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test_container_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 22\n            }, this), \"Y-Axis\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test_container_inputs\",\n            children: isCreateClicked ? createY_axisTags() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 13\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: () => {\n          uploadDataset(formData.NumberOf_Specimens, userInput);\n          handleUserInput(1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nextClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          placeContent: \"center\"\n        },\n        children: [createUploadDataset(), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {},\n          children: \"submit DataSheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: saveData,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ISO527, \"TUO74qAKGuxxRT252oOKRT1S8Ag=\", false, function () {\n  return [useDispatch];\n});\n_c = ISO527;\nexport default ISO527;\nvar _c;\n$RefreshReg$(_c, \"ISO527\");","map":{"version":3,"names":["React","Children","Fragment","useEffect","useMemo","useState","useDispatch","testStandardInfo","XLSX","Table","Chart","TestCategoryComponent","ManualDatasetUpload","units","Reusable","jsxDEV","_jsxDEV","_Fragment","ISO527","isClickedNext","_s","isProcessedDataClicked","setIsProcessedDataClicked","dynamicArray","setDynamicArray","formData","setFormData","testStandard","SpecimenType","L0","h","temp","conditioned","NumberOf_Specimens","CrossHeadSpeed","x_axis","y_axis","dataSetValue","ManualDataSet","dispatch","numberOfDataSets","setNumberOfDataSets","specimenClicked","setSpecimenClicked","toAll","test","console","log","temperature","length","alert","s","lastValue","i","setTemperature","prevInputValues","newInputValues","isaddDataSheet","setIsAddDataSheet","addDataSheet","setAll","type","setConditioned","isCreateClicked","setisCreateClicked","createTemperatureTags","inputTags","push","className","children","onChange","event","Number","target","value","fileName","_jsxFileName","lineNumber","columnNumber","createConditionedTags","onClick","name","noOfSpecimens","setNoOfSpecimens","createNoOfSpecimensTags","crossHeads","setCrossHeads","createCrossheadTags","setX_axis","x_axisUnits","setX_axisUnits","allXUnits","setAllXUnits","getXUnits","e","unitValues","Object","values","flat","createX_axisTags","map","val","setY_axis","y_axisUnits","setY_axisUnits","allYUnits","setAllYUnits","getYUnits","createY_axisTags","createDataset","p","saveData","userInput","setUserInput","nextClicked","setNextClicked","createDynamicObject","index","uploadDataset","numberOf_Rows","mainArray","Array","newMatrix","j","excelData","setExcelData","xAxisData","setXAxisData","yAxisData","setYAxisData","tableData","setTableData","arrayData","setArrayData","insertOrUpdateAtIndex","myArray","indexToInsert","newValue","splice","handleInputChange","rowIndex","axis","n","handleUserInput","numRows","newData","insertOrUpdateAtIndexForPasting","handlePaste","clipboardData","window","pastedData","getData","split","rows","forEach","ind","inde","table","handleSubmit","preventDefault","xValues","row","yValues","createUploadDataset","InputTags","DataSet","placeholder","id","component","data","onSubmit","style","display","placeContent","_c","$RefreshReg$"],"sources":["E:/matship/frontend/src/Pages/UPLOAD/Tests/ISO527.js"],"sourcesContent":["import React, { Children, Fragment, useEffect, useMemo, useState } from 'react'\r\nimport \"../../../Styles/Pages/Test.css\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { testStandardInfo } from '../../../features/uploadSlice'\r\nimport * as XLSX from \"xlsx\";\r\nimport Table from './TestComponents/Table';\r\nimport Chart from './TestComponents/Chart';\r\nimport TestCategoryComponent from './ISO527/Components/TestCategoryComponent';\r\nimport ManualDatasetUpload from './ISO527/Components/ManualDatasetUpload';\r\nimport { units } from '../../../Units';\r\nimport Reusable from './ISO527/Components/Reusable';\r\n\r\nfunction ISO527({isClickedNext}) {\r\n  const [isProcessedDataClicked, setIsProcessedDataClicked] = useState(false)\r\n  const [dynamicArray, setDynamicArray] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    testStandard:\"ISO527\",\r\n    SpecimenType:\"\",\r\n    L0:0,\r\n    h:0,\r\n    temp:[],\r\n    conditioned:[],\r\n    NumberOf_Specimens:[],\r\n    CrossHeadSpeed:[],\r\n    x_axis:[],\r\n    y_axis:[],\r\n    dataSetValue:[],\r\n    ManualDataSet:[]\r\n  })\r\n  const dispatch = useDispatch()\r\n  const [numberOfDataSets, setNumberOfDataSets] = useState(0)\r\n  const [specimenClicked, setSpecimenClicked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(formData.SpecimenType === \"1A\"){\r\n      setFormData({...formData, L0:75, h:4})\r\n    }\r\n\r\n    if(formData.SpecimenType === \"1B\"){\r\n      setFormData({...formData, L0:50, h:4})\r\n    }\r\n\r\n  }, [formData.SpecimenType])\r\n\r\n  // To ALL\r\n  function toAll(test){\r\n    console.log(\"test\", test)\r\n\r\n    if(test === \"Temperature\"){\r\n      console.log(temperature.length)\r\n      if(temperature.length == 0){\r\n        alert(\"Enter atleast one value\")\r\n      }else{\r\n        console.log(temperature[temperature.length-1])\r\n        let s = temperature.length-1;\r\n        let lastValue = temperature[temperature.length-1];\r\n        console.log(lastValue, s)\r\n        for(let i=s; i<numberOfDataSets; i++){\r\n          setTemperature((prevInputValues) => {\r\n            const newInputValues = [...prevInputValues];\r\n            newInputValues[i] = lastValue\r\n            return newInputValues;\r\n          });\r\n        }\r\n        console.log(temperature)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add DataSheet\r\n  const [isaddDataSheet, setIsAddDataSheet] = useState(false) \r\n  const addDataSheet = () => {\r\n    if(formData.L0 ==0 || formData.h==0 ){\r\n      alert(\"Enter L0 and h values\")\r\n    }else{\r\n      setIsAddDataSheet(true)\r\n    }\r\n  }\r\n\r\n  // Set ALL\r\n  const setAll = (type) => {  \r\n    if(type === \"Number of Specimens\" ){\r\n      for(let i=0; i<numberOfDataSets; i++){\r\n        setTemperature((prevInputValues) => {\r\n            const newInputValues = [...prevInputValues];\r\n            newInputValues[i] = temperature[0]\r\n            return newInputValues;\r\n        });\r\n      }\r\n    }else if(type === \"Conditioned\"){\r\n      if(conditioned[0] === null){\r\n        alert(\"Please Enter the first Value\")\r\n      }else{\r\n        for(let i=0; i<numberOfDataSets; i++){\r\n          setConditioned((prevInputValues) => {\r\n              const newInputValues = [...prevInputValues];\r\n              newInputValues[i] = conditioned[0]\r\n              return newInputValues;\r\n          });\r\n          console.log(conditioned)\r\n      }\r\n      }\r\n    }\r\n}\r\n\r\n\r\n  const [isCreateClicked, setisCreateClicked] = useState(false);\r\n\r\n  // Create Temperature Input Fields\r\n  const [temperature, setTemperature] = useState([]);\r\n \r\n  const createTemperatureTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <input \r\n              key={i} type=\"number\" onChange={(event) => {\r\n                setTemperature((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = Number(event.target.value)\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"ama da\")\r\n  }, [temperature]  )\r\n\r\n\r\n  // Create Conditioned Input Fields\r\n  const [conditioned, setConditioned] = useState([]);\r\n  const createConditionedTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box '>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              className='conditionedInput'\r\n              key={i} type=\"number\" onChange={(event) => {\r\n                setConditioned((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"DAM\">DAM</option>\r\n              <option value=\"RH50\">RH50</option>\r\n            </select>\r\n            {\r\n                    i == 0 ? \r\n                    <div className=\"setAll\" onClick={() => setAll(\"Conditioned\")}>\r\n                        <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n                    </div> : \"\"\r\n              }\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create No of Specimens\r\n  const [noOfSpecimens, setNoOfSpecimens] = useState([])\r\n  const  createNoOfSpecimensTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            <input \r\n              key={i} type=\"number\" onChange={(event) => {\r\n                setNoOfSpecimens((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = Number(event.target.value);\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Cross Head\r\n  const [crossHeads, setCrossHeads] = useState([]);\r\n  const createCrossheadTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            <input \r\n              key={i} type=\"number\" onChange={(event) => {\r\n                setCrossHeads((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] =event.target.value\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create X Axis Fields\r\n  const [x_axis, setX_axis] = useState([]);\r\n  const [x_axisUnits, setX_axisUnits] = useState([]);\r\n  const [allXUnits, setAllXUnits] = useState(units);\r\n  const getXUnits = (e) =>  {\r\n    console.log(units[e])\r\n    setX_axisUnits(units[e])\r\n  }\r\n  useEffect(() => {\r\n    const unitValues = Object.values(units).flat();\r\n    setAllXUnits(unitValues)\r\n    console.log(unitValues)\r\n  }, [x_axisUnits])\r\n  const createX_axisTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n                type=\"text\" onChange={(event) => {\r\n                setX_axis((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value\r\n                  return newInputValues;\r\n                });\r\n\r\n                getXUnits(event.target.value)\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Engineering Strain\">Engineering Strain</option>\r\n              <option value=\"Engineering Stress\">Engineering Stress</option>\r\n            </select>\r\n\r\n            <select \r\n               type=\"text\"\r\n            >\r\n              <option value=\"\"></option>\r\n              {\r\n                x_axisUnits.length === 0 ? allXUnits.map((val) => (\r\n                  <option value={val} key={val}>{val}</option>\r\n                )) : \r\n                (\r\n                  x_axisUnits.map((val) => (\r\n                    <option value={val} key={val}>{val}</option>\r\n                  ))\r\n                )\r\n              }\r\n            </select>\r\n\r\n            {\r\n                    i == 0 ? \r\n                    <div className=\"setAll\">\r\n                        <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n                    </div> : \"\"\r\n            }\r\n            \r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create X Axis Fields\r\n  const [y_axis, setY_axis] = useState([]);\r\n  const [y_axisUnits, setY_axisUnits] = useState([]);\r\n  const [allYUnits, setAllYUnits] = useState(units);\r\n  const getYUnits = (e) =>  {\r\n    console.log(units[e])\r\n    setX_axisUnits(units[e])\r\n  }\r\n  useEffect(() => {\r\n    const unitValues = Object.values(units).flat();\r\n    setAllYUnits(unitValues)\r\n    console.log(unitValues)\r\n  }, [y_axisUnits])\r\n  const createY_axisTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"text\" onChange={(event) => {\r\n                setY_axis((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Engineering Strain(%)\">Engineering Strain(%)</option>\r\n              <option value=\"Engineering Stress(MPa)\">Engineering Stress(MPa)</option>\r\n            </select>\r\n            <select \r\n               type=\"text\"\r\n            >\r\n              <option value=\"\"></option>\r\n              {\r\n                y_axisUnits.length === 0 ? allYUnits.map((val) => (\r\n                  <option value={val} key={val}>{val}</option>\r\n                )) : \r\n                (\r\n                  y_axisUnits.map((val) => (\r\n                    <option value={val} key={val}>{val}</option>\r\n                  ))\r\n                )\r\n              }\r\n            </select>\r\n            {\r\n                    i == 0 ? \r\n                    <div className=\"setAll\">\r\n                        <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n                    </div> : \"\"\r\n            }\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n\r\n  const createDataset = () => {\r\n    if(numberOfDataSets > 0){\r\n      setisCreateClicked((p)=>!p)\r\n    }\r\n  }\r\n\r\n  const saveData = async() => {\r\n    await setFormData({...formData, dataSetValue:dynamicArray})\r\n    // console.log(formData)\r\n    await dispatch(testStandardInfo(formData))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setFormData({...formData, temp:temperature})\r\n  },[ temperature])\r\n\r\n  useEffect(() => {\r\n    setFormData({...formData, NumberOf_Specimens:noOfSpecimens})\r\n  },[ noOfSpecimens])\r\n\r\n  useEffect(() => {\r\n    // setFormData({...formData, conditioned:conditioned})\r\n    // const getInputTags = document.getElementsByClassName(\"conditionedInput\")\r\n    //     console.log(getInputTags.length)\r\n    //     // updates the Temperature Input tag\r\n    //     for(let i=0; i<temperature.length; i++){\r\n    //         getInputTags[i].value = conditioned[0]\r\n    //     }\r\n    //     console.log(conditioned)\r\n  },[ conditioned])\r\n\r\n  useEffect(() => {\r\n    setFormData({...formData, CrossHeadSpeed:crossHeads})\r\n  },[crossHeads])\r\n\r\n  useEffect(() => {\r\n    setFormData({...formData, x_axis:x_axis})\r\n  },[ x_axis])\r\n\r\n  useEffect(() => {\r\n    setFormData({...formData, y_axis:y_axis})\r\n  },[ y_axis])\r\n\r\n  useEffect(() => {\r\n    setFormData({...formData, dataSetValue:dynamicArray})\r\n    console.log(setFormData)\r\n  },[ dynamicArray])\r\n\r\n\r\n\r\n// \r\n  const [userInput, setUserInput] = useState(1);\r\n  const [nextClicked, setNextClicked] = useState(false)\r\n  // CREATE FIELD FOR EACH SPECIMENS\r\n  const createDynamicObject = (index) => ({\r\n    [index-1]:[[], []]\r\n  }); //Create Dynamic Array \r\n  // upload Dataset to Redux and create a \r\n\r\n  const uploadDataset = (NumberOf_Specimens , numberOf_Rows) => {\r\n\r\n    setNextClicked(true);\r\n    let mainArray = new Array()\r\n    //Create a array of Matrix when the \r\n    for(let i=0; i<NumberOf_Specimens.length; i++){    \r\n      let newMatrix = new Array()\r\n      for(let j=0; j<NumberOf_Specimens[i]; j++){\r\n        newMatrix.push([])\r\n        newMatrix.push([]);\r\n        mainArray.push(newMatrix)\r\n        newMatrix = []\r\n      }\r\n    }\r\n    setFormData({...formData, ManualDataSet:mainArray})\r\n    console.log(formData)\r\n\r\n  }\r\n  \r\n  // console.log(dynamicArray)\r\n  const [excelData, setExcelData] = useState([]);\r\n  const [xAxisData, setXAxisData] = useState([]);\r\n  const [yAxisData, setYAxisData] = useState([]);\r\n  const [tableData, setTableData] = useState({});\r\n\r\n  // console.log(\"Talbe\", tableData)\r\n  const [arrayData, setArrayData] = useState([]);\r\n\r\n  function insertOrUpdateAtIndex(myArray, indexToInsert, newValue) {\r\n    if (indexToInsert >= 0 && indexToInsert < myArray.length) {\r\n      myArray.splice(indexToInsert, 1, newValue);\r\n      console.log(myArray)\r\n    } else {\r\n      myArray.splice(myArray.length, 0, newValue);\r\n    }\r\n  }\r\n\r\n  const  handleInputChange = (e, rowIndex, axis, i, index) => {\r\n    // console.log(index+1, i+1, axis, rowIndex+1, e)\r\n      const n = dynamicArray;\r\n      console.log(dynamicArray)\r\n      if(axis === 'x_axis'){\r\n        insertOrUpdateAtIndex(n[index][i][i][0], rowIndex,Number(e.target.value))\r\n      }else{\r\n        insertOrUpdateAtIndex(n[index][i][i][1], rowIndex,Number(e.target.value))\r\n      }\r\n    // console.log(n)\r\n    setDynamicArray(n)\r\n    console.log(n)\r\n    console.log(arrayData)\r\n  };\r\n\r\n  const handleUserInput = (numRows) => {\r\n    setUserInput(numRows);\r\n    const newData = [];\r\n    for (let i = 0; i < numRows; i++) {\r\n      newData.push({ x_axis: '', y_axis: '' });\r\n    }\r\n    setExcelData(newData);\r\n  };\r\n\r\n  // paste\r\n  function insertOrUpdateAtIndexForPasting(myArray, indexToInsert, newValue) {\r\n    if (indexToInsert >= 0 && indexToInsert < myArray.length) {\r\n      myArray.splice(indexToInsert, 1, newValue);\r\n      console.log(myArray)\r\n    } else {\r\n      myArray.splice(myArray.length, 0, newValue);\r\n    }\r\n  }\r\n\r\n  const handlePaste = async(e, rowIndex, axis , i, index) => {\r\n    const n = dynamicArray;\r\n    console.log(dynamicArray)\r\n    const clipboardData = e.clipboardData || window.clipboardData;\r\n    const pastedData = clipboardData.getData('text').split('\\n');\r\n    const rows = pastedData.length\r\n    console.log(\"Pasted\")\r\n    await handleUserInput(rows)\r\n    pastedData.forEach((ind, inde) => {\r\n      console.table(index+1, i+1, axis, rowIndex+1, Number(ind))\r\n      if(axis === 'x_axis'){\r\n        console.log(ind)\r\n        insertOrUpdateAtIndexForPasting(n[index][i][i][0], inde, Number(ind))\r\n      }else{\r\n        insertOrUpdateAtIndexForPasting(n[index][i][i][1], inde, Number(ind))\r\n        console.log(ind)\r\n      }\r\n      console.log(n[index][i][i])\r\n    })\r\n    console.log(n)\r\n    await setDynamicArray(n)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const xValues = excelData.map((row) => row.x_axis);\r\n    const yValues = excelData.map((row) => row.y_axis);\r\n\r\n    setXAxisData(xValues);\r\n    setYAxisData(yValues);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"object\")\r\n    setDynamicArray(dynamicArray)\r\n  }, [dynamicArray])\r\n\r\n  // Create Upload Dataset Code;\r\n  // const specimensInput = (index) => {\r\n  //   const InputTags = []\r\n  //   var j=1;\r\n  //   for(let i=0; i<noOfSpecimens[index]; i++){\r\n  //     InputTags.push(\r\n  //       <div className=\"upload_data_section\">\r\n  //           {excelData.length > 0 && (\r\n  //             <div className=\"upload_data_table\">\r\n  //               <h3>\r\n  //                 Specimen {j}\r\n  //               </h3>\r\n  //               <Table \r\n  //                 sno={j} index={index} \r\n  //                 y_axis={formData.y_axis[index]} \r\n  //                 x_axis={formData.x_axis[index]}\r\n  //                 ManualDataSet = {formData.ManualDataSet}\r\n  //                 excelData={excelData}\r\n  //                 NumberOf_Specimens={formData.NumberOf_Specimens}\r\n  //               />\r\n  //             </div>\r\n  //           )}\r\n  //       </div>\r\n  //     )\r\n  //     j=j+1;\r\n  //   }\r\n  //   return InputTags\r\n  // }\r\n\r\n  const createUploadDataset = () => {\r\n    const InputTags = []\r\n    for(let i=0; i<numberOfDataSets; i++){\r\n      // console.log(\"Num\",i);\r\n      // console.log(noOfSpecimens[i])\r\n      InputTags.push(\r\n          <ManualDatasetUpload \r\n            DataSet={i} \r\n            noOfSpecimens={formData.NumberOf_Specimens[i]}\r\n            y_axis={formData.y_axis[i]} \r\n            x_axis={formData.x_axis[i]}\r\n          />\r\n      )\r\n    }\r\n\r\n    return InputTags\r\n  }\r\n\r\n  createUploadDataset();\r\n\r\n  // const [temperature, setTemperature] = useState(Array(numberOfDataSets).fill(null));\r\n    \r\n\r\n  \r\n  return (\r\n    <>\r\n\r\n        <div className=\"test_container\">\r\n           <div className=\"test_header\">\r\n            <ion-icon name=\"add-outline\"></ion-icon>\r\n              <p>Test Standard : \r\n                <span>\r\n                  ISO527 Test\r\n                </span>\r\n              </p>\r\n           </div>\r\n            <div className=\"test_wrapper\">\r\n              <div className=\"test_content_item\">\r\n                <select onChange={(e) =>{\r\n                    setFormData({...formData, SpecimenType:e.target.value});\r\n                    setSpecimenClicked(true)\r\n                  } \r\n                }>\r\n                  <option value=\"Select Test Standard\">Specimen Type</option>\r\n                  <option value=\"1A\">1A</option>\r\n                  <option value=\"1B\">1B</option>\r\n                  <option value=\"Custom\">Custom</option>\r\n                </select>\r\n              </div>\r\n                {\r\n                  specimenClicked && (\r\n                    formData.SpecimenType !== \"Custom\" ? \r\n                    (\r\n                      formData.SpecimenType === \"1A\" ? (\r\n                        <div className=\"test_content_item\">\r\n                          <div className=\"content_item\">\r\n                            <span>\r\n                              L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setFormData({...formData, L0:e.target.value})} placeholder='75' />\r\n                            </span>\r\n                            <span>\r\n                              h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setFormData({...formData, h:e.target.value})} placeholder='4' />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                      : \r\n                      (\r\n                        <div className=\"test_content_item\">\r\n                          <div className=\"content_item\">\r\n                            <span>\r\n                              L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setFormData({...formData, L0:e.target.value})} placeholder=\"50\" />\r\n                            </span>\r\n                            <span>\r\n                              h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setFormData({...formData, h:e.target.value})} placeholder='4' />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )\r\n                    : \r\n                    (\r\n                      <div className=\"test_content_item\">\r\n                        <div className=\"content_item\">\r\n                          <span>\r\n                            L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setFormData({...formData, L0:e.target.value})} />\r\n                          </span>\r\n                          <span>\r\n                            h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setFormData({...formData, h:e.target.value})} />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  )\r\n              }\r\n              <div className=\"test_content_item\">\r\n                <div className=\"\" onClick={addDataSheet}>\r\n                 <div className=\"add\">\r\n                  Add Datasheets  <ion-icon name=\"caret-down-outline\"></ion-icon> \r\n                 </div>\r\n                </div>\r\n              </div>  \r\n              {\r\n                isaddDataSheet && (\r\n                  <div className=\"test_content_item\">\r\n                    <span>\r\n                      <h4>Number of Datasets :</h4>\r\n                      <input type=\"number\" onChange={(e) =>setNumberOfDataSets(e.target.value)} id=\"\" />\r\n                    </span>\r\n                    <div className=\"btn\" onClick={createDataset}>\r\n                      Create Datasets\r\n                    </div>\r\n                    <div className=\"skip\" onClick={() => {\r\n                      setIsProcessedDataClicked(!isProcessedDataClicked)\r\n                    }}>\r\n                      Skip To add Processed data <ion-icon name=\"arrow-forward-outline\"></ion-icon>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n          isCreateClicked ? \r\n          (\r\n            <div className=\"test_container\">\r\n              {/* TEMPERATURE */}\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <TestCategoryComponent \r\n                    numberOfDataSets={numberOfDataSets} \r\n                    type={\"Number\"} component={\"Temperature\"} \r\n                    data={2}\r\n\r\n                  />\r\n                </div>\r\n              </>\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon> Conditioned</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createConditionedTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Number of Specimens / Dataset </p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createNoOfSpecimensTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Crosshead Speed (mm/min)</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createCrossheadTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>X-Axis</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ?  createX_axisTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Y-Axis</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createY_axisTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n          ):\"\"\r\n        }\r\n        <form onSubmit={handleSubmit}>\r\n          {/* <label>\r\n            Number of Rows:\r\n            <input type=\"number\" value={excelData.length} onChange={(e) => handleUserInput(e.target.value)} />\r\n          </label> */}\r\n          <br />\r\n          {/* <button type='submit'>submit</button> */}\r\n        </form>\r\n\r\n        <div className=\"next\">\r\n            <div className=\"btn\" onClick={() => {uploadDataset(formData.NumberOf_Specimens, userInput); handleUserInput(1)}}>\r\n             Next\r\n            </div>\r\n        </div>\r\n\r\n      <div>\r\n\r\n      {\r\n         nextClicked && (\r\n          <div style={{display:\"grid\", placeContent:\"center\"}}>\r\n          {\r\n            createUploadDataset()\r\n          }\r\n          <div onClick={() => {}}>\r\n            submit DataSheet\r\n          </div>\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n    <div className=\"next\">\r\n      <div className=\"btn\" onClick={saveData}>\r\n        Save\r\n      </div>\r\n    </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ISO527"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}