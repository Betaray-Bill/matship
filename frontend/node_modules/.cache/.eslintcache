[{"E:\\matship\\frontend\\src\\index.js":"1","E:\\matship\\frontend\\src\\App.js":"2","E:\\matship\\frontend\\src\\app\\store.js":"3","E:\\matship\\frontend\\src\\Components\\Nav.js":"4","E:\\matship\\frontend\\src\\Pages\\Home.js":"5","E:\\matship\\frontend\\src\\Components\\Dropdown.js":"6","E:\\matship\\frontend\\src\\constants.js":"7","E:\\matship\\frontend\\src\\Pages\\Login.js":"8","E:\\matship\\frontend\\src\\Pages\\Register.js":"9","E:\\matship\\frontend\\src\\features\\userSlice.js":"10","E:\\matship\\frontend\\src\\Components\\PrivateRoute.js":"11","E:\\matship\\frontend\\src\\Pages\\Pagenotfound.js":"12","E:\\matship\\frontend\\src\\Pages\\Upload.js":"13","E:\\matship\\frontend\\src\\TypesOfMaterials.js":"14","E:\\matship\\frontend\\src\\Components\\Maindropdown.js":"15","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\TestStandards.js":"16","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\BaseMaterialinfo.js":"17","E:\\matship\\frontend\\src\\features\\uploadSlice.js":"18","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527.js":"19","E:\\matship\\frontend\\src\\Pages\\Demo.js":"20"},{"size":623,"mtime":1699617653330,"results":"21","hashOfConfig":"22"},{"size":920,"mtime":1699616032480,"results":"23","hashOfConfig":"22"},{"size":755,"mtime":1698987530736,"results":"24","hashOfConfig":"22"},{"size":1769,"mtime":1696488668260,"results":"25","hashOfConfig":"22"},{"size":8927,"mtime":1699781290928,"results":"26","hashOfConfig":"22"},{"size":1420,"mtime":1698063892471,"results":"27","hashOfConfig":"22"},{"size":288,"mtime":1696049184000,"results":"28","hashOfConfig":"22"},{"size":3675,"mtime":1698125882297,"results":"29","hashOfConfig":"22"},{"size":5918,"mtime":1698125618739,"results":"30","hashOfConfig":"22"},{"size":1635,"mtime":1696439197503,"results":"31","hashOfConfig":"22"},{"size":269,"mtime":1696483949934,"results":"32","hashOfConfig":"22"},{"size":337,"mtime":1696603422982,"results":"33","hashOfConfig":"22"},{"size":14707,"mtime":1699844277008,"results":"34","hashOfConfig":"22"},{"size":542,"mtime":1698328483050,"results":"35","hashOfConfig":"22"},{"size":2748,"mtime":1699621054721,"results":"36","hashOfConfig":"22"},{"size":998,"mtime":1699842762499,"results":"37","hashOfConfig":"22"},{"size":12876,"mtime":1699844258190,"results":"38","hashOfConfig":"22"},{"size":577,"mtime":1699453975622,"results":"39","hashOfConfig":"22"},{"size":18251,"mtime":1699873153532,"results":"40","hashOfConfig":"22"},{"size":9270,"mtime":1699616008485,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d09bb8",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\matship\\frontend\\src\\index.js",[],[],"E:\\matship\\frontend\\src\\App.js",["107","108","109"],[],"E:\\matship\\frontend\\src\\app\\store.js",[],[],"E:\\matship\\frontend\\src\\Components\\Nav.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Home.js",["110","111","112","113","114","115","116","117"],[],"E:\\matship\\frontend\\src\\Components\\Dropdown.js",["118","119"],[],"E:\\matship\\frontend\\src\\constants.js",[],[],["120"],"E:\\matship\\frontend\\src\\Pages\\Login.js",["121"],[],"E:\\matship\\frontend\\src\\Pages\\Register.js",["122","123"],[],"E:\\matship\\frontend\\src\\features\\userSlice.js",[],[],["124"],"E:\\matship\\frontend\\src\\Components\\PrivateRoute.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Pagenotfound.js",[],[],["125"],"E:\\matship\\frontend\\src\\Pages\\Upload.js",["126"],[],"// import React, { useEffect, useRef, useState } from 'react'\r\n// import Nav from '../Components/Nav'\r\n// import '../Styles/Pages/Upload.css'\r\n// import Dropdown from '../Components/Dropdown';\r\n// import {Family, masterClass, subClass} from \"../TypesOfMaterials.js\"\r\n// import { useSelector } from 'react-redux';\r\n// import debounce from 'lodash/debounce';\r\n// import axios from 'axios';\r\n// import TestStandards from './UPLOAD/TestStandards.js';\r\n\r\n\r\n// function Upload() {\r\n//   const scrollToResult = useRef();\r\n//   const arr = [];\r\n  \r\n//   const [showElements, setShowElements] = useState(false)\r\n//   const [isLegacyYes, setIsLegacyYes] = useState(false);\r\n//   const [isLegacyNo, setIsLegacyNo] = useState(false);\r\n\r\n//   const {currentUser} = useSelector(state => state.user)\r\n\r\n//   const [addData, setAddData] = useState({\r\n//     MasterClass:\"\",\r\n//     subClass:\"\",\r\n//     Family:\"\",\r\n//     productName:\"\",\r\n//     Sustainability:\"\",\r\n//     Filler:\"\",\r\n//     DeliveryForm:\"\",\r\n//     company:currentUser ? currentUser.company : \"\",\r\n//     companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n//     isLegacy:false\r\n//   })\r\n\r\n//   const submitData = async() => {\r\n//     console.log(addData)\r\n//     // const addDataIsempty = Object.values(addData).some(value => !value)  \r\n//     setAddData(\r\n//       {...addData, isLegacy: isLegacyYes ? isLegacyYes : isLegacyNo}\r\n//     )\r\n//     console.log(addData)\r\n//     if(!addData.isLegacy){\r\n//       alert(\"This is an unapproved material. This will be sent to Matship experts for approval. It may take 1 week\");\r\n//     }\r\n\r\n//     try{\r\n//       const res = await fetch(\"/api/materials/addMaterial\", {\r\n//         method:'POST',\r\n//         headers:{\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(addData)\r\n//       })\r\n\r\n//       const data = await res.json();\r\n//       console.log(data)\r\n\r\n//     }catch(err){\r\n//       console.log(err)\r\n//     }\r\n//   }\r\n\r\n//   const toggleShowContent = () => {\r\n//     setShowElements(true)\r\n//     setClicked(!clicked)\r\n//     setAddData({\r\n//       MasterClass:\"\",\r\n//       subClass:\"\",\r\n//       Family:\"\",\r\n//       productName:\"\",\r\n//       Sustainability:\"\",\r\n//       Filler:\"\",\r\n//       DeliveryForm:\"\",\r\n//       company:currentUser ? currentUser.company : \"\",\r\n//       companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n//       isLegacy:false\r\n//     })\r\n//     console.log(addData)\r\n//   }\r\n\r\n//   const [companyMat, setCompanyMat] = useState([])\r\n//   const handleCheckboxChange = async(a) => {\r\n//     console.log(a)\r\n//     if(a===\"yes\"){\r\n//       setIsLegacyYes((p) => !p)\r\n//       setIsLegacyNo(false)\r\n//       console.log(\"object\", currentUser.company)\r\n//       try{\r\n//         const res = await fetch(`/api/materials/${currentUser.companyEntity}/getAllProducts`)\r\n//         const data = await res.json();\r\n//         console.log(data)\r\n//         setCompanyMat(data)\r\n//         return data\r\n//       }catch(err){\r\n//         console.log(\"Cannot get the materials of this company\")\r\n//       }\r\n//     }else{\r\n//       setIsLegacyNo((p) => !p)\r\n//       setIsLegacyYes(false)\r\n//       try{\r\n//         const res = await fetch('/api/materials/getall')\r\n//         const data = await res.json();\r\n//         console.log(data)\r\n//         data.forEach(async(e) => {\r\n//           await arr.push(e.productName)\r\n//         })\r\n//         console.log(\"ASDasda\", arr)\r\n//         await setCompanyMat(arr)\r\n//         return data\r\n//       }catch(err){\r\n//         console.log(\"Cannot get the materials of this company\")\r\n//       }\r\n//     }\r\n//   };\r\n\r\n\r\n//   const [receivedData, setReceivedData] = useState('');\r\n\r\n//   const handleDataReceived = async(data) => {\r\n//     await setReceivedData(data);\r\n//     await setAddData({...addData, MasterClass:data})\r\n//   };\r\n//   const [receivedSubClass, setReceivedSubClass] = useState('');\r\n\r\n//   const handleDataSubClass =async(data) => {\r\n//     setReceivedSubClass(data)\r\n//     await setAddData({...addData, subClass:data})\r\n\r\n//   }\r\n//   const [receivedFamily, setReceivedFamily] = useState('');\r\n\r\n//   const handleDataFamily = async(data) => {\r\n//     setReceivedFamily(data)\r\n//     await setAddData({...addData, Family:data})\r\n//   }\r\n\r\n//   // Search Database\r\n//   const [value, setValue] = useState('')\r\n\r\n//   // Search Material\r\n//   const debouncedSearch = debounce(async (e) => {\r\n//     console.log(\"Send\", e)\r\n//     onSearch(value)\r\n//   }, 100);\r\n\r\n\r\n//   const onSearch = async(e) => {\r\n//     const {data} = await axios.get(`api/materials/getuploadsearch/${value}`);\r\n//     console.log(data.ans)\r\n//     setCompanyMat([])\r\n//     data.ans.forEach((i) => {\r\n//       setCompanyMat((p) => [...p, i.productName])\r\n//     })\r\n//   }\r\n\r\n//   const handleChange = (e) => {\r\n//     debouncedSearch(e.target.value);\r\n//     // onSearch(e.target.value);\r\n//   }\r\n\r\n//   const handleKeyPress = (event) => {\r\n\r\n//     if (event.key === 'Enter') {\r\n//       event.preventDefault()\r\n//       setShowElements(true)\r\n//       if(event.target.value){\r\n//         debouncedSearch(value)\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Search Onclick\r\n//   const [clicked, setClicked] = useState(false)\r\n\r\n//   //get Single Product\r\n//   const getSingleProduct = async(e) => {\r\n//     setValue(e)\r\n//     const {data} = await axios.get(`api/materials/getsinglematerial/${e}`);\r\n//     console.log(data)\r\n//     // setClicked(!clicked)\r\n//     setShowElements(true)\r\n//     setAddData(data.getMaterial)\r\n//     console.log(addData)\r\n//   }\r\n\r\n//   // Next to Test Standards\r\n//   const [isNextTestStandard, setIsNextTestStandard] = useState(false);\r\n\r\n//   const nextTestStandard = () => {\r\n//     setIsNextTestStandard(true);\r\n//     scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n//   }\r\n//   return (\r\n//     <>\r\n//         <Nav />\r\n//         <div className=\"upload_wrapper\">\r\n//           <div className=\"upload_container\">\r\n//               <div className=\"upload_header\">\r\n//                 <p>Base Material Info</p>\r\n//                 <div className=\"hr\"></div>\r\n//               </div>\r\n//               <form action=\"\">\r\n//                 {/* Legacy Data */}\r\n//                 <div className=\"form_content\">\r\n//                   <p>Legacy data</p>\r\n//                   <label htmlFor=\"\">\r\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"yes\")}>\r\n//                       {\r\n//                         isLegacyYes ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n//                       }\r\n//                         Yes\r\n//                       </div>\r\n//                   </label>\r\n//                   <label htmlFor=\"\">\r\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"no\")}>\r\n//                       {\r\n//                         isLegacyNo ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n//                       }\r\n//                         No\r\n//                       </div>\r\n//                   </label>\r\n//                 </div>\r\n\r\n//                 <div className=\"search_section\">\r\n//                   <div className=\"form_content legacy_search\">\r\n//                   {/* search DB */}\r\n//                     <input type=\"text\" \r\n//                       placeholder={(isLegacyNo && isLegacyYes) ? 'Search Materials' \r\n//                           :  \r\n//                         ( isLegacyYes ? `Search ${currentUser.company}` : `Search All Materials` )} \r\n//                         onChange={(e) => {setValue(e.target.value) }}\r\n//                         onKeyPress={handleKeyPress}\r\n//                         onClick={(e) => setClicked(!clicked)}\r\n//                         value={value}\r\n//                     />\r\n//                     <ion-icon name=\"search-outline\"></ion-icon>\r\n//                   </div>\r\n\r\n//                   {\r\n//                     clicked ?  \r\n//                     <div className=\"search_suggestion\">\r\n//                       <div className='suggested'>\r\n//                         {\r\n//                           companyMat && companyMat.map((e) => (\r\n//                             <p key={e} onClick={()=>getSingleProduct(e)}>{e}</p>\r\n//                           ))\r\n//                         }\r\n//                       </div>\r\n//                       <div className=\"form_content\">\r\n//                         <div className=\"btn\" onClick={toggleShowContent}>\r\n//                           <ion-icon name=\"add-outline\"></ion-icon> Add New\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     :\r\n//                     \"\"\r\n//                   }\r\n\r\n//                 </div>\r\n\r\n//                 {\r\n//                   showElements && (\r\n//                     <>\r\n//                       <div className=\"close\">\r\n//                         <div className=\"close_btn\" onClick={(e) => { setShowElements(false)}}>\r\n//                           <ion-icon name=\"close-outline\"></ion-icon> Close\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"add_element_container\">\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Class\"} data={masterClass} sendToParent={handleDataReceived}/>\r\n//                         </div>\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Sub Class\"} data={receivedData && subClass[receivedData].subClass }  sendToParent={handleDataSubClass}/>\r\n//                         </div>\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Family\"} data={receivedSubClass && Family[receivedSubClass].subClass} sendToParent={handleDataFamily}/>\r\n//                         </div>\r\n//                         {\r\n//                           isLegacyYes ? \r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Company Name</label>\r\n//                             <input type=\"text\" readOnly placeholder={currentUser.company} style={{\"color\":\"black\"}}/>\r\n//                           </div> :\r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Company Name</label>\r\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\r\n//                           </div>\r\n//                         }\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Product Name</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, productName:e.target.value})} value={addData.productName && addData.productName} name=\"productName\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Sustainability</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Sustainability:e.target.value})} value={addData.Sustainability && addData.Sustainability} name=\"Sustainability\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Filler</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Filler:e.target.value})} value={addData.Filler && addData.Filler} name=\"Filler\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Delivery form</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} value={addData.DeliveryForm && addData.DeliveryForm} name=\"Delivery form\" placeholder=''/>\r\n//                         </div>\r\n//                         {\r\n//                           isLegacyNo ? \r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Material WebSite</label>\r\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Material WebSite\" placeholder=''/>\r\n//                           </div> : null\r\n//                         }\r\n//                       </div>\r\n//                       {/* onClick={submitData} */}\r\n//                     </>\r\n//                   )\r\n//                 }\r\n\r\n//               </form>\r\n//               <div className=\"next\">\r\n//                 <div className=\"btn\" onClick={nextTestStandard} ref={scrollToResult}>Next</div>\r\n//               </div>\r\n//           </div>\r\n\r\n//           {\r\n//             isNextTestStandard && <TestStandards />\r\n//           }\r\n//         </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Upload\r\n\r\n\r\nimport React, { useRef, useState } from 'react'\r\nimport Nav from '../Components/Nav'\r\nimport BaseMaterialinfo from './UPLOAD/BaseMaterialinfo';\r\nimport TestStandards from './UPLOAD/TestStandards';\r\nimport '../Styles/Pages/Upload.css'\r\n\r\nlet next=0;\r\nfunction Upload() {\r\n  // Click Previous and Next \r\n  const formElement = useRef(null);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const nextPage = next\r\n  const formPages = [\r\n    <BaseMaterialinfo isClickedNext={next}/>,\r\n    <TestStandards />\r\n  ];\r\n  const formname = [\r\n    \"Base material info\",\r\n    \"Select Test Standard\",\r\n  ]\r\n\r\n  const goToFormPage = async(i) => {\r\n    if(i!==currentPage){\r\n      setCurrentPage(i)\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"form_header\">\r\n        <div className=\"form_header_container\">\r\n        {\r\n          formname.map((e, _i) => (\r\n            <div className=\"page_name\" ref={formElement} onClick={() => goToFormPage(_i)} key={_i}>\r\n              <ion-icon name=\"pencil-outline\"></ion-icon>\r\n              <h4>{e}</h4>\r\n              {_i !== formname.length-1 ? <div className=\"sleeping_line\"></div> : \"\"}\r\n            </div>\r\n        \r\n          ))\r\n        }\r\n        {/* <ion-icon name=\"checkmark-outline\"></ion-icon> */}\r\n        </div>\r\n      \r\n      </div>\r\n\r\n      {\r\n        formPages[currentPage]\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Upload","E:\\matship\\frontend\\src\\TypesOfMaterials.js",[],[],"E:\\matship\\frontend\\src\\Components\\Maindropdown.js",["127","128"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\TestStandards.js",["129"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\BaseMaterialinfo.js",["130","131","132","133","134","135","136"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport Nav from './../../Components/Nav.js'\r\nimport '../../Styles/Pages/Upload.css'\r\nimport Dropdown from './../../Components/Dropdown';\r\nimport {Family, masterClass, subClass} from \"../../TypesOfMaterials.js\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport debounce from 'lodash/debounce';\r\nimport axios from 'axios';\r\nimport { uploadbaseInfo } from '../../features/uploadSlice.js';\r\n\r\nfunction BaseMaterialinfo({isClickedNext}) {\r\n  console.log(isClickedNext)\r\n  const dispatch = useDispatch()\r\n  const scrollToResult = useRef();\r\n  const arr = [];\r\n  \r\n  const [showElements, setShowElements] = useState(false)\r\n  const [isLegacyYes, setIsLegacyYes] = useState(false);\r\n  const [isLegacyNo, setIsLegacyNo] = useState(false);\r\n\r\n  const {currentUser} = useSelector(state => state.user)\r\n\r\n  const [addData, setAddData] = useState({\r\n    MasterClass:\"\",\r\n    subClass:\"\",\r\n    Family:\"\",\r\n    productName:\"\",\r\n    Sustainability:\"\",\r\n    Filler:\"\",\r\n    DeliveryForm:\"\",\r\n    company:currentUser ? currentUser.company : \"\",\r\n    companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n    isLegacy:false\r\n  })\r\n\r\n  const submitData = async() => {\r\n    console.log(addData)\r\n    // const addDataIsempty = Object.values(addData).some(value => !value)  \r\n    setAddData(\r\n      {...addData, isLegacy: isLegacyYes ? isLegacyYes : isLegacyNo}\r\n    )\r\n    console.log(addData)\r\n    if(!addData.isLegacy){\r\n      alert(\"This is an unapproved material. This will be sent to Matship experts for approval. It may take 1 week\");\r\n    }\r\n\r\n    try{\r\n      const res = await fetch(\"/api/materials/addMaterial\", {\r\n        method:'POST',\r\n        headers:{\r\n          'Content-Type': 'application/json',\r\n        },  \r\n        body: JSON.stringify(addData)\r\n      })\r\n\r\n      const data = await res.json();\r\n      console.log(data)\r\n\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const toggleShowContent = () => {\r\n    setShowElements(true)\r\n    setClicked(!clicked)\r\n    setAddData({\r\n      MasterClass:\"\",\r\n      subClass:\"\",\r\n      Family:\"\",\r\n      productName:\"\",\r\n      Sustainability:\"\",\r\n      Filler:\"\",\r\n      DeliveryForm:\"\",\r\n      company:currentUser ? currentUser.company : \"\",\r\n      companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n      isLegacy:isLegacyYes ? isLegacyYes : isLegacyNo\r\n    })\r\n    console.log(addData)\r\n  }\r\n\r\n  const [companyMat, setCompanyMat] = useState([])\r\n  const handleCheckboxChange = async(a) => {\r\n    console.log(a)\r\n    if(a===\"yes\"){\r\n      setIsLegacyYes((p) => !p)\r\n      setIsLegacyNo(false)\r\n      console.log(\"object\", currentUser.company)\r\n      try{\r\n        const res = await fetch(`/api/materials/${currentUser.companyEntity}/getAllProducts`)\r\n        const data = await res.json();\r\n        console.log(data)\r\n        setCompanyMat(data)\r\n        return data\r\n      }catch(err){\r\n        console.log(\"Cannot get the materials of this company\")\r\n      }\r\n    }else{\r\n      setIsLegacyNo((p) => !p)\r\n      setIsLegacyYes(false)\r\n      try{\r\n        const res = await fetch('/api/materials/getall')\r\n        const data = await res.json();\r\n        console.log(data)\r\n        data.forEach(async(e) => {\r\n          await arr.push(e.productName)\r\n        })\r\n        console.log(\"ASDasda\", arr)\r\n        await setCompanyMat(arr)\r\n        return data\r\n      }catch(err){\r\n        console.log(\"Cannot get the materials of this company\")\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const [receivedData, setReceivedData] = useState('');\r\n\r\n  const handleDataReceived = async(data) => {\r\n    await setReceivedData(data);\r\n    await setAddData({...addData, MasterClass:data})\r\n  };\r\n  const [receivedSubClass, setReceivedSubClass] = useState('');\r\n\r\n  const handleDataSubClass =async(data) => {\r\n    setReceivedSubClass(data)\r\n    await setAddData({...addData, subClass:data})\r\n\r\n  }\r\n  const [receivedFamily, setReceivedFamily] = useState('');\r\n\r\n  const handleDataFamily = async(data) => {\r\n    setReceivedFamily(data)\r\n    await setAddData({...addData, Family:data})\r\n  }\r\n\r\n  // Search Database\r\n  const [value, setValue] = useState('')\r\n\r\n  // Search Material\r\n  const debouncedSearch = debounce(async (e) => {\r\n    console.log(\"Send\", e)\r\n    onSearch(value)\r\n  }, 100);\r\n\r\n\r\n  const onSearch = async(e) => {\r\n    const {data} = await axios.get(`api/materials/getuploadsearch/${value}`);\r\n    console.log(data.ans)\r\n    setCompanyMat([])\r\n    data.ans.forEach((i) => {\r\n      setCompanyMat((p) => [...p, i.productName])\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n    // onSearch(e.target.value);\r\n  }\r\n\r\n  const handleKeyPress = (event) => {\r\n\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault()\r\n      setShowElements(true)\r\n      if(event.target.value){\r\n        debouncedSearch(value)\r\n      }\r\n    }\r\n  };\r\n\r\n  // Search Onclick\r\n  const [clicked, setClicked] = useState(false)\r\n\r\n  //get Single Product\r\n  const getSingleProduct = async(e) => {\r\n    setValue(e)\r\n    const {data} = await axios.get(`api/materials/getsinglematerial/${e}`);\r\n    console.log(data)\r\n    // setClicked(!clicked)\r\n    setShowElements(true)\r\n    setAddData(data.getMaterial)\r\n    console.log(addData)\r\n  }\r\n\r\n  // Next to Test Standards\r\n  const [isNextTestStandard, setIsNextTestStandard] = useState(false);\r\n\r\n  const nextTestStandard = () => {\r\n    setIsNextTestStandard(true);\r\n    scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  // Save to Redux\r\n  const saveData = async() => {\r\n    await dispatch(uploadbaseInfo(addData))\r\n  }\r\n\r\n  const clearData = () => {\r\n    setShowElements(false)\r\n    setAddData({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n        {/* <Nav /> */}\r\n        <div className=\"upload_wrapper\">\r\n          <div className=\"upload_container\">\r\n              <div className=\"upload_header\">\r\n                <p>1. Base Material Info</p>\r\n                <div className=\"hr\"></div>\r\n              </div>\r\n              <form action=\"\">\r\n                {/* Legacy Data */}\r\n                <div className=\"form_content\">\r\n                  <p>Legacy data</p>\r\n                  <label htmlFor=\"\">\r\n                      <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"yes\")}>\r\n                      {\r\n                        isLegacyYes ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n                      }\r\n                        Yes\r\n                      </div>\r\n                  </label>\r\n                  <label htmlFor=\"\">\r\n                      <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"no\")}>\r\n                      {\r\n                        isLegacyNo ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n                      }\r\n                        No\r\n                      </div>\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"search_section\">\r\n                  <div className=\"form_content legacy_search\">\r\n                  {/* search DB */}\r\n                    <input type=\"text\" \r\n                      placeholder={(isLegacyNo && isLegacyYes) ? 'Search Materials' \r\n                          :  \r\n                        ( isLegacyYes ? `Search ${currentUser.company}` : `Search All Materials` )} \r\n                        onChange={(e) => {setValue(e.target.value) }}\r\n                        onKeyPress={handleKeyPress}\r\n                        onClick={(e) => setClicked(!clicked)}\r\n                        value={value}\r\n                    />\r\n                    <ion-icon name=\"search-outline\"></ion-icon>\r\n                  </div>\r\n\r\n                  {\r\n                    clicked ?  \r\n                    <div className=\"search_suggestion\">\r\n                      <div className='suggested'>\r\n                        {\r\n                          companyMat && companyMat.map((e) => (\r\n                            <p key={e} onClick={()=>getSingleProduct(e)}>{e}</p>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                      <div className=\"form_content\">\r\n                        <div className=\"btn\" onClick={toggleShowContent}>\r\n                          <ion-icon name=\"add-outline\"></ion-icon> Add New\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n                  }\r\n\r\n                </div>\r\n\r\n                {\r\n                  showElements && (\r\n                    <>\r\n                      <div className=\"close\">\r\n                        <div className=\"close_btn\" onClick={clearData}>\r\n                          <ion-icon name=\"close-outline\"></ion-icon> Clear\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"add_element_container\">\r\n                        <div className=\"ade_content\">\r\n                              <Dropdown header={\"Class\"} data={masterClass} sendToParent={handleDataReceived}/>\r\n                        </div>\r\n                        <div className=\"ade_content\">\r\n                              <Dropdown header={\"Sub Class\"} data={receivedData && subClass[receivedData].subClass }  sendToParent={handleDataSubClass}/>\r\n                        </div>\r\n                        <div className=\"ade_content\">\r\n                              <Dropdown header={\"Family\"} data={receivedSubClass && Family[receivedSubClass].subClass} sendToParent={handleDataFamily}/>\r\n                        </div>\r\n                        {\r\n                          isLegacyYes ? \r\n                          <div className=\"ade_content_input\">\r\n                            <label htmlFor=\"\">Company Name</label>\r\n                            <input type=\"text\" readOnly placeholder={currentUser.company} style={{\"color\":\"black\"}}/>\r\n                          </div> :\r\n                          <div className=\"ade_content_input\">\r\n                            <label htmlFor=\"\">Company Name</label>\r\n                            <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\r\n                          </div>\r\n                        }\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Product Name</label>\r\n                          <input type=\"text\" onChange={(e) => setAddData({...addData, productName:e.target.value})} value={addData.productName && addData.productName} name=\"productName\" placeholder=''/>\r\n                        </div>\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Sustainability</label>\r\n                          <input type=\"text\" onChange={(e) => setAddData({...addData, Sustainability:e.target.value})} value={addData.Sustainability && addData.Sustainability} name=\"Sustainability\" placeholder=''/>\r\n                        </div>\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Filler</label>\r\n                          <input type=\"text\" onChange={(e) => setAddData({...addData, Filler:e.target.value})} value={addData.Filler && addData.Filler} name=\"Filler\" placeholder=''/>\r\n                        </div>\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Delivery form</label>\r\n                          <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} value={addData.DeliveryForm && addData.DeliveryForm} name=\"Delivery form\" placeholder=''/>\r\n                        </div>\r\n                        {\r\n                          isLegacyNo ? \r\n                          <div className=\"ade_content_input\">\r\n                            <label htmlFor=\"\">Material WebSite</label>\r\n                            <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Material WebSite\" placeholder=''/>\r\n                          </div> : null\r\n                        }\r\n                      </div>\r\n                      {/* onClick={submitData} */}\r\n                    </>\r\n                  )\r\n                }\r\n\r\n              </form>\r\n\r\n              <div className=\"next\">\r\n                <div className=\"btn\" onClick={saveData}>\r\n                  Save\r\n                </div>\r\n                {/* <div className=\"btn\" onClick={nextTestStandard} ref={scrollToResult}>Next</div> */}\r\n              </div>\r\n          </div>\r\n\r\n          <div onClick={()=>{isClickedNext(2)}}>\r\n            next\r\n          </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BaseMaterialinfo","E:\\matship\\frontend\\src\\features\\uploadSlice.js",[],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],[],"E:\\matship\\frontend\\src\\Pages\\Demo.js",["152","153","154","155","156","157","158","159","160","161"],[],{"ruleId":"162","severity":1,"message":"163","line":2,"column":25,"nodeType":"164","messageId":"165","endLine":2,"endColumn":36},{"ruleId":"162","severity":1,"message":"166","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":11},{"ruleId":"162","severity":1,"message":"167","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":12},{"ruleId":"162","severity":1,"message":"168","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":6},{"ruleId":"162","severity":1,"message":"169","line":20,"column":12,"nodeType":"164","messageId":"165","endLine":20,"endColumn":24},{"ruleId":"162","severity":1,"message":"170","line":22,"column":12,"nodeType":"164","messageId":"165","endLine":22,"endColumn":17},{"ruleId":"162","severity":1,"message":"171","line":23,"column":12,"nodeType":"164","messageId":"165","endLine":23,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":66,"column":8,"nodeType":"174","endLine":66,"endColumn":18,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"176","line":157,"column":12,"nodeType":"164","messageId":"165","endLine":157,"endColumn":19},{"ruleId":"162","severity":1,"message":"177","line":157,"column":21,"nodeType":"164","messageId":"165","endLine":157,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":233,"column":40,"nodeType":"180","endLine":233,"endColumn":44},{"ruleId":"162","severity":1,"message":"181","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":42,"column":11,"nodeType":"184","messageId":"185","endLine":44,"endColumn":16},{"ruleId":"186","replacedBy":"187"},{"ruleId":"162","severity":1,"message":"188","line":13,"column":22,"nodeType":"164","messageId":"165","endLine":13,"endColumn":27},{"ruleId":"162","severity":1,"message":"181","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"188","line":9,"column":12,"nodeType":"164","messageId":"165","endLine":9,"endColumn":17},{"ruleId":"186","replacedBy":"189"},{"ruleId":"186","replacedBy":"190"},{"ruleId":"162","severity":1,"message":"191","line":348,"column":9,"nodeType":"164","messageId":"165","endLine":348,"endColumn":17},{"ruleId":"162","severity":1,"message":"181","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":71,"column":11,"nodeType":"184","messageId":"185","endLine":73,"endColumn":16},{"ruleId":"162","severity":1,"message":"181","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"181","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"166","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":11},{"ruleId":"162","severity":1,"message":"192","line":36,"column":9,"nodeType":"164","messageId":"165","endLine":36,"endColumn":19},{"ruleId":"162","severity":1,"message":"193","line":131,"column":10,"nodeType":"164","messageId":"165","endLine":131,"endColumn":24},{"ruleId":"162","severity":1,"message":"194","line":157,"column":9,"nodeType":"164","messageId":"165","endLine":157,"endColumn":21},{"ruleId":"162","severity":1,"message":"195","line":188,"column":10,"nodeType":"164","messageId":"165","endLine":188,"endColumn":28},{"ruleId":"162","severity":1,"message":"196","line":190,"column":9,"nodeType":"164","messageId":"165","endLine":190,"endColumn":25},{"ruleId":"162","severity":1,"message":"197","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"198","line":33,"column":6,"nodeType":"174","endLine":33,"endColumn":29,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":38,"column":20,"nodeType":"202","messageId":"203","endLine":38,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":38,"column":37,"nodeType":"202","messageId":"203","endLine":38,"endColumn":39},{"ruleId":"162","severity":1,"message":"204","line":203,"column":9,"nodeType":"164","messageId":"165","endLine":203,"endColumn":17},{"ruleId":"172","severity":1,"message":"198","line":210,"column":5,"nodeType":"174","endLine":210,"endColumn":19,"suggestions":"205"},{"ruleId":"172","severity":1,"message":"198","line":214,"column":5,"nodeType":"174","endLine":214,"endColumn":21,"suggestions":"206"},{"ruleId":"172","severity":1,"message":"198","line":218,"column":5,"nodeType":"174","endLine":218,"endColumn":19,"suggestions":"207"},{"ruleId":"172","severity":1,"message":"198","line":222,"column":5,"nodeType":"174","endLine":222,"endColumn":17,"suggestions":"208"},{"ruleId":"172","severity":1,"message":"198","line":226,"column":5,"nodeType":"174","endLine":226,"endColumn":14,"suggestions":"209"},{"ruleId":"172","severity":1,"message":"198","line":230,"column":5,"nodeType":"174","endLine":230,"endColumn":14,"suggestions":"210"},{"ruleId":"162","severity":1,"message":"211","line":236,"column":10,"nodeType":"164","messageId":"165","endLine":236,"endColumn":14},{"ruleId":"162","severity":1,"message":"212","line":238,"column":9,"nodeType":"164","messageId":"165","endLine":238,"endColumn":25},{"ruleId":"162","severity":1,"message":"213","line":300,"column":10,"nodeType":"164","messageId":"165","endLine":300,"endColumn":19},{"ruleId":"162","severity":1,"message":"214","line":301,"column":10,"nodeType":"164","messageId":"165","endLine":301,"endColumn":19},{"ruleId":"162","severity":1,"message":"168","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":6},{"ruleId":"162","severity":1,"message":"169","line":27,"column":12,"nodeType":"164","messageId":"165","endLine":27,"endColumn":24},{"ruleId":"162","severity":1,"message":"170","line":29,"column":12,"nodeType":"164","messageId":"165","endLine":29,"endColumn":17},{"ruleId":"162","severity":1,"message":"171","line":30,"column":12,"nodeType":"164","messageId":"165","endLine":30,"endColumn":23},{"ruleId":"172","severity":1,"message":"215","line":70,"column":8,"nodeType":"174","endLine":70,"endColumn":10,"suggestions":"216"},{"ruleId":"178","severity":1,"message":"179","line":214,"column":40,"nodeType":"180","endLine":214,"endColumn":44},{"ruleId":"182","severity":1,"message":"183","line":241,"column":1,"nodeType":"184","messageId":"185","endLine":249,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":250,"column":1,"nodeType":"184","messageId":"185","endLine":265,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":266,"column":1,"nodeType":"184","messageId":"185","endLine":271,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":273,"column":1,"nodeType":"184","messageId":"185","endLine":277,"endColumn":52},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Demo' is defined but never used.","'m' is assigned a value but never used.","'isUsedFilter' is assigned a value but never used.","'datas' is assigned a value but never used.","'replicaData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array. Outer scope values like 'classMap' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["217"],"'isReset' is assigned a value but never used.","'setIsReset' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-new-object",["218"],"'error' is assigned a value but never used.",["218"],["218"],"'nextPage' is assigned a value but never used.","'submitData' is assigned a value but never used.","'receivedFamily' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'isNextTestStandard' is assigned a value but never used.","'nextTestStandard' is assigned a value but never used.","'Children' is defined but never used.","React Hook useEffect has a missing dependency: 'testData'. Either include it or remove the dependency array. You can also do a functional update 'setTestData(t => ...)' if you only need 'testData' in the 'setTestData' call.",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'saveData' is assigned a value but never used.",["220"],["221"],["222"],["223"],["224"],["225"],"'data' is assigned a value but never used.","'handleFileUpload' is assigned a value but never used.","'xAxisData' is assigned a value but never used.","'yAxisData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array.",["226"],{"desc":"227","fix":"228"},"no-object-constructor",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"227","fix":"243"},"Update the dependencies array to be: [getAllData]",{"range":"244","text":"245"},"Update the dependencies array to be: [testData, testData.SpecimenType]",{"range":"246","text":"247"},"Update the dependencies array to be: [temperature, testData]",{"range":"248","text":"249"},"Update the dependencies array to be: [noOfSpecimens, testData]",{"range":"250","text":"251"},"Update the dependencies array to be: [conditioned, testData]",{"range":"252","text":"253"},"Update the dependencies array to be: [crossHeads, testData]",{"range":"254","text":"255"},"Update the dependencies array to be: [testData, x_axis]",{"range":"256","text":"257"},"Update the dependencies array to be: [testData, y_axis]",{"range":"258","text":"259"},{"range":"260","text":"245"},[2180,2190],"[getAllData]",[890,913],"[testData, testData.SpecimenType]",[6427,6441],"[temperature, testData]",[6537,6553],"[noOfSpecimens, testData]",[6640,6654],"[conditioned, testData]",[6743,6755],"[crossHeads, testData]",[6832,6841],"[testData, x_axis]",[6918,6927],"[testData, y_axis]",[2024,2026]]