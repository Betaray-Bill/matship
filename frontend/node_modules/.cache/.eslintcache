[{"E:\\matship\\frontend\\src\\index.js":"1","E:\\matship\\frontend\\src\\App.js":"2","E:\\matship\\frontend\\src\\app\\store.js":"3","E:\\matship\\frontend\\src\\Components\\Nav.js":"4","E:\\matship\\frontend\\src\\Pages\\Home.js":"5","E:\\matship\\frontend\\src\\Components\\Dropdown.js":"6","E:\\matship\\frontend\\src\\constants.js":"7","E:\\matship\\frontend\\src\\Pages\\Login.js":"8","E:\\matship\\frontend\\src\\Pages\\Register.js":"9","E:\\matship\\frontend\\src\\features\\userSlice.js":"10","E:\\matship\\frontend\\src\\Components\\PrivateRoute.js":"11","E:\\matship\\frontend\\src\\Pages\\Pagenotfound.js":"12","E:\\matship\\frontend\\src\\Pages\\Upload.js":"13","E:\\matship\\frontend\\src\\TypesOfMaterials.js":"14","E:\\matship\\frontend\\src\\Components\\Maindropdown.js":"15","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\TestStandards.js":"16","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\BaseMaterialinfo.js":"17","E:\\matship\\frontend\\src\\features\\uploadSlice.js":"18","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527.js":"19","E:\\matship\\frontend\\src\\Pages\\Demo.js":"20","E:\\matship\\frontend\\src\\features\\isFormFilled.js":"21","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\TestComponents\\Table.js":"22","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\TestComponents\\Chart.js":"23","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\TestCategoryComponent.js":"24","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\ManualDatasetUpload.js":"25","E:\\matship\\frontend\\src\\Units.js":"26","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\Reusable.js":"27","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\ConditionedComponent.js":"28","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\NumberOfDataset.js":"29","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\Crosshead.js":"30"},{"size":623,"mtime":1699617653330,"results":"31","hashOfConfig":"32"},{"size":920,"mtime":1699616032480,"results":"33","hashOfConfig":"32"},{"size":850,"mtime":1700112131103,"results":"34","hashOfConfig":"32"},{"size":1769,"mtime":1696488668260,"results":"35","hashOfConfig":"32"},{"size":9008,"mtime":1700992745695,"results":"36","hashOfConfig":"32"},{"size":1420,"mtime":1698063892471,"results":"37","hashOfConfig":"32"},{"size":288,"mtime":1696049184000,"results":"38","hashOfConfig":"32"},{"size":3675,"mtime":1698125882297,"results":"39","hashOfConfig":"32"},{"size":5918,"mtime":1698125618739,"results":"40","hashOfConfig":"32"},{"size":1635,"mtime":1696439197503,"results":"41","hashOfConfig":"32"},{"size":269,"mtime":1696483949934,"results":"42","hashOfConfig":"32"},{"size":337,"mtime":1696603422982,"results":"43","hashOfConfig":"32"},{"size":15617,"mtime":1700575118200,"results":"44","hashOfConfig":"32"},{"size":542,"mtime":1698328483050,"results":"45","hashOfConfig":"32"},{"size":2477,"mtime":1701179367548,"results":"46","hashOfConfig":"32"},{"size":1061,"mtime":1705163329686,"results":"47","hashOfConfig":"32"},{"size":13983,"mtime":1700378711497,"results":"48","hashOfConfig":"32"},{"size":577,"mtime":1699453975622,"results":"49","hashOfConfig":"32"},{"size":16045,"mtime":1706078866093,"results":"50","hashOfConfig":"32"},{"size":9270,"mtime":1699616008485,"results":"51","hashOfConfig":"32"},{"size":511,"mtime":1700112076294,"results":"52","hashOfConfig":"32"},{"size":3200,"mtime":1706069510050,"results":"53","hashOfConfig":"32"},{"size":3498,"mtime":1705677815229,"results":"54","hashOfConfig":"32"},{"size":2466,"mtime":1706072950738,"results":"55","hashOfConfig":"32"},{"size":3058,"mtime":1706068154831,"results":"56","hashOfConfig":"32"},{"size":167,"mtime":1705679580514,"results":"57","hashOfConfig":"32"},{"size":389,"mtime":1705723397025,"results":"58","hashOfConfig":"32"},{"size":2943,"mtime":1706072039961,"results":"59","hashOfConfig":"32"},{"size":2454,"mtime":1706073843072,"results":"60","hashOfConfig":"32"},{"size":2378,"mtime":1706073823820,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1d09bb8",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\matship\\frontend\\src\\index.js",[],[],["164"],"E:\\matship\\frontend\\src\\App.js",["165","166","167"],[],"import './App.css';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Nav from './Components/Nav';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport Register from './Pages/Register';\nimport PrivateRoute from './Components/PrivateRoute';\nimport Pagenotfound from './Pages/Pagenotfound';\nimport Upload from './Pages/Upload';\nimport Demo from './Pages/Demo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/login\" element={<Login />}/>\n        <Route path=\"/register\" element={<Register />}/>\n        <Route path=\"/pagenotfound\" element={<Pagenotfound />}/>\n        <Route element={<PrivateRoute />}>\n          <Route path=\"/\" element={<Home />}/>\n          {/* <Route path=\"/\" element={<Demo />}/> */}\n          <Route path=\"/uploadData\" element={<Upload />}/>\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\matship\\frontend\\src\\app\\store.js",[],[],"E:\\matship\\frontend\\src\\Components\\Nav.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Home.js",["168","169","170","171","172","173"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport Nav from '../Components/Nav'\r\nimport '../Styles/Pages/Home.css'\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Maindropdown from '../Components/Maindropdown';\r\n\r\nvar classSet = new Set();\r\nvar subclassSet = new Set();\r\nvar familySet = new Set();\r\nvar m= []\r\n\r\nvar classMap = new Map();\r\nvar subclassMap = new Map();\r\nvar familyMap = new Map();\r\n\r\nfunction Home() {\r\n    const scrollToResult = useRef();\r\n\r\n    const [isUsedFilter, setIsUsedFilter] = useState(false)\r\n    const [value, setvalue] = useState(\"\");\r\n    const [datas, setDatas] = useState([])\r\n    const [replicaData, setreplicaData] = useState([])\r\n    const [result, setresult] = useState([]);\r\n    const [resultStr, setresultStr] = useState(\"\");\r\n    const [isSearched, setIsSearched] = useState(false);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // Get All the Data and Filter\r\n    const getAllData = async() => {\r\n        try{\r\n            const {data} = await axios.get('/api/materials/getall')\r\n            await setDatas(data)\r\n            console.log(data)\r\n            classMap.clear();\r\n            subclassMap.clear();\r\n            familyMap.clear()\r\n            for (const i of data) {\r\n\r\n                if (classMap.has(i.MasterClass)) {\r\n                    classMap.set(i.MasterClass, classMap.get(i.MasterClass) + 1);\r\n                } else {\r\n                    classMap.set(i.MasterClass, 1);\r\n                }\r\n                if (subclassMap.has(i.subClass)) {\r\n                    subclassMap.set(i.subClass, subclassMap.get(i.subClass) + 1);\r\n                } else {\r\n                    subclassMap.set(i.subClass, 1);\r\n                }\r\n                if (familyMap.has(i.Family)) {\r\n                    familyMap.set(i.Family, familyMap.get(i.Family) + 1);\r\n                } else {\r\n                    familyMap.set(i.Family, 1);\r\n                }\r\n            }\r\n            console.log(\"Map\", classMap)\r\n        }catch(err){\r\n            console.log(err)\r\n            navigate('/pagenotfound')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllData()\r\n    }, [classMap])\r\n\r\n\r\n    // Global Search\r\n    const fetchSearch = async(e) => {\r\n        console.log(e)\r\n        if(e !== ''){\r\n            console.log(e)\r\n            const {data} = await axios.get(`/api/materials/getglobalsearch/${e}`)\r\n            await setresult(data)\r\n            setIsSearched(true)\r\n            console.log(data)\r\n            scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }\r\n    const submit = async() => {\r\n        await fetchSearch(value)\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault()\r\n            fetchSearch(value);\r\n        }\r\n    }\r\n\r\n\r\n    const resetSearch = async() =>{\r\n        setvalue('')\r\n        setresult('')\r\n        setIsSearched(false)\r\n        getAllData()\r\n    }\r\n\r\n    // Remove Unchecked Value\r\n    const handleRemove = (e) => {\r\n        handleFilter(e, \"Remove\")\r\n    }\r\n    \r\n    // Filter Data\r\n    const handleFilter = async(e, type) => {\r\n        // getAllData()\r\n        let str = resultStr !== null ? resultStr+' '+e : e\r\n        setresultStr(str)\r\n        console.log(\"Str\", str)\r\n\r\n        // remove the unchecked elements\r\n        if(type === \"Remove\"){\r\n            console.log(e)\r\n            if(resultStr !== null){\r\n                str = resultStr.replace(e, \" \").trim()\r\n                console.log(\"removed\", str)\r\n                setresultStr(str)\r\n            }\r\n        }\r\n        console.log(str)\r\n        // Checks if the input is null or not\r\n        if(str === null){\r\n            return alert(\"Enter Data\")\r\n        }\r\n        // Fetches data\r\n        const { data } = await axios.get(`api/materials/getglobalsearch/${str}`);\r\n        await setreplicaData(data);\r\n        console.log(data)\r\n        m = data\r\n        classMap.clear();\r\n        subclassMap.clear();\r\n        familyMap.clear()\r\n        for (const i of data) {\r\n            if (classMap.has(i.MasterClass)) {\r\n                classMap.set(i.MasterClass, classMap.get(i.MasterClass) + 1);\r\n            } else {\r\n                classMap.set(i.MasterClass, 1);\r\n            }\r\n            if (subclassMap.has(i.subClass)) {\r\n                subclassMap.set(i.subClass, subclassMap.get(i.subClass) + 1);\r\n            } else {\r\n                subclassMap.set(i.subClass, 1);\r\n            }\r\n            if (familyMap.has(i.Family)) {\r\n                familyMap.set(i.Family, familyMap.get(i.Family) + 1);\r\n            } else {\r\n                familyMap.set(i.Family, 1);\r\n            }\r\n        }\r\n        console.log(classSet, subclassSet, familySet)\r\n        setIsUsedFilter(true);\r\n        setresult(data)\r\n    }\r\n\r\n    // Reset Filter\r\n    const [isReset, setIsReset] = useState(false)\r\n    const resetFilter = async() => {\r\n        const {data} = await axios.get('api/materials/getall')\r\n        await setDatas(data)\r\n        m = data;\r\n        setIsReset(false)\r\n        setresult([])\r\n        setIsUsedFilter(false);\r\n        setresultStr(null)\r\n        getAllData()\r\n    }\r\n    \r\n  return (\r\n    <> \r\n        <Nav />\r\n        <div className=\"home_wrapper\">\r\n            <div className=\"upload_btn\">\r\n                <Link to='/uploadData'>\r\n                    <ion-icon name=\"add-outline\"></ion-icon>\r\n                </Link>\r\n            </div>\r\n            <div className=\"home_container\">\r\n                <div className=\"home_container_header\">\r\n                    <p>Unlocking the World of Materials: Your Search, Our Find!</p>\r\n                </div>\r\n                \r\n                <div className=\"home_section\">\r\n                    {/* Global Search */}\r\n                    <div className=\"globalSearch\">\r\n                        <h2>Global Search</h2>\r\n                        <div className=\"globalSearch_container\">\r\n                            <ion-icon name=\"search-outline\"></ion-icon>\r\n                            <input type=\"text\" value={value} \r\n                                onChange={(e) => {setvalue(e.target.value); fetchSearch(e.target.value)}} \r\n                                onKeyPress={handleKeyPress}\r\n                                name=\"\" placeholder='Search the materials..' />\r\n                            {\r\n                                isSearched ? <ion-icon name=\"close-outline\" onClick={resetSearch}></ion-icon> : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className=\"submit\" style={{marginTop:\"40px\"}}>\r\n                            <div className=\"btn\" onClick={submit}>\r\n                                Search\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* Advanced Search */}\r\n                    <div className=\"advanced_filter_section\">\r\n                        <h2>Advanced Filter :</h2>\r\n\r\n                        <div className=\"advanced_filter_wrapper\">\r\n                            {\r\n                                Array.from(classMap).map((key,value) => (\r\n                                    <span>\r\n                                        <h3>{key[0]} : {key[1]}</h3>\r\n                                    </span>\r\n                                ))\r\n                            }\r\n                            <form>\r\n                                <Maindropdown isReset={isReset} data={classMap} name={\"Master Class\"} sendToParent={handleFilter} removeFromParent={handleRemove}/>\r\n                                <Maindropdown isReset={isReset} data={subclassMap} name={\"Sub Class\"} sendToParent={handleFilter} removeFromParent={handleRemove}/>\r\n                                <Maindropdown isReset={isReset} data={familyMap} name={\"Family\"} sendToParent={handleFilter} removeFromParent={handleRemove}/>\r\n                            </form>\r\n                        </div>\r\n                        \r\n                    <div className=\"reset_btn\" >\r\n                        <div className=\"btn\" onClick={resetFilter}>\r\n                            Reset\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"result\">\r\n                {result.length === 0 ? <h3></h3> : result.length > 1 ? <h3>{result.length} Results are found</h3>  : <h3>{result.length} Result is found</h3>}\r\n                <div className=\"output\" ref={scrollToResult}>\r\n                {\r\n                    result && result.map((e, _i) => (\r\n                        <div key={_i}>\r\n                            <h2>{e.MasterClass}</h2>\r\n                            <p>{e.productName}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","E:\\matship\\frontend\\src\\Components\\Dropdown.js",["174","175"],[],"import React, { useEffect, useState } from 'react'\r\n\r\n\r\nfunction Dropdown({header, data, sendToParent}) {\r\n\r\n    const [value, setvalue] = useState(\"\");\r\n\r\n    const [isDroped, setIsDroped] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setvalue(e)\r\n        setIsDroped(!isDroped)\r\n        sendToParent(e)\r\n    }\r\n  return (\r\n    <div>\r\n        <div className=\"dropdown_box\">\r\n            <div className=\"dropdown_header_section\">\r\n                <div className=\"dropdown_header\" onClick={() => setIsDroped(!isDroped)}>\r\n                    {\r\n                        value !== \"\" ? value : header\r\n                    }\r\n                                    <div className=\"dropdown_icon\">\r\n                    {\r\n                        isDroped ? <ion-icon name=\"chevron-up-outline\"></ion-icon> : <ion-icon name=\"chevron-down-outline\"></ion-icon>\r\n                    }\r\n                </div>\r\n            </div>    \r\n        </div>\r\n\r\n        <div className={isDroped ? `dropdown_list` : `dropdown_list_hidden`}>\r\n          {\r\n            data && data.map((e) => (\r\n                <p onClick={() => {handleChange(e)} } key={e}>{e}</p>  \r\n            ))\r\n          }     \r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n          {/* {\r\n            isDroped ? <ion-icon name=\"close-outline\" style={{color:\"red\"}} onClick={resetField}></ion-icon> : ''\r\n          } */}\r\nexport default Dropdown","E:\\matship\\frontend\\src\\constants.js",[],[],["176"],"E:\\matship\\frontend\\src\\Pages\\Login.js",["177"],[],"import React, { useState } from 'react'\r\nimport '../Styles/Pages/Login.css'\r\nimport Nav from '../Components/Nav'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport {\r\n  signInStart,\r\n  signInSuccess,\r\n  signInFailure,\r\n} from '../features/userSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Login() {\r\n    const { loading, error } = useSelector((state) => state.user);\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    \r\n    const [formData, setFormData] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n        companyEntity:\"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const submitHandler = async(e) => {\r\n        e.preventDefault()\r\n        try {\r\n            dispatch(signInStart());\r\n            const res = await fetch('api/user/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n            const data = await res.json();\r\n            if (data.success === false) {\r\n                dispatch(signInFailure(data));\r\n                return;\r\n            }\r\n            dispatch(signInSuccess(data));\r\n            navigate('/');\r\n        } catch (error) {\r\n            dispatch(signInFailure(error));\r\n        }\r\n    }\r\n  return (\r\n    <>\r\n        <div className=\"nav_holder\">\r\n            <Nav />\r\n        </div>\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <div className=\"login_header\">\r\n                    <p>Login </p>\r\n                    <p>Lorem ipsum dolor sit amet.</p>\r\n                </div>\r\n                <form class=\"login-form\" onSubmit={submitHandler}>\r\n                    <div class=\"input-floating-label\">\r\n                        <input class=\"input\" type=\"email\" value={formData.email}\r\n                            onChange={handleChange}\r\n                            name=\"email\" placeholder=\"username\" />\r\n                        <label for=\"input\"><ion-icon name=\"mail-outline\"></ion-icon> <span>Email</span></label>\r\n                        <span class=\"focus-bg\"></span>\r\n                    </div>\r\n                    <div class=\"input-floating-label\">\r\n                        <input class=\"input\" type=\"text\" value={formData.companyEntity}\r\n                            onChange={handleChange}\r\n                            name=\"companyEntity\" placeholder=\"username\" />\r\n                        <label for=\"input\"><ion-icon name=\"mail-outline\"></ion-icon> <span>Company Entity</span></label>\r\n                        <span class=\"focus-bg\"></span>\r\n                    </div>\r\n                    <div class=\"input-floating-label\">\r\n                        <input class=\"input\" type=\"password\" value={formData.password} \r\n                            onChange={handleChange}\r\n                            name=\"password\" placeholder=\"password\" />\r\n                        <label for=\"input\"><ion-icon name=\"key-outline\"></ion-icon><span>Password</span></label>\r\n                        <span class=\"focus-bg\"></span>\r\n                    </div>\r\n                    <button disabled={loading} id=\"submit\" class=\"btn-submit\">\r\n                        {loading ? 'Loading...' : 'Login'}\r\n                    </button>\r\n                </form>\r\n                <p>Create a new Account? <Link to=\"/register\">Register</Link></p>\r\n            </div>\r\n            <div className=\"login_img\">\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","E:\\matship\\frontend\\src\\Pages\\Register.js",["178","179"],[],"import React, { useEffect, useState } from 'react'\r\nimport Nav from '../Components/Nav'\r\nimport '../Styles/Pages/Register.css'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { signInSuccess } from '../features/userSlice';\r\n\r\nfunction Register() {\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    company:\"\",\r\n    phoneNumber:0,\r\n  })\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({...formData, [e.target.name]:e.target.value})\r\n  }\r\n\r\n  const submitHandler = async(e) => {\r\n    console.log(formData)\r\n    e.preventDefault()\r\n    if(formData.password !== confirmPassword){\r\n        alert(\"Password mismatch\")\r\n    }else{\r\n        try {\r\n            setLoading(true);\r\n            setError(false);\r\n            const res = await fetch('/api/user/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n            const data = await res.json();\r\n            console.log(data);\r\n            setLoading(false);\r\n            if (data.success === false) {\r\n                setError(true);\r\n                return;\r\n            }\r\n            dispatch(signInSuccess(data));\r\n            navigate('/login');\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(true);\r\n        }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n        <div className=\"nav_holder\">\r\n            <Nav/>\r\n        </div>\r\n        <div className=\"register\">\r\n            <div className=\"register_container\">\r\n                <div className=\"register_header\">\r\n                    <p>Register</p>\r\n                    <p>Lorem ipsum dolor sit amet.</p>\r\n                </div>\r\n                <form class=\"register-form\" onSubmit={submitHandler}>\r\n                    <div className=\"register_wrapper\">\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"text\" \r\n                              onChange={handleChange}\r\n                              name=\"name\" placeholder=\"username\" />\r\n                          <label for=\"input\"><ion-icon name=\"person-outline\"></ion-icon> <span>Username</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"email\" \r\n                              onChange={handleChange}\r\n                              name=\"email\" placeholder=\"username\" />\r\n                          <label for=\"input\"><ion-icon name=\"mail-outline\"></ion-icon> <span>Email</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"text\" \r\n                              onChange={handleChange}\r\n                              name=\"company\" placeholder=\"username\" />\r\n                          <label for=\"input\"><ion-icon name=\"mail-outline\"></ion-icon> <span>Company</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"text\" \r\n                              onChange={handleChange}\r\n                              name=\"companyEntity\" placeholder=\"Entity\" />\r\n                          <label for=\"input\"><ion-icon name=\"mail-outline\"></ion-icon> <span>companyEntity</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"Number\" \r\n                              onChange={handleChange}\r\n                              name=\"phoneNumber\" placeholder=\"username\" />\r\n                          <label for=\"input\"><ion-icon name=\"call-outline\"></ion-icon> <span>Phone Number</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"password\" \r\n                              onChange={handleChange}\r\n                              name=\"password\" placeholder=\"password\" />\r\n                          <label for=\"input\"><ion-icon name=\"key-outline\"></ion-icon><span>Password</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n                      <div class=\"input-floating-label\">\r\n                          <input class=\"input\" type=\"password\" \r\n                              onChange={(e) => setConfirmPassword(e.target.value)}\r\n                              name=\"confirmPassword\" placeholder=\"Confirm Password\" />\r\n                          <label for=\"input\"><ion-icon name=\"key-outline\"></ion-icon><span>Confirm Password</span></label>\r\n                          <span class=\"focus-bg\"></span>\r\n                      </div>\r\n                    </div>\r\n                    <button disabled={loading}\r\n                        id=\"submit\" class=\"btn-submit\">\r\n                        {loading ? 'Loading...' : 'Register'}\r\n                    </button>\r\n                </form>\r\n                <p>Already have an Account? <Link to=\"/login\">Login</Link></p>\r\n            </div>\r\n            <div className=\"register_img\">\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","E:\\matship\\frontend\\src\\features\\userSlice.js",[],[],"E:\\matship\\frontend\\src\\Components\\PrivateRoute.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Pagenotfound.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Upload.js",["180","181","182"],[],"// import React, { useEffect, useRef, useState } from 'react'\r\n// import Nav from '../Components/Nav'\r\n// import '../Styles/Pages/Upload.css'\r\n// import Dropdown from '../Components/Dropdown';\r\n// import {Family, masterClass, subClass} from \"../TypesOfMaterials.js\"\r\n// import { useSelector } from 'react-redux';\r\n// import debounce from 'lodash/debounce';\r\n// import axios from 'axios';\r\n// import TestStandards from './UPLOAD/TestStandards.js';\r\n\r\n\r\n// function Upload() {\r\n//   const scrollToResult = useRef();\r\n//   const arr = [];\r\n  \r\n//   const [showElements, setShowElements] = useState(false)\r\n//   const [isLegacyYes, setIsLegacyYes] = useState(false);\r\n//   const [isLegacyNo, setIsLegacyNo] = useState(false);\r\n\r\n//   const {currentUser} = useSelector(state => state.user)\r\n\r\n//   const [addData, setAddData] = useState({\r\n//     MasterClass:\"\",\r\n//     subClass:\"\",\r\n//     Family:\"\",\r\n//     productName:\"\",\r\n//     Sustainability:\"\",\r\n//     Filler:\"\",\r\n//     DeliveryForm:\"\",\r\n//     company:currentUser ? currentUser.company : \"\",\r\n//     companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n//     isLegacy:false\r\n//   })\r\n\r\n//   const submitData = async() => {\r\n//     console.log(addData)\r\n//     // const addDataIsempty = Object.values(addData).some(value => !value)  \r\n//     setAddData(\r\n//       {...addData, isLegacy: isLegacyYes ? isLegacyYes : isLegacyNo}\r\n//     )\r\n//     console.log(addData)\r\n//     if(!addData.isLegacy){\r\n//       alert(\"This is an unapproved material. This will be sent to Matship experts for approval. It may take 1 week\");\r\n//     }\r\n\r\n//     try{\r\n//       const res = await fetch(\"/api/materials/addMaterial\", {\r\n//         method:'POST',\r\n//         headers:{\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(addData)\r\n//       })\r\n\r\n//       const data = await res.json();\r\n//       console.log(data)\r\n\r\n//     }catch(err){\r\n//       console.log(err)\r\n//     }\r\n//   }\r\n\r\n//   const toggleShowContent = () => {\r\n//     setShowElements(true)\r\n//     setClicked(!clicked)\r\n//     setAddData({\r\n//       MasterClass:\"\",\r\n//       subClass:\"\",\r\n//       Family:\"\",\r\n//       productName:\"\",\r\n//       Sustainability:\"\",\r\n//       Filler:\"\",\r\n//       DeliveryForm:\"\",\r\n//       company:currentUser ? currentUser.company : \"\",\r\n//       companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n//       isLegacy:false\r\n//     })\r\n//     console.log(addData)\r\n//   }\r\n\r\n//   const [companyMat, setCompanyMat] = useState([])\r\n//   const handleCheckboxChange = async(a) => {\r\n//     console.log(a)\r\n//     if(a===\"yes\"){\r\n//       setIsLegacyYes((p) => !p)\r\n//       setIsLegacyNo(false)\r\n//       console.log(\"object\", currentUser.company)\r\n//       try{\r\n//         const res = await fetch(`/api/materials/${currentUser.companyEntity}/getAllProducts`)\r\n//         const data = await res.json();\r\n//         console.log(data)\r\n//         setCompanyMat(data)\r\n//         return data\r\n//       }catch(err){\r\n//         console.log(\"Cannot get the materials of this company\")\r\n//       }\r\n//     }else{\r\n//       setIsLegacyNo((p) => !p)\r\n//       setIsLegacyYes(false)\r\n//       try{\r\n//         const res = await fetch('/api/materials/getall')\r\n//         const data = await res.json();\r\n//         console.log(data)\r\n//         data.forEach(async(e) => {\r\n//           await arr.push(e.productName)\r\n//         })\r\n//         console.log(\"ASDasda\", arr)\r\n//         await setCompanyMat(arr)\r\n//         return data\r\n//       }catch(err){\r\n//         console.log(\"Cannot get the materials of this company\")\r\n//       }\r\n//     }\r\n//   };\r\n\r\n\r\n//   const [receivedData, setReceivedData] = useState('');\r\n\r\n//   const handleDataReceived = async(data) => {\r\n//     await setReceivedData(data);\r\n//     await setAddData({...addData, MasterClass:data})\r\n//   };\r\n//   const [receivedSubClass, setReceivedSubClass] = useState('');\r\n\r\n//   const handleDataSubClass =async(data) => {\r\n//     setReceivedSubClass(data)\r\n//     await setAddData({...addData, subClass:data})\r\n\r\n//   }\r\n//   const [receivedFamily, setReceivedFamily] = useState('');\r\n\r\n//   const handleDataFamily = async(data) => {\r\n//     setReceivedFamily(data)\r\n//     await setAddData({...addData, Family:data})\r\n//   }\r\n\r\n//   // Search Database\r\n//   const [value, setValue] = useState('')\r\n\r\n//   // Search Material\r\n//   const debouncedSearch = debounce(async (e) => {\r\n//     console.log(\"Send\", e)\r\n//     onSearch(value)\r\n//   }, 100);\r\n\r\n\r\n//   const onSearch = async(e) => {\r\n//     const {data} = await axios.get(`api/materials/getuploadsearch/${value}`);\r\n//     console.log(data.ans)\r\n//     setCompanyMat([])\r\n//     data.ans.forEach((i) => {\r\n//       setCompanyMat((p) => [...p, i.productName])\r\n//     })\r\n//   }\r\n\r\n//   const handleChange = (e) => {\r\n//     debouncedSearch(e.target.value);\r\n//     // onSearch(e.target.value);\r\n//   }\r\n\r\n//   const handleKeyPress = (event) => {\r\n\r\n//     if (event.key === 'Enter') {\r\n//       event.preventDefault()\r\n//       setShowElements(true)\r\n//       if(event.target.value){\r\n//         debouncedSearch(value)\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Search Onclick\r\n//   const [clicked, setClicked] = useState(false)\r\n\r\n//   //get Single Product\r\n//   const getSingleProduct = async(e) => {\r\n//     setValue(e)\r\n//     const {data} = await axios.get(`api/materials/getsinglematerial/${e}`);\r\n//     console.log(data)\r\n//     // setClicked(!clicked)\r\n//     setShowElements(true)\r\n//     setAddData(data.getMaterial)\r\n//     console.log(addData)\r\n//   }\r\n\r\n//   // Next to Test Standards\r\n//   const [isNextTestStandard, setIsNextTestStandard] = useState(false);\r\n\r\n//   const nextTestStandard = () => {\r\n//     setIsNextTestStandard(true);\r\n//     scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n//   }\r\n//   return (\r\n//     <>\r\n//         <Nav />\r\n//         <div className=\"upload_wrapper\">\r\n//           <div className=\"upload_container\">\r\n//               <div className=\"upload_header\">\r\n//                 <p>Base Material Info</p>\r\n//                 <div className=\"hr\"></div>\r\n//               </div>\r\n//               <form action=\"\">\r\n//                 {/* Legacy Data */}\r\n//                 <div className=\"form_content\">\r\n//                   <p>Legacy data</p>\r\n//                   <label htmlFor=\"\">\r\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"yes\")}>\r\n//                       {\r\n//                         isLegacyYes ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n//                       }\r\n//                         Yes\r\n//                       </div>\r\n//                   </label>\r\n//                   <label htmlFor=\"\">\r\n//                       <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"no\")}>\r\n//                       {\r\n//                         isLegacyNo ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n//                       }\r\n//                         No\r\n//                       </div>\r\n//                   </label>\r\n//                 </div>\r\n\r\n//                 <div className=\"search_section\">\r\n//                   <div className=\"form_content legacy_search\">\r\n//                   {/* search DB */}\r\n//                     <input type=\"text\" \r\n//                       placeholder={(isLegacyNo && isLegacyYes) ? 'Search Materials' \r\n//                           :  \r\n//                         ( isLegacyYes ? `Search ${currentUser.company}` : `Search All Materials` )} \r\n//                         onChange={(e) => {setValue(e.target.value) }}\r\n//                         onKeyPress={handleKeyPress}\r\n//                         onClick={(e) => setClicked(!clicked)}\r\n//                         value={value}\r\n//                     />\r\n//                     <ion-icon name=\"search-outline\"></ion-icon>\r\n//                   </div>\r\n\r\n//                   {\r\n//                     clicked ?  \r\n//                     <div className=\"search_suggestion\">\r\n//                       <div className='suggested'>\r\n//                         {\r\n//                           companyMat && companyMat.map((e) => (\r\n//                             <p key={e} onClick={()=>getSingleProduct(e)}>{e}</p>\r\n//                           ))\r\n//                         }\r\n//                       </div>\r\n//                       <div className=\"form_content\">\r\n//                         <div className=\"btn\" onClick={toggleShowContent}>\r\n//                           <ion-icon name=\"add-outline\"></ion-icon> Add New\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     :\r\n//                     \"\"\r\n//                   }\r\n\r\n//                 </div>\r\n\r\n//                 {\r\n//                   showElements && (\r\n//                     <>\r\n//                       <div className=\"close\">\r\n//                         <div className=\"close_btn\" onClick={(e) => { setShowElements(false)}}>\r\n//                           <ion-icon name=\"close-outline\"></ion-icon> Close\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"add_element_container\">\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Class\"} data={masterClass} sendToParent={handleDataReceived}/>\r\n//                         </div>\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Sub Class\"} data={receivedData && subClass[receivedData].subClass }  sendToParent={handleDataSubClass}/>\r\n//                         </div>\r\n//                         <div className=\"ade_content\">\r\n//                               <Dropdown header={\"Family\"} data={receivedSubClass && Family[receivedSubClass].subClass} sendToParent={handleDataFamily}/>\r\n//                         </div>\r\n//                         {\r\n//                           isLegacyYes ? \r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Company Name</label>\r\n//                             <input type=\"text\" readOnly placeholder={currentUser.company} style={{\"color\":\"black\"}}/>\r\n//                           </div> :\r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Company Name</label>\r\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\r\n//                           </div>\r\n//                         }\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Product Name</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, productName:e.target.value})} value={addData.productName && addData.productName} name=\"productName\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Sustainability</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Sustainability:e.target.value})} value={addData.Sustainability && addData.Sustainability} name=\"Sustainability\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Filler</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, Filler:e.target.value})} value={addData.Filler && addData.Filler} name=\"Filler\" placeholder=''/>\r\n//                         </div>\r\n//                         <div className=\"ade_content_input\">\r\n//                           <label htmlFor=\"\">Delivery form</label>\r\n//                           <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} value={addData.DeliveryForm && addData.DeliveryForm} name=\"Delivery form\" placeholder=''/>\r\n//                         </div>\r\n//                         {\r\n//                           isLegacyNo ? \r\n//                           <div className=\"ade_content_input\">\r\n//                             <label htmlFor=\"\">Material WebSite</label>\r\n//                             <input type=\"text\" onChange={(e) => setAddData({...addData, DeliveryForm:e.target.value})} name=\"Material WebSite\" placeholder=''/>\r\n//                           </div> : null\r\n//                         }\r\n//                       </div>\r\n//                       {/* onClick={submitData} */}\r\n//                     </>\r\n//                   )\r\n//                 }\r\n\r\n//               </form>\r\n//               <div className=\"next\">\r\n//                 <div className=\"btn\" onClick={nextTestStandard} ref={scrollToResult}>Next</div>\r\n//               </div>\r\n//           </div>\r\n\r\n//           {\r\n//             isNextTestStandard && <TestStandards />\r\n//           }\r\n//         </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Upload\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport Nav from '../Components/Nav'\r\nimport BaseMaterialinfo from './UPLOAD/BaseMaterialinfo';\r\nimport TestStandards from './UPLOAD/TestStandards';\r\nimport '../Styles/Pages/Upload.css'\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet next=0;\r\nfunction Upload() {\r\n  // Click Previous and Next \r\n  const formElement = useRef(null);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const {currentUser} = useSelector(state => state.user)\r\n  const {basematerialInfo, testStandard} = useSelector(state => state.uploadData)\r\n  const nextPage = next\r\n  const formPages = [\r\n    <BaseMaterialinfo isClickedNext={next} />,\r\n    <TestStandards isClickedNext={next} />\r\n  ];\r\n  const formname = [\r\n    \"Base material info\",\r\n    \"Select Test Standard\",\r\n  ]\r\n\r\n  const goToFormPage = async(i) => {\r\n    if(i!==currentPage){\r\n      setCurrentPage(i)\r\n    }\r\n  }\r\n\r\n  const submitForm = async(e) => {\r\n    e.preventDefault();\r\n    var obj = await {...basematerialInfo, ...testStandard}\r\n    try{\r\n      const res = await fetch(\"/api/materials/addMaterial\", {\r\n        method:'POST',\r\n        headers:{\r\n          'Content-Type': 'application/json',\r\n        },  \r\n        body: JSON.stringify(obj)\r\n      })\r\n\r\n      const data = await res.json();\r\n      console.log(data)\r\n\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n    console.log(obj)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"form_header\">\r\n        <div id=\"sticky-section\" className=\"form_header_container\">\r\n        {\r\n          formname.map((e, _i) => (\r\n            <div className=\"page_name\" ref={formElement} onClick={() => goToFormPage(_i)} key={_i}>\r\n              <ion-icon name=\"pencil-outline\"></ion-icon>\r\n              <h4>{e}</h4>\r\n              {_i !== formname.length-1 ? <div className=\"sleeping_line\"></div> : \"\"}\r\n            </div>\r\n        \r\n          ))\r\n        }\r\n        {/* <ion-icon name=\"checkmark-outline\"></ion-icon> */}\r\n        </div>\r\n      \r\n      </div>\r\n        {/* <BaseMaterialinfo  isClickedNext={next}/>\r\n        <TestStandards /> */}\r\n      <form onSubmit={submitForm}>\r\n        {\r\n          formPages[currentPage]\r\n        }\r\n        <button type='submit'>submit</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Upload","E:\\matship\\frontend\\src\\TypesOfMaterials.js",[],[],"E:\\matship\\frontend\\src\\Components\\Maindropdown.js",["183"],[],"import React, { useEffect, useState } from 'react'\r\n\r\n\r\nfunction Maindropdown({data, name,isReset, sendToParent, removeFromParent}) {\r\n \r\n    const [value, setvalue] = useState([]);\r\n    const [isDroped, setIsDroped] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(isReset === true){\r\n            setvalue([]);\r\n        }\r\n    }, [isReset])\r\n\r\n    const handleChange = (e) => {\r\n        const isChecked = e.target.checked;\r\n        const val = e.target.value; \r\n\r\n        console.log(isChecked, val)\r\n        if (isChecked) {\r\n            setvalue((prevValue) => [...prevValue, val]);\r\n            sendToParent(val)\r\n        } else {\r\n            setvalue(value.filter((checkedValue) => checkedValue !== val));\r\n            console.log(\"filter\", value)\r\n            // Send data to the Parent Component to remove that Unchecked Value\r\n            removeFromParent(val)\r\n        }\r\n    }\r\n\r\n    const resetField = () => {\r\n        setvalue([])\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"dropdown_box\">\r\n                <div className=\"dropdown_header_section\">\r\n                   <div className=\"dropdown_header\" onClick={() => setIsDroped(!isDroped)}>\r\n                            {\r\n                                isReset ? (value.length>0 ? value.join(\",\") : name) : name\r\n                            }\r\n                        <div className=\"dropdown_icon\">\r\n                            {\r\n                                isDroped ? <ion-icon name=\"chevron-up-outline\"></ion-icon> : <ion-icon name=\"chevron-down-outline\"></ion-icon>\r\n                            }\r\n                        </div>\r\n                   </div>    \r\n                   {\r\n                    isDroped ? <ion-icon name=\"close-outline\" style={{color:\"red\"}} onClick={resetField}></ion-icon> : ''\r\n                   }\r\n                </div>\r\n\r\n                <div className={isDroped ? `dropdown_list` : `dropdown_list_hidden`}>\r\n                    {\r\n                        data ? Array.from(data).map((key, _i) => (\r\n                            <li key={_i}><input type=\"checkbox\" value={key[0]} onChange={(i) => handleChange(i)} />{key[0]}-({key[1]})</li>\r\n                        )) : \"Loading..\"\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n          {/* {\r\n            isDroped ? <ion-icon name=\"close-outline\" style={{color:\"red\"}} onClick={resetField}></ion-icon> : ''\r\n          } */}\r\nexport default Maindropdown","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\TestStandards.js",["184"],[],"import React, { useEffect, useState } from 'react'\r\nimport ISO527 from './Tests/ISO527';\r\n\r\nfunction TestStandards() {\r\n  const [testStandard, setTestStandard] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"upload_wrapper\">\r\n        <div className=\"upload_container\">\r\n          <div className=\"upload_header\">\r\n            <p>2. Select Test Standard</p>\r\n          </div>\r\n          {/* <form action=\"\"> */}\r\n          <div className=\"testStandard_dropdown\">\r\n            <select onChange={(e) => setTestStandard(e.target.value)}>\r\n              <option value=\"Select Test Standard\">Select Test Standard</option>\r\n              <option value=\"ISO527\">ISO527</option>\r\n              <option value=\"ISO527-1\">ISO527-1</option>\r\n              <option value=\"ISO527-2\">ISO527-2</option>\r\n            </select>\r\n          </div>\r\n\r\n          {\r\n            testStandard === \"ISO527\" && (\r\n              <ISO527 />\r\n            )\r\n          }\r\n          {/* </form> */}\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestStandards","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\BaseMaterialinfo.js",["185","186","187","188","189","190","191"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport Nav from './../../Components/Nav.js'\r\nimport '../../Styles/Pages/Upload.css'\r\nimport Dropdown from './../../Components/Dropdown';\r\nimport {Family, masterClass, subClass} from \"../../TypesOfMaterials.js\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport debounce from 'lodash/debounce';\r\nimport axios from 'axios';\r\nimport { uploadbaseInfo } from '../../features/uploadSlice.js';\r\nimport { isFormFilledFalse, isFormFilledTrue } from '../../features/isFormFilled.js';\r\n\r\nfunction BaseMaterialinfo({isClickedNext}) {\r\n  const {currentUser} = useSelector(state => state.user)\r\n\r\n  const [formData, setFormData] = useState({\r\n    MasterClass:\"\",\r\n    subClass:\"\",\r\n    Family:\"\",\r\n    productName:\"\",\r\n    Sustainability:\"\",\r\n    Filler:\"\",\r\n    DeliveryForm:\"\",\r\n    company:currentUser ? currentUser.company : \"\",\r\n    companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n    isLegacy:false,\r\n  })\r\n  const dispatch = useDispatch()\r\n  const {isFormFilledState} = useSelector(state => state.formFilled)\r\n  const scrollToResult = useRef();\r\n  const arr = [];\r\n  console.log(isFormFilledState)\r\n  const [showElements, setShowElements] = useState(false)\r\n  const [isLegacyYes, setIsLegacyYes] = useState(false);\r\n  const [isLegacyNo, setIsLegacyNo] = useState(false);\r\n\r\n  const {basematerialInfo} = useSelector(state => state.uploadData)\r\n  console.log(basematerialInfo)\r\n\r\n  const submitData = async() => {\r\n\r\n    console.log(formData)\r\n    // const formDataIsempty = Object.values(formData).some(value => !value)  \r\n    setFormData(\r\n      {...formData, isLegacy: isLegacyYes ? isLegacyYes : isLegacyNo}\r\n    )\r\n    console.log(formData)\r\n    if(!formData.isLegacy){\r\n      alert(\"This is an unapproved material. This will be sent to Matship experts for approval. It may take 1 week\");\r\n    }\r\n\r\n    try{\r\n      const res = await fetch(\"/api/materials/addMaterial\", {\r\n        method:'POST',\r\n        headers:{\r\n          'Content-Type': 'application/json',\r\n        },  \r\n        body: JSON.stringify(formData)\r\n      })\r\n\r\n      const data = await res.json();\r\n      console.log(data)\r\n\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const toggleShowContent = () => {\r\n    setShowElements(true)\r\n    dispatch(isFormFilledFalse())\r\n    setClicked(!clicked)\r\n    setFormData({\r\n      MasterClass:\"\",\r\n      subClass:\"\",\r\n      Family:\"\",\r\n      productName:\"\",\r\n      Sustainability:\"\",\r\n      Filler:\"\",\r\n      DeliveryForm:\"\",\r\n      company:currentUser ? currentUser.company : \"\",\r\n      companyEntity:currentUser ? currentUser.companyEntity : \"\",\r\n      isLegacy:isLegacyYes ? isLegacyYes : isLegacyNo\r\n    })\r\n    console.log(formData)\r\n  }\r\n\r\n  const [companyMat, setCompanyMat] = useState([])\r\n  const handleCheckboxChange = async(a) => {\r\n    console.log(a)\r\n    if(a===\"yes\"){\r\n      setIsLegacyYes((p) => !p)\r\n      setIsLegacyNo(false)\r\n      console.log(\"object\", currentUser.company)\r\n      try{\r\n        const res = await fetch(`/api/materials/${currentUser.companyEntity}/getAllProducts`)\r\n        const data = await res.json();\r\n        console.log(data)\r\n        setCompanyMat(data)\r\n        return data\r\n      }catch(err){\r\n        console.log(\"Cannot get the materials of this company\")\r\n      }\r\n    }else{\r\n      setIsLegacyNo((p) => !p)\r\n      setIsLegacyYes(false)\r\n      try{\r\n        const res = await fetch('/api/materials/getall')\r\n        const data = await res.json();\r\n        console.log(data)\r\n        data.forEach(async(e) => {\r\n          await arr.push(e.productName)\r\n        })\r\n        console.log(\"ASDasda\", arr)\r\n        await setCompanyMat(arr)\r\n        return data\r\n      }catch(err){\r\n        console.log(\"Cannot get the materials of this company\")\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const [receivedData, setReceivedData] = useState('');\r\n\r\n  const handleDataReceived = async(data) => {\r\n    await setReceivedData(data);\r\n    await setFormData({...formData, MasterClass:data})\r\n  };\r\n  const [receivedSubClass, setReceivedSubClass] = useState('');\r\n\r\n  const handleDataSubClass =async(data) => {\r\n    setReceivedSubClass(data)\r\n    await setFormData({...formData, subClass:data})\r\n\r\n  }\r\n  const [receivedFamily, setReceivedFamily] = useState('');\r\n\r\n  const handleDataFamily = async(data) => {\r\n    setReceivedFamily(data)\r\n    await setFormData({...formData, Family:data})\r\n  }\r\n\r\n  // Search Database\r\n  const [value, setValue] = useState('')\r\n\r\n  // Search Material\r\n  const debouncedSearch = debounce(async (e) => {\r\n    console.log(\"Send\", e)\r\n    onSearch(value)\r\n  }, 100);\r\n\r\n\r\n  const onSearch = async(e) => {\r\n    const {data} = await axios.get(`api/materials/getuploadsearch/${value}`);\r\n    console.log(data.ans)\r\n    setCompanyMat([])\r\n    data.ans.forEach((i) => {\r\n      setCompanyMat((p) => [...p, i.productName])\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n    // onSearch(e.target.value);\r\n  }\r\n\r\n  const handleKeyPress = (event) => {\r\n\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault()\r\n      setShowElements(true)\r\n      if(event.target.value){\r\n        debouncedSearch(value)\r\n      }\r\n    }\r\n  };\r\n\r\n  // Search Onclick\r\n  const [clicked, setClicked] = useState(false)\r\n\r\n  //get Single Product\r\n  const getSingleProduct = async(e) => {\r\n    setValue(e)\r\n    const {data} = await axios.get(`api/materials/getsinglematerial/${e}`);\r\n    console.log(data)\r\n    // setClicked(!clicked)\r\n    setShowElements(true)\r\n    setFormData(data.getMaterial)\r\n    console.log(formData)\r\n  }\r\n\r\n  // Next to Test Standards\r\n  const [isNextTestStandard, setIsNextTestStandard] = useState(false);\r\n\r\n  const nextTestStandard = () => {\r\n    setIsNextTestStandard(true);\r\n    scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  // Save to Redux\r\n  const saveData = async(e) => {\r\n    e.preventDefault()\r\n    setShowElements(true)\r\n    await dispatch(uploadbaseInfo(formData))\r\n    await dispatch(isFormFilledTrue())\r\n  }\r\n\r\n  const clearData = () => {\r\n    setShowElements(false)\r\n    setFormData({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n        {/* <Nav /> */}\r\n        <div className=\"upload_wrapper\">\r\n          <div className=\"upload_container\">\r\n              <div className=\"upload_header\">\r\n                <p>1. Base Material Info</p>\r\n                <div className=\"hr\"></div>\r\n              </div>\r\n              {/* <form action=\"\"> */}\r\n                {/* Legacy Data */}\r\n                <div className=\"form_content\">\r\n                  <p>Legacy data</p>\r\n                  <label htmlFor=\"\">\r\n                      <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"yes\")}>\r\n                      {\r\n                        isLegacyYes ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n                      }\r\n                        Yes\r\n                      </div>\r\n                  </label>\r\n                  <label htmlFor=\"\">\r\n                      <div className=\"islegacy_btn\" onClick={() => handleCheckboxChange(\"no\")}>\r\n                      {\r\n                        isLegacyNo ? <ion-icon name=\"radio-button-on-outline\"></ion-icon>:  <ion-icon name=\"radio-button-off-outline\"></ion-icon>\r\n                      }\r\n                        No\r\n                      </div>\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"search_section\">\r\n                  <div className=\"form_content legacy_search\">\r\n                  {/* search DB */}\r\n                    <input type=\"text\" \r\n                      placeholder={(isLegacyNo && isLegacyYes) ? 'Search Materials' \r\n                          :  \r\n                        ( isLegacyYes ? `Search ${currentUser.company}` : `Search All Materials` )} \r\n                        onChange={(e) => {setValue(e.target.value) }}\r\n                        onKeyPress={handleKeyPress}\r\n                        onClick={(e) => setClicked(!clicked)}\r\n                        value={ value}\r\n                    />\r\n                    <ion-icon name=\"search-outline\"></ion-icon>\r\n                  </div>\r\n\r\n                  {\r\n                    clicked ?  \r\n                    <div className=\"search_suggestion\">\r\n                      <div className='suggested'>\r\n                        {\r\n                          companyMat && companyMat.map((e) => (\r\n                            <p key={e} onClick={()=>getSingleProduct(e)}>{e}</p>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                      <div className=\"form_content\">\r\n                        <div className=\"btn\" onClick={toggleShowContent}>\r\n                          <ion-icon name=\"add-outline\"></ion-icon> Add New\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n                  }\r\n\r\n                </div>\r\n\r\n                {\r\n                  showElements && (\r\n                    <>\r\n                      <div className=\"close\">\r\n                        <div className=\"close_btn\" onClick={clearData}>\r\n                          <ion-icon name=\"close-outline\"></ion-icon> Clear\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"add_element_container\">\r\n                        <div className=\"ade_content\">\r\n                              <Dropdown header={isFormFilledState ? basematerialInfo.MasterClass : \"Class\"} data={masterClass} sendToParent={handleDataReceived}/>\r\n                        </div>\r\n                        <div className=\"ade_content\">\r\n                              <Dropdown header={isFormFilledState ? basematerialInfo.subClass : \"Sub Class\"} data={receivedData && subClass[receivedData].subClass }  sendToParent={handleDataSubClass}/>\r\n                        </div>\r\n                        <div className=\"ade_content\">\r\n                              <Dropdown header={isFormFilledState ? basematerialInfo.Family : \"Family\"} data={receivedSubClass && Family[receivedSubClass].subClass} sendToParent={handleDataFamily}/>\r\n                        </div>\r\n                        {\r\n                          isLegacyYes ? \r\n                          <div className=\"ade_content_input\">\r\n                            <label htmlFor=\"\">Company Name</label>\r\n                            <input type=\"text\" readOnly placeholder={currentUser.company} style={{\"color\":\"black\"}}/>\r\n                          </div> :\r\n                          <div className=\"ade_content_input\">\r\n                            <label htmlFor=\"\">Company Name</label>\r\n                            <input type=\"text\" \r\n                              value={isFormFilledState ? basematerialInfo.company : formData.company}\r\n                              onChange={(e) => setFormData({...formData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\r\n                          </div>\r\n                        }\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Product Name</label>\r\n                          <input type=\"text\" \r\n                            value={isFormFilledState ? basematerialInfo.productName : formData.productName} \r\n                            onChange={(e) => setFormData({...formData, productName:e.target.value})}  name=\"productName\" placeholder=''/>\r\n                        </div>\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Sustainability</label>\r\n                          <input type=\"text\" \r\n                            value={isFormFilledState ? basematerialInfo.Sustainability : formData.Sustainability} \r\n                            onChange={(e) => setFormData({...formData, Sustainability:e.target.value})} name=\"Sustainability\" placeholder=''/>\r\n                        </div>\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Filler</label>\r\n                          <input type=\"text\" \r\n                            value={isFormFilledState ? basematerialInfo.Filler : formData.Filler} \r\n                            onChange={(e) => setFormData({...formData, Filler:e.target.value})} name=\"Filler\" placeholder=''/>\r\n                        </div>\r\n                        <div className=\"ade_content_input\">\r\n                          <label htmlFor=\"\">Delivery form</label>\r\n                          <input type=\"text\" \r\n                            value={isFormFilledState ? basematerialInfo.DeliveryForm : formData.DeliveryForm} \r\n                            onChange={(e) => setFormData({...formData, DeliveryForm:e.target.value})} name=\"Delivery form\" placeholder=''/>\r\n                        </div>\r\n                        {\r\n                          isLegacyNo ? \r\n                          <div className=\"ade_content_input\">\r\n                            <label htmlFor=\"\">Material WebSite</label>\r\n                            <input type=\"text\" onChange={(e) => setFormData({...formData, DeliveryForm:e.target.value})} name=\"Material WebSite\" placeholder=''/>\r\n                          </div> : null\r\n                        }\r\n                      </div>\r\n                      {/* onClick={submitData} */}\r\n                    </>\r\n                  )\r\n                }\r\n\r\n              {/* </form>                       */}\r\n\r\n              <div className=\"next\">\r\n                <div className=\"btn\" onClick={saveData}>\r\n                  Save\r\n                </div>\r\n                {/* <div className=\"btn\" onClick={nextTestStandard} ref={scrollToResult}>Next</div> */}\r\n              </div>\r\n          </div>\r\n\r\n          {/* <div onClick={()=>{isClickedNext(2)}}>\r\n            next\r\n          </div> */}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BaseMaterialinfo","E:\\matship\\frontend\\src\\features\\uploadSlice.js",[],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],[],"E:\\matship\\frontend\\src\\Pages\\Demo.js",["218","219","220","221","222","223","224","225","226","227"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport Nav from '../Components/Nav'\r\nimport '../Styles/Pages/Home.css'\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Maindropdown from '../Components/Maindropdown';\r\n\r\nvar classSet = new Set();\r\nvar subclassSet = new Set();\r\nvar familySet = new Set();\r\nvar m= []\r\n\r\n\r\nvar Class = []\r\nvar SubClass = []\r\nvar FamilyClass = []\r\n\r\nconst hashMap = new Map();\r\nhashMap.set('key1', 1);\r\nhashMap.set('key2', 2);\r\nhashMap.set('key3', 3);\r\n\r\n\r\nfunction Demo() {\r\n    const scrollToResult = useRef();\r\n\r\n    const [isUsedFilter, setIsUsedFilter] = useState(false)\r\n    const [value, setvalue] = useState(\"\");\r\n    const [datas, setDatas] = useState([])\r\n    const [replicaData, setreplicaData] = useState([])\r\n    const [result, setresult] = useState([]);\r\n    const [resultStr, setresultStr] = useState(\"\");\r\n    const [isSearched, setIsSearched] = useState(false);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // Get All the Data and Filter\r\n    const getAllData = async() => {\r\n        try{\r\n            const {data} = await axios.get('/api/materials/getall')\r\n            await setDatas(data)\r\n            console.log(data)\r\n            for (const i of data) {\r\n                classSet.add(i.MasterClass);\r\n                subclassSet.add(i.subClass)\r\n                familySet.add(i.Family)\r\n\r\n                if(!Class.includes(i.MasterClass)){\r\n                    Class.push(i.MasterClass)\r\n                }\r\n                \r\n                if(!SubClass.includes(i.subClass)){\r\n                    SubClass.push(i.subClass)\r\n                }\r\n                \r\n                if(!FamilyClass.includes(i.Family)){\r\n                    FamilyClass.push(i.Family)\r\n                }\r\n            }\r\n\r\n            console.log(Class, SubClass, FamilyClass)\r\n        }catch(err){\r\n            console.log(err)\r\n            navigate('/pagenotfound')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllData()\r\n    }, [])\r\n\r\n\r\n    // Global Search\r\n    const fetchSearch = async(e) => {\r\n        if(e === ''){\r\n            alert(\"Enter data\")\r\n        }else{\r\n            const {data} = await axios.get(`/api/materials/getglobalsearch/${e}`)\r\n            await setresult(data)\r\n            setIsSearched(true)\r\n            scrollToResult.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }\r\n    const submit = async() => {\r\n        await fetchSearch(value)\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault()\r\n            fetchSearch(value);\r\n        }\r\n    }\r\n\r\n\r\n    const resetSearch = async() =>{\r\n        setvalue('')\r\n        setresult('')\r\n        setIsSearched(false)\r\n        getAllData()\r\n    }\r\n\r\n    // Remove Unchecked Value\r\n    const handleRemove = (e) => {\r\n        handleFilter(e, \"Remove\")\r\n    }\r\n    \r\n    // Filter Data\r\n    const handleFilter = async(e, type) => {\r\n        // getAllData()\r\n        let str = resultStr !== null ? resultStr+' '+e : e\r\n        setresultStr(str)\r\n        console.log(\"Str\", str)\r\n        if(type === \"Remove\"){\r\n            str = resultStr.replace(e, \"\").trim();\r\n        }\r\n\r\n        const { data } = await axios.get(`api/materials/getglobalsearch/${str}`);\r\n        await setreplicaData(data);\r\n        console.log(data)\r\n        m = data\r\n        Class.length = 0\r\n        SubClass.length = 0\r\n        FamilyClass.length = 0\r\n        // for (const i of data) {\r\n        //     classSet.add(i.MasterClass);\r\n        //     subclassSet.add(i.subClass)\r\n        //     familySet.add(i.Family)\r\n\r\n        //     if(!Class.includes(i.MasterClass)){\r\n        //         Class.push(i.MasterClass)\r\n        //     }\r\n            \r\n        //     if(!SubClass.includes(i.subClass)){\r\n        //         SubClass.push(i.subClass)\r\n        //     }\r\n            \r\n        //     if(!FamilyClass.includes(i.Family)){\r\n        //         FamilyClass.push(i.Family)\r\n        //     }\r\n        // }\r\n        console.log(classSet, subclassSet, familySet)\r\n        setIsUsedFilter(true);\r\n        setresult(data)\r\n    }\r\n\r\n    // Reset Filter\r\n    const resetFilter = async() => {\r\n        const {data} = await axios.get('api/materials/getall')\r\n        await setDatas(data)\r\n        m = data;\r\n        setresult([])\r\n        setIsUsedFilter(false);\r\n        setresultStr(null)\r\n        getAllData()\r\n    }\r\n    \r\n  return (\r\n    <> \r\n        <Nav />\r\n        <div className=\"home_wrapper\">\r\n            <div className=\"upload_btn\">\r\n                <Link to='/uploadData'>\r\n                    <ion-icon name=\"add-outline\"></ion-icon>\r\n                </Link>\r\n            </div>\r\n            <div className=\"home_container\">\r\n                <div className=\"home_container_header\">\r\n                    <p>Unlocking the World of Materials: Your Search, Our Find!</p>\r\n                </div>\r\n                \r\n                <div className=\"home_section\">\r\n                    <div className=\"globalSearch\">\r\n                        <h2>Global Search</h2>\r\n                        <div className=\"globalSearch_container\">\r\n                            <ion-icon name=\"search-outline\"></ion-icon>\r\n                            <input type=\"text\" value={value} \r\n                                onChange={(e) => setvalue(e.target.value)} \r\n                                onKeyPress={handleKeyPress}\r\n                                name=\"\" placeholder='Search the materials..' />\r\n                            {\r\n                                isSearched ? <ion-icon name=\"close-outline\" onClick={resetSearch}></ion-icon> : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className=\"submit\" style={{marginTop:\"40px\"}}>\r\n                            <div className=\"btn\" onClick={submit}>\r\n                                Search\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"advanced_filter_section\">\r\n                        <h2>Advanced Filter :</h2>\r\n\r\n                        <div className=\"advanced_filter_wrapper\">\r\n                            <form>\r\n                                <Maindropdown data={Class} name={\"Master Class\"} sendToParent={handleFilter} removeFromParent={handleRemove}/>\r\n                                <Maindropdown data={SubClass} name={\"Sub Class\"} sendToParent={handleFilter} removeFromParent={handleRemove}/>\r\n                                <Maindropdown data={FamilyClass} name={\"Family\"} sendToParent={handleFilter} removeFromParent={handleRemove}/>\r\n                            </form>\r\n                        </div>\r\n                        \r\n                    <div className=\"reset_btn\" >\r\n                        <div className=\"btn\" onClick={resetFilter}>\r\n                            Reset\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"result\">\r\n                {result.length === 0 ? <h3></h3> : result.length > 1 ? <h3>{result.length} Results are found</h3>  : <h3>{result.length} Result is found</h3>}\r\n                <div className=\"output\" ref={scrollToResult}>\r\n                {\r\n                    result && result.map((e, _i) => (\r\n                        <div key={_i}>\r\n                            <h2>{e.MasterClass}</h2>\r\n                            <p>{e.productName}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {\r\n                Array.from(hashMap).map((value, key) => (\r\n                    <p key={key}>{value}: {key}</p>\r\n                ))\r\n            }\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Demo\r\n\r\n\r\n{/* <select name=\"Master Class\" className=\"search-select\" onChange={(e) => {handleFilter(e.target.value, e.target.name)}}>\r\n    <option value=\"Master Class\">Master Class</option>\r\n    {\r\n            classSet && Array.from(classSet).map((e, i) => (\r\n                <option value={e} key={i}>{e}</option>\r\n            ))\r\n        \r\n    }\r\n</select> */}\r\n{/* <select name=\"Sub Class\" className=\"search-select\"  onChange={(e) => {handleFilter(e.target.value, e.target.value)}}>\r\n    <option value=\"Sub Class\">Sub Class</option>\r\n    {\r\n            subclassSet && Array.from(subclassSet).map((e, i) => (\r\n                <option value={e} key={i}>{e}</option>\r\n            ))\r\n    }\r\n    {\r\n        isUsedFilter ? m.map((e, i) => (\r\n            <option value={e} key={i}>{e}</option>\r\n        ))  :\r\n        classSet.size > 0 ? Array.from(subclassSet).map((e, i) => (\r\n            <option value={e} key={i}>{e}</option>\r\n        )) : <option value=\"No Results..\">No Results..</option> \r\n    }\r\n</select> */}\r\n{/* <select name=\"Supplier\" className=\"search-select\" >\r\n    <option value=\"Supplier\">Supplier</option>\r\n    {\r\n        \r\n    }\r\n</select> */}\r\n            \r\n{/* <div className=\"dropdown_container\">\r\n    <Dropdown data={isUsedFilter ? m : classSet }/>\r\n</div>\r\n<Dropdown data={isUsedFilter ? m : classSet }/>\r\n<Dropdown data={isUsedFilter ? m : classSet }/> */}","E:\\matship\\frontend\\src\\features\\isFormFilled.js",[],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\TestComponents\\Table.js",["228","229","230","231"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\TestComponents\\Chart.js",["232","233","234","235","236"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\TestCategoryComponent.js",["237","238","239"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\ManualDatasetUpload.js",["240","241","242","243"],[],"E:\\matship\\frontend\\src\\Units.js",[],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\Reusable.js",[],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\ConditionedComponent.js",["244","245","246"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\NumberOfDataset.js",["247","248","249"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527\\Components\\Crosshead.js",["250","251","252"],[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":25,"nodeType":"257","messageId":"258","endLine":2,"endColumn":36},{"ruleId":"255","severity":1,"message":"259","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":11},{"ruleId":"255","severity":1,"message":"260","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":12},{"ruleId":"255","severity":1,"message":"261","line":11,"column":5,"nodeType":"257","messageId":"258","endLine":11,"endColumn":6},{"ruleId":"255","severity":1,"message":"262","line":20,"column":12,"nodeType":"257","messageId":"258","endLine":20,"endColumn":24},{"ruleId":"255","severity":1,"message":"263","line":22,"column":12,"nodeType":"257","messageId":"258","endLine":22,"endColumn":17},{"ruleId":"255","severity":1,"message":"264","line":23,"column":12,"nodeType":"257","messageId":"258","endLine":23,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":66,"column":8,"nodeType":"267","endLine":66,"endColumn":18,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":234,"column":40,"nodeType":"271","endLine":234,"endColumn":44},{"ruleId":"255","severity":1,"message":"272","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":42,"column":11,"nodeType":"275","messageId":"276","endLine":44,"endColumn":16},{"ruleId":"253","replacedBy":"277"},{"ruleId":"255","severity":1,"message":"278","line":13,"column":22,"nodeType":"257","messageId":"258","endLine":13,"endColumn":27},{"ruleId":"255","severity":1,"message":"272","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"278","line":9,"column":12,"nodeType":"257","messageId":"258","endLine":9,"endColumn":17},{"ruleId":"255","severity":1,"message":"272","line":336,"column":17,"nodeType":"257","messageId":"258","endLine":336,"endColumn":26},{"ruleId":"255","severity":1,"message":"279","line":348,"column":10,"nodeType":"257","messageId":"258","endLine":348,"endColumn":21},{"ruleId":"255","severity":1,"message":"280","line":350,"column":9,"nodeType":"257","messageId":"258","endLine":350,"endColumn":17},{"ruleId":"273","severity":1,"message":"274","line":67,"column":11,"nodeType":"275","messageId":"276","endLine":69,"endColumn":16},{"ruleId":"255","severity":1,"message":"272","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"272","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"259","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":11},{"ruleId":"255","severity":1,"message":"281","line":39,"column":9,"nodeType":"257","messageId":"258","endLine":39,"endColumn":19},{"ruleId":"255","severity":1,"message":"282","line":136,"column":10,"nodeType":"257","messageId":"258","endLine":136,"endColumn":24},{"ruleId":"255","severity":1,"message":"283","line":162,"column":9,"nodeType":"257","messageId":"258","endLine":162,"endColumn":21},{"ruleId":"255","severity":1,"message":"284","line":193,"column":10,"nodeType":"257","messageId":"258","endLine":193,"endColumn":28},{"ruleId":"255","severity":1,"message":"285","line":195,"column":9,"nodeType":"257","messageId":"258","endLine":195,"endColumn":25},{"ruleId":"255","severity":1,"message":"286","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"287","line":1,"column":48,"nodeType":"257","messageId":"258","endLine":1,"endColumn":55},{"ruleId":"255","severity":1,"message":"288","line":5,"column":13,"nodeType":"257","messageId":"258","endLine":5,"endColumn":17},{"ruleId":"255","severity":1,"message":"289","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":13},{"ruleId":"255","severity":1,"message":"290","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":13},{"ruleId":"255","severity":1,"message":"291","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":16},{"ruleId":"265","severity":1,"message":"292","line":46,"column":6,"nodeType":"267","endLine":46,"endColumn":29,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":52,"column":20,"nodeType":"296","messageId":"297","endLine":52,"endColumn":22},{"ruleId":"294","severity":1,"message":"295","line":52,"column":37,"nodeType":"296","messageId":"297","endLine":52,"endColumn":39},{"ruleId":"294","severity":1,"message":"295","line":113,"column":23,"nodeType":"296","messageId":"297","endLine":113,"endColumn":25},{"ruleId":"255","severity":1,"message":"298","line":127,"column":23,"nodeType":"257","messageId":"258","endLine":127,"endColumn":37},{"ruleId":"255","severity":1,"message":"299","line":129,"column":9,"nodeType":"257","messageId":"258","endLine":129,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":173,"column":23,"nodeType":"296","messageId":"297","endLine":173,"endColumn":25},{"ruleId":"265","severity":1,"message":"292","line":199,"column":5,"nodeType":"267","endLine":199,"endColumn":14,"suggestions":"300"},{"ruleId":"265","severity":1,"message":"292","line":203,"column":5,"nodeType":"267","endLine":203,"endColumn":14,"suggestions":"301"},{"ruleId":"265","severity":1,"message":"292","line":208,"column":5,"nodeType":"267","endLine":208,"endColumn":20,"suggestions":"302"},{"ruleId":"255","severity":1,"message":"303","line":213,"column":21,"nodeType":"257","messageId":"258","endLine":213,"endColumn":33},{"ruleId":"255","severity":1,"message":"304","line":216,"column":9,"nodeType":"257","messageId":"258","endLine":216,"endColumn":28},{"ruleId":"305","severity":1,"message":"306","line":224,"column":21,"nodeType":"307","messageId":"308","endLine":224,"endColumn":32},{"ruleId":"305","severity":1,"message":"306","line":227,"column":23,"nodeType":"307","messageId":"308","endLine":227,"endColumn":34},{"ruleId":"255","severity":1,"message":"309","line":241,"column":21,"nodeType":"257","messageId":"258","endLine":241,"endColumn":33},{"ruleId":"255","severity":1,"message":"310","line":242,"column":10,"nodeType":"257","messageId":"258","endLine":242,"endColumn":19},{"ruleId":"255","severity":1,"message":"311","line":243,"column":10,"nodeType":"257","messageId":"258","endLine":243,"endColumn":19},{"ruleId":"255","severity":1,"message":"312","line":244,"column":10,"nodeType":"257","messageId":"258","endLine":244,"endColumn":19},{"ruleId":"255","severity":1,"message":"313","line":244,"column":21,"nodeType":"257","messageId":"258","endLine":244,"endColumn":33},{"ruleId":"255","severity":1,"message":"314","line":248,"column":9,"nodeType":"257","messageId":"258","endLine":248,"endColumn":21},{"ruleId":"255","severity":1,"message":"261","line":11,"column":5,"nodeType":"257","messageId":"258","endLine":11,"endColumn":6},{"ruleId":"255","severity":1,"message":"262","line":27,"column":12,"nodeType":"257","messageId":"258","endLine":27,"endColumn":24},{"ruleId":"255","severity":1,"message":"263","line":29,"column":12,"nodeType":"257","messageId":"258","endLine":29,"endColumn":17},{"ruleId":"255","severity":1,"message":"264","line":30,"column":12,"nodeType":"257","messageId":"258","endLine":30,"endColumn":23},{"ruleId":"265","severity":1,"message":"315","line":70,"column":8,"nodeType":"267","endLine":70,"endColumn":10,"suggestions":"316"},{"ruleId":"269","severity":1,"message":"270","line":214,"column":40,"nodeType":"271","endLine":214,"endColumn":44},{"ruleId":"273","severity":1,"message":"274","line":241,"column":1,"nodeType":"275","messageId":"276","endLine":249,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":250,"column":1,"nodeType":"275","messageId":"276","endLine":265,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":266,"column":1,"nodeType":"275","messageId":"276","endLine":271,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":273,"column":1,"nodeType":"275","messageId":"276","endLine":277,"endColumn":52},{"ruleId":"255","severity":1,"message":"317","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"318","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":21},{"ruleId":"255","severity":1,"message":"319","line":3,"column":23,"nodeType":"257","messageId":"258","endLine":3,"endColumn":34},{"ruleId":"265","severity":1,"message":"320","line":83,"column":8,"nodeType":"267","endLine":83,"endColumn":21,"suggestions":"321"},{"ruleId":"255","severity":1,"message":"322","line":13,"column":10,"nodeType":"257","messageId":"258","endLine":13,"endColumn":14},{"ruleId":"255","severity":1,"message":"323","line":28,"column":16,"nodeType":"257","messageId":"258","endLine":28,"endColumn":23},{"ruleId":"265","severity":1,"message":"324","line":41,"column":6,"nodeType":"267","endLine":41,"endColumn":12,"suggestions":"325"},{"ruleId":"255","severity":1,"message":"326","line":43,"column":9,"nodeType":"257","messageId":"258","endLine":43,"endColumn":13},{"ruleId":"255","severity":1,"message":"327","line":61,"column":9,"nodeType":"257","messageId":"258","endLine":61,"endColumn":16},{"ruleId":"255","severity":1,"message":"272","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"328","line":1,"column":38,"nodeType":"257","messageId":"258","endLine":1,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":23,"column":23,"nodeType":"296","messageId":"297","endLine":23,"endColumn":25},{"ruleId":"255","severity":1,"message":"329","line":7,"column":12,"nodeType":"257","messageId":"258","endLine":7,"endColumn":23},{"ruleId":"255","severity":1,"message":"330","line":7,"column":25,"nodeType":"257","messageId":"258","endLine":7,"endColumn":39},{"ruleId":"255","severity":1,"message":"331","line":8,"column":12,"nodeType":"257","messageId":"258","endLine":8,"endColumn":23},{"ruleId":"255","severity":1,"message":"332","line":8,"column":25,"nodeType":"257","messageId":"258","endLine":8,"endColumn":39},{"ruleId":"255","severity":1,"message":"272","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"328","line":1,"column":38,"nodeType":"257","messageId":"258","endLine":1,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":31,"column":31,"nodeType":"296","messageId":"297","endLine":31,"endColumn":33},{"ruleId":"255","severity":1,"message":"272","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"328","line":1,"column":38,"nodeType":"257","messageId":"258","endLine":1,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":22,"column":23,"nodeType":"296","messageId":"297","endLine":22,"endColumn":25},{"ruleId":"255","severity":1,"message":"272","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"328","line":1,"column":38,"nodeType":"257","messageId":"258","endLine":1,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":22,"column":23,"nodeType":"296","messageId":"297","endLine":22,"endColumn":25},"no-new-object",["333"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Demo' is defined but never used.","'m' is assigned a value but never used.","'isUsedFilter' is assigned a value but never used.","'datas' is assigned a value but never used.","'replicaData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array. Outer scope values like 'classMap' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["334"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["333"],"'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'nextPage' is assigned a value but never used.","'submitData' is assigned a value but never used.","'receivedFamily' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'isNextTestStandard' is assigned a value but never used.","'nextTestStandard' is assigned a value but never used.","'Children' is defined but never used.","'useMemo' is defined but never used.","'XLSX' is defined but never used.","'Table' is defined but never used.","'Chart' is defined but never used.","'Reusable' is defined but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["335"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setY_axisUnits' is assigned a value but never used.","'getYUnits' is assigned a value but never used.",["336"],["337"],["338"],"'setUserInput' is assigned a value but never used.","'createDynamicObject' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'setExcelData' is assigned a value but never used.","'xAxisData' is assigned a value but never used.","'yAxisData' is assigned a value but never used.","'tableData' is assigned a value but never used.","'setTableData' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array.",["339"],"'testStandardInfo' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'index', 'sendToParent', and 'sno'. Either include them or remove the dependency array. If 'sendToParent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["340"],"'Line' is defined but never used.","'setPlot' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataForPlot'. Either include it or remove the dependency array.",["341"],"'data' is assigned a value but never used.","'options' is assigned a value but never used.","'useRef' is defined but never used.","'x_axisValue' is assigned a value but never used.","'setX_axisValue' is assigned a value but never used.","'y_axisValue' is assigned a value but never used.","'setY_axisValue' is assigned a value but never used.","no-object-constructor",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"342","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [getAllData]",{"range":"357","text":"358"},"Update the dependencies array to be: [formData, formData.SpecimenType]",{"range":"359","text":"360"},"Update the dependencies array to be: [formData, x_axis]",{"range":"361","text":"362"},"Update the dependencies array to be: [formData, y_axis]",{"range":"363","text":"364"},"Update the dependencies array to be: [dynamicArray, formData]",{"range":"365","text":"366"},{"range":"367","text":"358"},"Update the dependencies array to be: [data, index, plotClicked, sendToParent, sno]",{"range":"368","text":"369"},"Update the dependencies array to be: [dataForPlot, plot]",{"range":"370","text":"371"},[2180,2190],"[getAllData]",[1647,1670],"[formData, formData.SpecimenType]",[6429,6438],"[formData, x_axis]",[6515,6524],"[formData, y_axis]",[6643,6658],"[dynamicArray, formData]",[2024,2026],[2438,2451],"[data, index, plotClicked, sendToParent, sno]",[783,789],"[dataForPlot, plot]"]