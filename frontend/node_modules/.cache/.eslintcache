[{"E:\\matship\\frontend\\src\\index.js":"1","E:\\matship\\frontend\\src\\App.js":"2","E:\\matship\\frontend\\src\\app\\store.js":"3","E:\\matship\\frontend\\src\\Components\\Nav.js":"4","E:\\matship\\frontend\\src\\Pages\\Home.js":"5","E:\\matship\\frontend\\src\\Components\\Dropdown.js":"6","E:\\matship\\frontend\\src\\constants.js":"7","E:\\matship\\frontend\\src\\Pages\\Login.js":"8","E:\\matship\\frontend\\src\\Pages\\Register.js":"9","E:\\matship\\frontend\\src\\features\\userSlice.js":"10","E:\\matship\\frontend\\src\\Components\\PrivateRoute.js":"11","E:\\matship\\frontend\\src\\Pages\\Pagenotfound.js":"12","E:\\matship\\frontend\\src\\Pages\\Upload.js":"13","E:\\matship\\frontend\\src\\TypesOfMaterials.js":"14","E:\\matship\\frontend\\src\\Components\\Maindropdown.js":"15","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\TestStandards.js":"16","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\BaseMaterialinfo.js":"17","E:\\matship\\frontend\\src\\features\\uploadSlice.js":"18","E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527.js":"19","E:\\matship\\frontend\\src\\Pages\\Demo.js":"20"},{"size":623,"mtime":1699617653330,"results":"21","hashOfConfig":"22"},{"size":920,"mtime":1699616032480,"results":"23","hashOfConfig":"22"},{"size":755,"mtime":1698987530736,"results":"24","hashOfConfig":"22"},{"size":1769,"mtime":1696488668260,"results":"25","hashOfConfig":"22"},{"size":10740,"mtime":1699626379118,"results":"26","hashOfConfig":"22"},{"size":1420,"mtime":1698063892471,"results":"27","hashOfConfig":"22"},{"size":288,"mtime":1696049184000,"results":"28","hashOfConfig":"22"},{"size":3675,"mtime":1698125882297,"results":"29","hashOfConfig":"22"},{"size":5918,"mtime":1698125618739,"results":"30","hashOfConfig":"22"},{"size":1635,"mtime":1696439197503,"results":"31","hashOfConfig":"22"},{"size":269,"mtime":1696483949934,"results":"32","hashOfConfig":"22"},{"size":337,"mtime":1696603422982,"results":"33","hashOfConfig":"22"},{"size":14651,"mtime":1698936129340,"results":"34","hashOfConfig":"22"},{"size":542,"mtime":1698328483050,"results":"35","hashOfConfig":"22"},{"size":2748,"mtime":1699621054721,"results":"36","hashOfConfig":"22"},{"size":998,"mtime":1698988833919,"results":"37","hashOfConfig":"22"},{"size":12745,"mtime":1699599294303,"results":"38","hashOfConfig":"22"},{"size":577,"mtime":1699453975622,"results":"39","hashOfConfig":"22"},{"size":14301,"mtime":1699605763548,"results":"40","hashOfConfig":"22"},{"size":9270,"mtime":1699616008485,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d09bb8",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\matship\\frontend\\src\\index.js",[],[],"E:\\matship\\frontend\\src\\App.js",["107","108","109"],[],"E:\\matship\\frontend\\src\\app\\store.js",[],[],"E:\\matship\\frontend\\src\\Components\\Nav.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Home.js",["110","111","112","113","114","115","116","117","118","119"],[],"E:\\matship\\frontend\\src\\Components\\Dropdown.js",["120","121"],[],"E:\\matship\\frontend\\src\\constants.js",[],[],["122"],"E:\\matship\\frontend\\src\\Pages\\Login.js",["123"],[],"E:\\matship\\frontend\\src\\Pages\\Register.js",["124","125"],[],"E:\\matship\\frontend\\src\\features\\userSlice.js",[],[],["126"],"E:\\matship\\frontend\\src\\Components\\PrivateRoute.js",[],[],"E:\\matship\\frontend\\src\\Pages\\Pagenotfound.js",[],[],["127"],"E:\\matship\\frontend\\src\\Pages\\Upload.js",[],[],"E:\\matship\\frontend\\src\\TypesOfMaterials.js",[],[],"E:\\matship\\frontend\\src\\Components\\Maindropdown.js",["128","129"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\TestStandards.js",["130"],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\BaseMaterialinfo.js",["131","132","133","134","135","136","137"],[],"E:\\matship\\frontend\\src\\features\\uploadSlice.js",[],[],"E:\\matship\\frontend\\src\\Pages\\UPLOAD\\Tests\\ISO527.js",["138","139","140","141","142","143","144","145","146","147","148"],[],"import React, { Children, useEffect, useState } from 'react'\r\nimport \"../../../Styles/Pages/Test.css\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { testStandardInfo } from '../../../features/uploadSlice'\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction ISO527() {\r\n  const dispatch = useDispatch()\r\n  const [numberOfDataSets, setNumberOfDataSets] = useState(0)\r\n  const [specimenClicked, setSpecimenClicked] = useState(false)\r\n  const [testData, setTestData] = useState({\r\n    testStandard:\"ISO527\",\r\n    SpecimenType:\"\",\r\n    L0:0,\r\n    h:0,\r\n    temp:[],\r\n    conditioned:[],\r\n    NumberOf_Specimens:[],\r\n    CrossHeadSpeed:[],\r\n    x_axis:[],\r\n    y_axis:[]\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(testData.SpecimenType === \"1A\"){\r\n      setTestData({...testData, L0:75, h:4})\r\n    }\r\n\r\n    if(testData.SpecimenType === \"1B\"){\r\n      setTestData({...testData, L0:50, h:4})\r\n    }\r\n\r\n  }, [testData.SpecimenType])\r\n\r\n  // Add DataSheet\r\n  const [isaddDataSheet, setIsAddDataSheet] = useState(false) \r\n  const addDataSheet = () => {\r\n    if(testData.L0 ==0 || testData.h==0 ){\r\n      alert(\"Enter L0 and h values\")\r\n    }else{\r\n      setIsAddDataSheet(true)\r\n    }\r\n  }\r\n\r\n  const [isCreateClicked, setisCreateClicked] = useState(false);\r\n\r\n  // Create Temperature Input Fields\r\n  const [temperature, setTemperature] = useState([]);\r\n \r\n  const createTemperatureTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <input \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setTemperature((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  };\r\n\r\n  // Create Conditioned Input Fields\r\n  const [conditioned, setConditioned] = useState([]);\r\n  const createConditionedTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setConditioned((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"DAM\">DAM</option>\r\n              <option value=\"RH50\">RH50</option>\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create No of Specimens\r\n  const [noOfSpecimens, setNoOfSpecimens] = useState([])\r\n  const  createNoOfSpecimensTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            <input \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setNoOfSpecimens((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Cross Head\r\n  const [crossHeads, setCrossHeads] = useState([]);\r\n  const createCrossheadTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            <input \r\n              key={i} type=\"Number\" onChange={(event) => {\r\n                setCrossHeads((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create X Axis Fields\r\n  const [x_axis, setX_axis] = useState([]);\r\n  const createX_axisTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"text\" onChange={(event) => {\r\n                setX_axis((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Engineering Strain(%)\">Engineering Strain(%)</option>\r\n              <option value=\"Engineering Stress(MPa)\">Engineering Stress(MPa)</option>\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n  // Create X Axis Fields\r\n  const [y_axis, setY_axis] = useState([]);\r\n  const createY_axisTags = () => {\r\n    const inputTags = [];\r\n    for (let i = 0; i < numberOfDataSets; i++) {\r\n      inputTags.push(\r\n        <div key={i} className='test_data_box'>\r\n            {/* <p>D{i+1}</p> */}\r\n            <select \r\n              key={i} type=\"text\" onChange={(event) => {\r\n                setY_axis((prevInputValues) => {\r\n                  const newInputValues = [...prevInputValues];\r\n                  newInputValues[i] = event.target.value;\r\n                  return newInputValues;\r\n                });\r\n              }} \r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Engineering Strain(%)\">Engineering Strain(%)</option>\r\n              <option value=\"Engineering Stress(MPa)\">Engineering Stress(MPa)</option>\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n    return inputTags;\r\n  }\r\n\r\n\r\n  const createDataset = () => {\r\n    if(numberOfDataSets > 0){\r\n      setisCreateClicked((p)=>!p)\r\n    }\r\n  }\r\n\r\n  const saveData = async() => {\r\n    await dispatch(testStandardInfo(testData))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, temp:temperature})\r\n  },[ temperature])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, NumberOf_Specimens:noOfSpecimens})\r\n  },[ noOfSpecimens])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, conditioned:conditioned})\r\n  },[ conditioned])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, CrossHeadSpeed:crossHeads})\r\n  },[crossHeads])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, x_axis:x_axis})\r\n  },[ x_axis])\r\n\r\n  useEffect(() => {\r\n    setTestData({...testData, y_axis:y_axis})\r\n  },[ y_axis])\r\n\r\n\r\n\r\n\r\n  // Handling Files\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(e.target.files[0]);\r\n    reader.onload = (e) => {\r\n      const data = e.target.result;\r\n      const workbook = XLSX.read(data, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n      setData(parsedData);\r\n      console.log(parsedData)\r\n    };\r\n  }\r\n  return (\r\n    <>\r\n        <div className=\"test_container\">\r\n           <div className=\"test_header\">\r\n            <ion-icon name=\"add-outline\"></ion-icon>\r\n              <p>Test Standard : \r\n                <span>\r\n                  ISO527 Test\r\n                </span>\r\n              </p>\r\n           </div>\r\n            <div className=\"test_wrapper\">\r\n              <div className=\"test_content_item\">\r\n                <select onChange={(e) =>{\r\n                    setTestData({...testData, SpecimenType:e.target.value});\r\n                    setSpecimenClicked(true)\r\n                  } \r\n                }>\r\n                  <option value=\"Select Test Standard\">Specimen Type</option>\r\n                  <option value=\"1A\">1A</option>\r\n                  <option value=\"1B\">1B</option>\r\n                  <option value=\"Custom\">Custom</option>\r\n                </select>\r\n              </div>\r\n                {\r\n                  specimenClicked && (\r\n                    testData.SpecimenType !== \"Custom\" ? \r\n                    (\r\n                      testData.SpecimenType === \"1A\" ? (\r\n                        <div className=\"test_content_item\">\r\n                          <div className=\"content_item\">\r\n                            <span>\r\n                              L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, L0:e.target.value})} placeholder='75' />\r\n                            </span>\r\n                            <span>\r\n                              h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, h:e.target.value})} placeholder='4' />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                      : \r\n                      (\r\n                        <div className=\"test_content_item\">\r\n                          <div className=\"content_item\">\r\n                            <span>\r\n                              L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, L0:e.target.value})} placeholder=\"50\" />\r\n                            </span>\r\n                            <span>\r\n                              h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, h:e.target.value})} placeholder='4' />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )\r\n                    : \r\n                    (\r\n                      <div className=\"test_content_item\">\r\n                        <div className=\"content_item\">\r\n                          <span>\r\n                            L0 <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, L0:e.target.value})} />\r\n                          </span>\r\n                          <span>\r\n                            h <sub>(mm)</sub>: <input type=\"number\" onChange={(e) => setTestData({...testData, h:e.target.value})} />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  )\r\n              }\r\n              <div className=\"test_content_item\">\r\n                <div className=\"\" onClick={addDataSheet}>\r\n                 <div className=\"add\">\r\n                  Add Datasheets  <ion-icon name=\"caret-down-outline\"></ion-icon> \r\n                 </div>\r\n                </div>\r\n              </div>  \r\n              {\r\n                isaddDataSheet && (\r\n                  <div className=\"test_content_item\">\r\n                    <span>\r\n                      <h4>Number of Datasets :</h4>\r\n                      <input type=\"number\" onChange={(e) =>setNumberOfDataSets(e.target.value)} id=\"\" />\r\n                    </span>\r\n                    <div className=\"btn\" onClick={createDataset}>\r\n                      Create Datasets\r\n                    </div>\r\n                    <div className=\"skip\">\r\n                      Skip To add Processed data <ion-icon name=\"arrow-forward-outline\"></ion-icon>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n          isCreateClicked ? \r\n          (\r\n            <div className=\"test_container\">\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon> Temperature(c)</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createTemperatureTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon> Conditioned</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createConditionedTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Number of Specimens / Dataset </p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createNoOfSpecimensTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Crosshead Speed (mm/min)</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createCrossheadTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>X-Axis</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ?  createX_axisTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <>\r\n                <div className=\"test_container_box\">\r\n                  <p><ion-icon name=\"add-outline\"></ion-icon>Y-Axis</p>\r\n                  <div className=\"test_container_inputs\">\r\n                    {isCreateClicked ? createY_axisTags() : \"\"}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n          ):\"\"\r\n        }\r\n\r\n\r\n        <div className=\"next\">\r\n            <div className=\"btn\" onClick={saveData}>\r\n              Save\r\n            </div>\r\n        </div>\r\n\r\n        <input \r\n          type=\"file\" \r\n          accept=\".xlsx, .xls\" \r\n          onChange={handleFileUpload} \r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ISO527",["149"],"E:\\matship\\frontend\\src\\Pages\\Demo.js",["150","151","152","153","154","155","156","157","158","159"],[],{"ruleId":"160","severity":1,"message":"161","line":2,"column":25,"nodeType":"162","messageId":"163","endLine":2,"endColumn":36},{"ruleId":"160","severity":1,"message":"164","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":11},{"ruleId":"160","severity":1,"message":"165","line":10,"column":8,"nodeType":"162","messageId":"163","endLine":10,"endColumn":12},{"ruleId":"160","severity":1,"message":"166","line":11,"column":5,"nodeType":"162","messageId":"163","endLine":11,"endColumn":6},{"ruleId":"160","severity":1,"message":"167","line":26,"column":12,"nodeType":"162","messageId":"163","endLine":26,"endColumn":24},{"ruleId":"160","severity":1,"message":"168","line":28,"column":12,"nodeType":"162","messageId":"163","endLine":28,"endColumn":17},{"ruleId":"160","severity":1,"message":"169","line":29,"column":12,"nodeType":"162","messageId":"163","endLine":29,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":90,"column":8,"nodeType":"172","endLine":90,"endColumn":18,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":252,"column":40,"nodeType":"176","endLine":252,"endColumn":44},{"ruleId":"177","severity":1,"message":"178","line":273,"column":1,"nodeType":"179","messageId":"180","endLine":281,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":282,"column":1,"nodeType":"179","messageId":"180","endLine":297,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":298,"column":1,"nodeType":"179","messageId":"180","endLine":303,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":305,"column":1,"nodeType":"179","messageId":"180","endLine":309,"endColumn":52},{"ruleId":"160","severity":1,"message":"181","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"178","line":42,"column":11,"nodeType":"179","messageId":"180","endLine":44,"endColumn":16},{"ruleId":"182","replacedBy":"183"},{"ruleId":"160","severity":1,"message":"184","line":13,"column":22,"nodeType":"162","messageId":"163","endLine":13,"endColumn":27},{"ruleId":"160","severity":1,"message":"181","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"184","line":9,"column":12,"nodeType":"162","messageId":"163","endLine":9,"endColumn":17},{"ruleId":"182","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"160","severity":1,"message":"181","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"178","line":71,"column":11,"nodeType":"179","messageId":"180","endLine":73,"endColumn":16},{"ruleId":"160","severity":1,"message":"181","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"181","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"164","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":11},{"ruleId":"160","severity":1,"message":"187","line":35,"column":9,"nodeType":"162","messageId":"163","endLine":35,"endColumn":19},{"ruleId":"160","severity":1,"message":"188","line":130,"column":10,"nodeType":"162","messageId":"163","endLine":130,"endColumn":24},{"ruleId":"160","severity":1,"message":"189","line":156,"column":9,"nodeType":"162","messageId":"163","endLine":156,"endColumn":21},{"ruleId":"160","severity":1,"message":"190","line":187,"column":10,"nodeType":"162","messageId":"163","endLine":187,"endColumn":28},{"ruleId":"160","severity":1,"message":"191","line":189,"column":9,"nodeType":"162","messageId":"163","endLine":189,"endColumn":25},{"ruleId":"160","severity":1,"message":"192","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"193","line":33,"column":6,"nodeType":"172","endLine":33,"endColumn":29,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":38,"column":20,"nodeType":"197","messageId":"198","endLine":38,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":38,"column":37,"nodeType":"197","messageId":"198","endLine":38,"endColumn":39},{"ruleId":"170","severity":1,"message":"193","line":210,"column":5,"nodeType":"172","endLine":210,"endColumn":19,"suggestions":"199"},{"ruleId":"170","severity":1,"message":"193","line":214,"column":5,"nodeType":"172","endLine":214,"endColumn":21,"suggestions":"200"},{"ruleId":"170","severity":1,"message":"193","line":218,"column":5,"nodeType":"172","endLine":218,"endColumn":19,"suggestions":"201"},{"ruleId":"170","severity":1,"message":"193","line":222,"column":5,"nodeType":"172","endLine":222,"endColumn":17,"suggestions":"202"},{"ruleId":"170","severity":1,"message":"193","line":226,"column":5,"nodeType":"172","endLine":226,"endColumn":14,"suggestions":"203"},{"ruleId":"170","severity":1,"message":"193","line":230,"column":5,"nodeType":"172","endLine":230,"endColumn":14,"suggestions":"204"},{"ruleId":"160","severity":1,"message":"205","line":236,"column":10,"nodeType":"162","messageId":"163","endLine":236,"endColumn":14},{"ruleId":"182","replacedBy":"206"},{"ruleId":"160","severity":1,"message":"166","line":11,"column":5,"nodeType":"162","messageId":"163","endLine":11,"endColumn":6},{"ruleId":"160","severity":1,"message":"167","line":27,"column":12,"nodeType":"162","messageId":"163","endLine":27,"endColumn":24},{"ruleId":"160","severity":1,"message":"168","line":29,"column":12,"nodeType":"162","messageId":"163","endLine":29,"endColumn":17},{"ruleId":"160","severity":1,"message":"169","line":30,"column":12,"nodeType":"162","messageId":"163","endLine":30,"endColumn":23},{"ruleId":"170","severity":1,"message":"207","line":70,"column":8,"nodeType":"172","endLine":70,"endColumn":10,"suggestions":"208"},{"ruleId":"174","severity":1,"message":"175","line":214,"column":40,"nodeType":"176","endLine":214,"endColumn":44},{"ruleId":"177","severity":1,"message":"178","line":241,"column":1,"nodeType":"179","messageId":"180","endLine":249,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":250,"column":1,"nodeType":"179","messageId":"180","endLine":265,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":266,"column":1,"nodeType":"179","messageId":"180","endLine":271,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":273,"column":1,"nodeType":"179","messageId":"180","endLine":277,"endColumn":52},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Demo' is defined but never used.","'m' is assigned a value but never used.","'isUsedFilter' is assigned a value but never used.","'datas' is assigned a value but never used.","'replicaData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array. Outer scope values like 'classMap' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["209"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","no-new-object",["210"],"'error' is assigned a value but never used.",["210"],["210"],"'submitData' is assigned a value but never used.","'receivedFamily' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'isNextTestStandard' is assigned a value but never used.","'nextTestStandard' is assigned a value but never used.","'Children' is defined but never used.","React Hook useEffect has a missing dependency: 'testData'. Either include it or remove the dependency array. You can also do a functional update 'setTestData(t => ...)' if you only need 'testData' in the 'setTestData' call.",["211"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["212"],["213"],["214"],["215"],["216"],["217"],"'data' is assigned a value but never used.",["210"],"React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array.",["218"],{"desc":"219","fix":"220"},"no-object-constructor",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"219","fix":"235"},"Update the dependencies array to be: [getAllData]",{"range":"236","text":"237"},"Update the dependencies array to be: [testData, testData.SpecimenType]",{"range":"238","text":"239"},"Update the dependencies array to be: [temperature, testData]",{"range":"240","text":"241"},"Update the dependencies array to be: [noOfSpecimens, testData]",{"range":"242","text":"243"},"Update the dependencies array to be: [conditioned, testData]",{"range":"244","text":"245"},"Update the dependencies array to be: [crossHeads, testData]",{"range":"246","text":"247"},"Update the dependencies array to be: [testData, x_axis]",{"range":"248","text":"249"},"Update the dependencies array to be: [testData, y_axis]",{"range":"250","text":"251"},{"range":"252","text":"237"},[2831,2841],"[getAllData]",[890,913],"[testData, testData.SpecimenType]",[6427,6441],"[temperature, testData]",[6537,6553],"[noOfSpecimens, testData]",[6640,6654],"[conditioned, testData]",[6743,6755],"[crossHeads, testData]",[6832,6841],"[testData, x_axis]",[6918,6927],"[testData, y_axis]",[2024,2026]]